import { Method } from '../../model';
import { ExamplesParser, ParamsParser } from './';
export declare class MethodsParser {
    protected params: ParamsParser;
    protected examples: ExamplesParser;
    getMethods(obj: any): Method[];
    parseMethod(obj: any): Method;
    getDescription(obj: any): string;
    getIsPrivate(obj: any): boolean;
    getIsInherited(obj: any): boolean;
    getShortDescription(obj: any): string;
    getType(obj: any): string[];
    determineType(obj: any): any;
    parseIntrinsic(obj: any): any;
    parseReference(obj: any): any;
    parseReferenceFromTypeArguments(obj: any): any;
    parseReferenceFromTypeArgumentsChildren(obj: any): string;
    parseReferenceFromTypeArgumentsElementType(obj: any): string;
    parseReflection(obj: any): string;
    parseTypeFromReflectionChildren(obj: any): string;
    parseTypeFromReflectionIndexSignature(obj: any): string;
    parseTypeFromSignature(obj: any): string;
    parseTypeParameter(obj: any): any;
    parseArray(obj: any): string;
    isStatic(obj: any): boolean;
    isMethod(obj: any): boolean;
    isConstructor(obj: any): boolean;
    isHasDescription(obj: any): any;
    isIntrinsic(obj: any): boolean;
    isReference(obj: any): boolean;
    isReflection(obj: any): boolean;
    isArray(obj: any): boolean;
    isTypeParameter(obj: any): boolean;
}

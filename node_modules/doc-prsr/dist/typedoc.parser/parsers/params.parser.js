"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = require("../../model");
var typedoc_parser_options_1 = require("../typedoc.parser.options");
var ParamsParser = /** @class */ (function () {
    function ParamsParser() {
    }
    ParamsParser.prototype.getParams = function (obj) {
        var _this = this;
        if (this.isHasParams(obj)) {
            return obj[typedoc_parser_options_1.CO.signatures][0][typedoc_parser_options_1.CO.parameters]
                .map(function (item) { return _this.parseParam(item); });
        }
        else {
            return [];
        }
    };
    ParamsParser.prototype.parseParam = function (param) {
        return new model_1.Param({
            name: param[typedoc_parser_options_1.CO.name],
            type: this.getType(param),
            required: null,
            shortDescription: this.getShortDescription(param),
            description: this.getDescription(param)
        });
    };
    ParamsParser.prototype.getType = function (param) {
        if (param && param[typedoc_parser_options_1.CO.type]) {
            var type = '';
            if (param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.type] && param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.type] === 'reference') {
                if (param[typedoc_parser_options_1.CO.comment] && param[typedoc_parser_options_1.CO.comment][typedoc_parser_options_1.CO.text]) {
                    type = param[typedoc_parser_options_1.CO.comment][typedoc_parser_options_1.CO.text];
                }
                else {
                    type = param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.name];
                }
            }
            else if (param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.type] && param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.type] === 'intrinsic') {
                type = param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.name];
            }
            else if (param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.type] && param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.type] === 'array') {
                type = param[typedoc_parser_options_1.CO.type][typedoc_parser_options_1.CO.elementType][typedoc_parser_options_1.CO.name] + '[]';
            }
            return type;
        }
        else {
            return '';
        }
    };
    ParamsParser.prototype.getDescription = function (param) {
        if (param && param[typedoc_parser_options_1.CO.comment]) {
            return param[typedoc_parser_options_1.CO.comment]['text'];
        }
        else {
            return '';
        }
    };
    ParamsParser.prototype.getShortDescription = function (param) {
        if (param && param[typedoc_parser_options_1.CO.comment]) {
            return param[typedoc_parser_options_1.CO.comment]['shortText'];
        }
        else {
            return '';
        }
    };
    ParamsParser.prototype.isHasParams = function (obj) {
        return obj && obj[typedoc_parser_options_1.CO.signatures] && obj[typedoc_parser_options_1.CO.signatures][0][typedoc_parser_options_1.CO.parameters];
    };
    return ParamsParser;
}());
exports.ParamsParser = ParamsParser;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = require("../../model");
var doc_js_parser_options_1 = require("../doc-js.parser.options");
var StylesParser = /** @class */ (function () {
    function StylesParser() {
    }
    StylesParser.prototype.getStyles = function (obj) {
        var _this = this;
        if (obj[doc_js_parser_options_1.CO.tags] && obj[doc_js_parser_options_1.CO.tags].length) {
            return obj[doc_js_parser_options_1.CO.tags]
                .filter(function (item) { return _this.isStyle(item); })
                .map(function (item) { return _this.parseStyle(item); });
        }
        else
            return [];
    };
    StylesParser.prototype.parseStyle = function (obj) {
        return new model_1.Style({
            shortDescription: this.getShortDescription(obj),
            styles: this.getStylesOfStyle(obj)
        });
    };
    StylesParser.prototype.getShortDescription = function (style) {
        if (style[doc_js_parser_options_1.CO.description]) {
            return style[doc_js_parser_options_1.CO.description].split('\n')[0];
        }
        else {
            return '';
        }
    };
    StylesParser.prototype.getStylesOfStyle = function (style) {
        if (style[doc_js_parser_options_1.CO.description]) {
            var arr = style[doc_js_parser_options_1.CO.description].split('\n');
            var arrTemp_1 = [];
            arr.splice(0, 1);
            arr.forEach(function (item) {
                var _a = item.split(':'), key = _a[0], value = _a[1];
                var styleObj = {};
                styleObj['name'] = key ? key.replace(/[`-]/g, '').trim() : '';
                styleObj['description'] = value ? value.trim() : '';
                arrTemp_1.push(styleObj);
            });
            return arrTemp_1;
        }
        else {
            return [];
        }
    };
    StylesParser.prototype.isStyle = function (obj) {
        return obj[doc_js_parser_options_1.CO.title] === 'styles';
    };
    return StylesParser;
}());
exports.StylesParser = StylesParser;

{
	"id": 0,
	"name": "@nebular/auth",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1075,
			"name": "\"auth/auth.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/auth.module.ts",
			"children": [
				{
					"id": 1076,
					"name": "NbAuthModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    CommonModule,\n    NbLayoutModule,\n    NbCardModule,\n    NbCheckboxModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    HttpClientModule,\n  ],\n  declarations: [\n    NbAuthComponent,\n    NbAuthBlockComponent,\n    NbLoginComponent,\n    NbRegisterComponent,\n    NbRequestPasswordComponent,\n    NbResetPasswordComponent,\n    NbLogoutComponent,\n  ],\n  exports: [\n    NbAuthComponent,\n    NbAuthBlockComponent,\n    NbLoginComponent,\n    NbRegisterComponent,\n    NbRequestPasswordComponent,\n    NbResetPasswordComponent,\n    NbLogoutComponent,\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 1077,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1078,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1079,
											"name": "nbAuthOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "NbAuthOptions",
												"id": 715
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/auth.module.ts",
									"line": 120,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1077
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.module.ts",
							"line": 119,
							"character": 25
						}
					]
				},
				{
					"id": 1090,
					"name": "nbNoOpInterceptorFilter",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1091,
							"name": "nbNoOpInterceptorFilter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1092,
									"name": "req",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HttpRequest",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.module.ts",
							"line": 83,
							"character": 39
						}
					]
				},
				{
					"id": 1087,
					"name": "nbOptionsFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1088,
							"name": "nbOptionsFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1089,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.module.ts",
							"line": 79,
							"character": 32
						}
					]
				},
				{
					"id": 1080,
					"name": "nbStrategiesFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1081,
							"name": "nbStrategiesFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1082,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAuthOptions",
										"id": 715
									}
								},
								{
									"id": 1083,
									"name": "injector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbAuthStrategy",
									"id": 279
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.module.ts",
							"line": 58,
							"character": 35
						}
					]
				},
				{
					"id": 1084,
					"name": "nbTokensFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1085,
							"name": "nbTokensFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1086,
									"name": "strategies",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbAuthStrategy",
											"id": 279
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbAuthTokenClass",
									"id": 68
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.module.ts",
							"line": 70,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1076
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1090,
						1087,
						1080,
						1084
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/auth.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 714,
			"name": "\"auth/auth.options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/auth.options.ts",
			"children": [
				{
					"id": 715,
					"name": "NbAuthOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 716,
							"name": "forms",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 11,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 717,
							"name": "strategies",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 12,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthStrategies",
								"id": 726
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								716,
								717
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 10,
							"character": 30
						}
					]
				},
				{
					"id": 718,
					"name": "NbAuthSocialLink",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 723,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 20,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 719,
							"name": "link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 16,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 721,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 18,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 722,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 19,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 720,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 17,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								723,
								719,
								721,
								722,
								720
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 15,
							"character": 33
						}
					]
				},
				{
					"id": 726,
					"name": "NbAuthStrategies",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 8,
							"character": 28
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"name": "NbAuthStrategyClass",
									"id": 724
								},
								{
									"type": "reference",
									"name": "NbAuthStrategyOptions",
									"id": 271
								}
							]
						}
					}
				},
				{
					"id": 724,
					"name": "NbAuthStrategyClass",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 6,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 725,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 6,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 779,
					"name": "NB_AUTH_INTERCEPTOR_HEADER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 92,
							"character": 39
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"defaultValue": " new InjectionToken<string>('Nebular Simple Interceptor Header')"
				},
				{
					"id": 775,
					"name": "NB_AUTH_OPTIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 88,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbAuthOptions",
								"id": 715
							}
						]
					},
					"defaultValue": " new InjectionToken<NbAuthOptions>('Nebular Auth Options')"
				},
				{
					"id": 777,
					"name": "NB_AUTH_STRATEGIES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 90,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "Object"
							}
						]
					},
					"defaultValue": " new InjectionToken<NbAuthStrategies>('Nebular Auth Strategies')"
				},
				{
					"id": 778,
					"name": "NB_AUTH_TOKENS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 91,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "Object"
							}
						]
					},
					"defaultValue": " new InjectionToken<NbAuthTokenClass<NbAuthToken>[]>('Nebular Auth Tokens')"
				},
				{
					"id": 780,
					"name": "NB_AUTH_TOKEN_INTERCEPTOR_FILTER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 93,
							"character": 45
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 781,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 782,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 783,
													"name": "req",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "HttpRequest",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						]
					},
					"defaultValue": "\n       new InjectionToken<(req: HttpRequest<any>) => boolean>('Nebular Interceptor Filter')"
				},
				{
					"id": 776,
					"name": "NB_AUTH_USER_OPTIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 89,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbAuthOptions",
								"id": 715
							}
						]
					},
					"defaultValue": " new InjectionToken<NbAuthOptions>('Nebular User Auth Options')"
				},
				{
					"id": 727,
					"name": "socialLinks",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 23,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NbAuthSocialLink",
							"id": 718
						}
					},
					"defaultValue": " []"
				},
				{
					"id": 728,
					"name": "defaultAuthOptions",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 729,
							"name": "strategies",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 26,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "Object"
							},
							"defaultValue": " []"
						},
						{
							"id": 730,
							"name": "forms",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 731,
									"name": "login",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 732,
											"name": "redirectDelay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 29,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "500"
										},
										{
											"id": 734,
											"name": "rememberMe",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 31,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										},
										{
											"id": 738,
											"name": "socialLinks",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 36,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "Object"
											},
											"defaultValue": " socialLinks"
										},
										{
											"id": 733,
											"name": "strategy",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 30,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"email\""
										},
										{
											"id": 735,
											"name": "showMessages",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 737,
													"name": "error",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 34,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 736,
													"name": "success",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 33,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														737,
														736
													]
												}
											],
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 32,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												732,
												734,
												738,
												733
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												735
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/auth.options.ts",
											"line": 28,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 761,
									"name": "logout",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 762,
											"name": "redirectDelay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 67,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "500"
										},
										{
											"id": 763,
											"name": "strategy",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 68,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"email\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												762,
												763
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/auth.options.ts",
											"line": 66,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 739,
									"name": "register",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 740,
											"name": "redirectDelay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 39,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "500"
										},
										{
											"id": 746,
											"name": "socialLinks",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 46,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "Object"
											},
											"defaultValue": " socialLinks"
										},
										{
											"id": 741,
											"name": "strategy",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 40,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"email\""
										},
										{
											"id": 745,
											"name": "terms",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 45,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										},
										{
											"id": 742,
											"name": "showMessages",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 744,
													"name": "error",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 43,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 743,
													"name": "success",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 42,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														744,
														743
													]
												}
											],
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 41,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												740,
												746,
												741,
												745
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												742
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/auth.options.ts",
											"line": 38,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 747,
									"name": "requestPassword",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 748,
											"name": "redirectDelay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 49,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "500"
										},
										{
											"id": 753,
											"name": "socialLinks",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 55,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "Object"
											},
											"defaultValue": " socialLinks"
										},
										{
											"id": 749,
											"name": "strategy",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 50,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"email\""
										},
										{
											"id": 750,
											"name": "showMessages",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 752,
													"name": "error",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 53,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 751,
													"name": "success",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 52,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														752,
														751
													]
												}
											],
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 51,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												748,
												753,
												749
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												750
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/auth.options.ts",
											"line": 48,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 754,
									"name": "resetPassword",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 755,
											"name": "redirectDelay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 58,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "500"
										},
										{
											"id": 760,
											"name": "socialLinks",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 64,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "Object"
											},
											"defaultValue": " socialLinks"
										},
										{
											"id": 756,
											"name": "strategy",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 59,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"email\""
										},
										{
											"id": 757,
											"name": "showMessages",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 759,
													"name": "error",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 62,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												},
												{
													"id": 758,
													"name": "success",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 61,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														759,
														758
													]
												}
											],
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 60,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												755,
												760,
												756
											]
										},
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												757
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/auth.options.ts",
											"line": 57,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 764,
									"name": "validation",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 769,
											"name": "email",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 770,
													"name": "required",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 77,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														770
													]
												}
											],
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 76,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 771,
											"name": "fullName",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 774,
													"name": "maxLength",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 82,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "50"
												},
												{
													"id": 773,
													"name": "minLength",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 81,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "4"
												},
												{
													"id": 772,
													"name": "required",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 80,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														774,
														773,
														772
													]
												}
											],
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 79,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 765,
											"name": "password",
											"kind": 2097152,
											"kindString": "Object literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 768,
													"name": "maxLength",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 74,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "50"
												},
												{
													"id": 767,
													"name": "minLength",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 73,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "4"
												},
												{
													"id": 766,
													"name": "required",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "auth/auth.options.ts",
															"line": 72,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														768,
														767,
														766
													]
												}
											],
											"sources": [
												{
													"fileName": "auth/auth.options.ts",
													"line": 71,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Object literals",
											"kind": 2097152,
											"children": [
												769,
												771,
												765
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/auth.options.ts",
											"line": 70,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										731,
										761,
										739,
										747,
										754,
										764
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/auth.options.ts",
									"line": 27,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								729
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								730
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/auth.options.ts",
							"line": 25,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						715,
						718
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						726,
						724
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						779,
						775,
						777,
						778,
						780,
						776,
						727
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						728
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/auth.options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1073,
			"name": "\"auth/auth.routes\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/auth.routes.ts",
			"children": [
				{
					"id": 1074,
					"name": "routes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/auth.routes.ts",
							"line": 15,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "Routes"
					},
					"defaultValue": " [\n  {\n    path: 'auth',\n    component: NbAuthComponent,\n    children: [\n      {\n        path: '',\n        component: NbLoginComponent,\n      },\n      {\n        path: 'login',\n        component: NbLoginComponent,\n      },\n      {\n        path: 'register',\n        component: NbRegisterComponent,\n      },\n      {\n        path: 'logout',\n        component: NbLogoutComponent,\n      },\n      {\n        path: 'request-password',\n        component: NbRequestPasswordComponent,\n      },\n      {\n        path: 'reset-password',\n        component: NbResetPasswordComponent,\n      },\n    ],\n  },\n]"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1074
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/auth.routes.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 942,
			"name": "\"auth/components/auth-block/auth-block.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/auth-block/auth-block.component.ts",
			"children": [
				{
					"id": 943,
					"name": "NbAuthBlockComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-auth-block',\n  styleUrls: ['./auth-block.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/components/auth-block/auth-block.component.ts",
							"line": 10,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						943
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/components/auth-block/auth-block.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 926,
			"name": "\"auth/components/auth.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/auth.component.ts",
			"children": [
				{
					"id": 927,
					"name": "NbAuthComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-auth',\n  styleUrls: ['./auth.component.scss'],\n  template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <a href=\"#\" (click)=\"back()\"><i class=\"nb-arrow-thin-left\"></i></a>\n          </nb-card-header>\n          <nb-card-body>\n            <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n              <router-outlet></router-outlet>\n            </div>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 932,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 935,
									"name": "new NbAuthComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 936,
											"name": "auth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthService",
												"id": 851
											}
										},
										{
											"id": 937,
											"name": "location",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Location"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthComponent",
										"id": 927
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 39,
									"character": 21
								}
							]
						},
						{
							"id": 928,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 34,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 933,
							"name": "auth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 42,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthService",
								"id": 851
							}
						},
						{
							"id": 930,
							"name": "authenticated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 38,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 934,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 42,
									"character": 63
								}
							],
							"type": {
								"type": "reference",
								"name": "Location"
							}
						},
						{
							"id": 929,
							"name": "subscription",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 36,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 931,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 39,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 938,
							"name": "back",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 939,
									"name": "back",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 51,
									"character": 6
								}
							]
						},
						{
							"id": 940,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 941,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/auth.component.ts",
									"line": 56,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								932
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								928,
								933,
								930,
								934,
								929,
								931
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								938,
								940
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/components/auth.component.ts",
							"line": 32,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						927
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/components/auth.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1093,
			"name": "\"auth/components/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/index.ts",
			"sources": [
				{
					"fileName": "auth/components/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 944,
			"name": "\"auth/components/login/login.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/login/login.component.ts",
			"children": [
				{
					"id": 945,
					"name": "NbLoginComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-login',\n  templateUrl: './login.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 955,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 961,
									"name": "new NbLoginComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 962,
											"name": "service",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthService",
												"id": 851
											}
										},
										{
											"id": 963,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_OPTIONS"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 964,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											"defaultValue": " {}"
										},
										{
											"id": 965,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										},
										{
											"id": 966,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbLoginComponent",
										"id": 945
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 30,
									"character": 21
								}
							]
						},
						{
							"id": 959,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 34,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 949,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 25,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 950,
							"name": "messages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 26,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 957,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_OPTIONS"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 33,
									"character": 56
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 958,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						},
						{
							"id": 946,
							"name": "redirectDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 21,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 954,
							"name": "rememberMe",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 30,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 960,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 35,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 956,
							"name": "service",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 32,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthService",
								"id": 851
							}
						},
						{
							"id": 947,
							"name": "showMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 953,
							"name": "socialLinks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbAuthSocialLink",
									"id": 718
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 948,
							"name": "strategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 23,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 952,
							"name": "submitted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 28,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 951,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 27,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 969,
							"name": "getConfigValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 970,
									"name": "getConfigValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 971,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 67,
									"character": 16
								}
							]
						},
						{
							"id": 967,
							"name": "login",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 968,
									"name": "login",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/login/login.component.ts",
									"line": 44,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								955
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								959,
								949,
								950,
								957,
								946,
								954,
								960,
								956,
								947,
								953,
								948,
								952,
								951
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								969,
								967
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/components/login/login.component.ts",
							"line": 19,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						945
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/components/login/login.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 999,
			"name": "\"auth/components/logout/logout.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/logout/logout.component.ts",
			"children": [
				{
					"id": 1000,
					"name": "NbLogoutComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-logout',\n  templateUrl: './logout.component.html',\n}"
							}
						}
					],
					"children": [
						{
							"id": 1003,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1008,
									"name": "new NbLogoutComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1009,
											"name": "service",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthService",
												"id": 851
											}
										},
										{
											"id": 1010,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_OPTIONS"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1011,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											"defaultValue": " {}"
										},
										{
											"id": 1012,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbLogoutComponent",
										"id": 1000
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 21,
									"character": 24
								}
							]
						},
						{
							"id": 1005,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_OPTIONS"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 24,
									"character": 56
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1006,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						},
						{
							"id": 1001,
							"name": "redirectDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 20,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 1007,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 25,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 1004,
							"name": "service",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 23,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthService",
								"id": 851
							}
						},
						{
							"id": 1002,
							"name": "strategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 1018,
							"name": "getConfigValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1019,
									"name": "getConfigValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1020,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 46,
									"character": 16
								}
							]
						},
						{
							"id": 1015,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1016,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1017,
											"name": "strategy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 34,
									"character": 8
								}
							]
						},
						{
							"id": 1013,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1014,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/logout/logout.component.ts",
									"line": 30,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1003
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1005,
								1001,
								1007,
								1004,
								1002
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1018,
								1015,
								1013
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/components/logout/logout.component.ts",
							"line": 18,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1000
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/components/logout/logout.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 972,
			"name": "\"auth/components/register/register.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/register/register.component.ts",
			"children": [
				{
					"id": 973,
					"name": "NbRegisterComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-register',\n  styleUrls: ['./register.component.scss'],\n  templateUrl: './register.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 982,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 988,
									"name": "new NbRegisterComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 989,
											"name": "service",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthService",
												"id": 851
											}
										},
										{
											"id": 990,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_OPTIONS"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 991,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											"defaultValue": " {}"
										},
										{
											"id": 992,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										},
										{
											"id": 993,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbRegisterComponent",
										"id": 973
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 31,
									"character": 39
								}
							]
						},
						{
							"id": 986,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 35,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 978,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 28,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 979,
							"name": "messages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 29,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 984,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_OPTIONS"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 34,
									"character": 56
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 985,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						},
						{
							"id": 974,
							"name": "redirectDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 23,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 987,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 36,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 983,
							"name": "service",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 33,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthService",
								"id": 851
							}
						},
						{
							"id": 975,
							"name": "showMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 24,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 981,
							"name": "socialLinks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 31,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbAuthSocialLink",
									"id": 718
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 976,
							"name": "strategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 25,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 977,
							"name": "submitted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 980,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 30,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 996,
							"name": "getConfigValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 997,
									"name": "getConfigValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 998,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 66,
									"character": 16
								}
							]
						},
						{
							"id": 994,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 995,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/register/register.component.ts",
									"line": 44,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								982
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								986,
								978,
								979,
								984,
								974,
								987,
								983,
								975,
								981,
								976,
								977,
								980
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								996,
								994
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/components/register/register.component.ts",
							"line": 21,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						973
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/components/register/register.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1021,
			"name": "\"auth/components/request-password/request-password.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/request-password/request-password.component.ts",
			"children": [
				{
					"id": 1022,
					"name": "NbRequestPasswordComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-request-password-page',\n  styleUrls: ['./request-password.component.scss'],\n  templateUrl: './request-password.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 1030,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1036,
									"name": "new NbRequestPasswordComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1037,
											"name": "service",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthService",
												"id": 851
											}
										},
										{
											"id": 1038,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_OPTIONS"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1039,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											"defaultValue": " {}"
										},
										{
											"id": 1040,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										},
										{
											"id": 1041,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbRequestPasswordComponent",
										"id": 1022
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 29,
									"character": 17
								}
							]
						},
						{
							"id": 1034,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 33,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 1027,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1028,
							"name": "messages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1032,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_OPTIONS"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 32,
									"character": 56
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1033,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						},
						{
							"id": 1023,
							"name": "redirectDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 22,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 1035,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 34,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 1031,
							"name": "service",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 31,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthService",
								"id": 851
							}
						},
						{
							"id": 1024,
							"name": "showMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 23,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1025,
							"name": "strategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 24,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 1026,
							"name": "submitted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 26,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1029,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 29,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1044,
							"name": "getConfigValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1045,
									"name": "getConfigValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1046,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 63,
									"character": 16
								}
							]
						},
						{
							"id": 1042,
							"name": "requestPass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1043,
									"name": "requestPass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/request-password/request-password.component.ts",
									"line": 41,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1030
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1034,
								1027,
								1028,
								1032,
								1023,
								1035,
								1031,
								1024,
								1025,
								1026,
								1029
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1044,
								1042
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/components/request-password/request-password.component.ts",
							"line": 20,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1022
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/components/request-password/request-password.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1047,
			"name": "\"auth/components/reset-password/reset-password.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/components/reset-password/reset-password.component.ts",
			"children": [
				{
					"id": 1048,
					"name": "NbResetPasswordComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-reset-password-page',\n  styleUrls: ['./reset-password.component.scss'],\n  templateUrl: './reset-password.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 1056,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1062,
									"name": "new NbResetPasswordComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1063,
											"name": "service",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthService",
												"id": 851
											}
										},
										{
											"id": 1064,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_OPTIONS"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1065,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											"defaultValue": " {}"
										},
										{
											"id": 1066,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										},
										{
											"id": 1067,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbResetPasswordComponent",
										"id": 1048
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 29,
									"character": 17
								}
							]
						},
						{
							"id": 1060,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 33,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 1053,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1054,
							"name": "messages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1058,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_OPTIONS"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 32,
									"character": 56
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1059,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {}
								}
							}
						},
						{
							"id": 1049,
							"name": "redirectDelay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 22,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 1061,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 34,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 1057,
							"name": "service",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 31,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthService",
								"id": 851
							}
						},
						{
							"id": 1050,
							"name": "showMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 23,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1051,
							"name": "strategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 24,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 1052,
							"name": "submitted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 26,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1055,
							"name": "user",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 29,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1070,
							"name": "getConfigValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1071,
									"name": "getConfigValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1072,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 63,
									"character": 16
								}
							]
						},
						{
							"id": 1068,
							"name": "resetPass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1069,
									"name": "resetPass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/components/reset-password/reset-password.component.ts",
									"line": 41,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1056
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1060,
								1053,
								1054,
								1058,
								1049,
								1061,
								1057,
								1050,
								1051,
								1052,
								1055
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1070,
								1068
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/components/reset-password/reset-password.component.ts",
							"line": 20,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1048
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/components/reset-password/reset-password.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"auth/helpers\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/helpers.ts",
			"children": [
				{
					"id": 26,
					"name": "b64DecodeUnicode",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 27,
							"name": "b64DecodeUnicode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 28,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 175,
							"character": 32
						}
					]
				},
				{
					"id": 23,
					"name": "b64decode",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 24,
							"name": "b64decode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 25,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 147,
							"character": 25
						}
					]
				},
				{
					"id": 8,
					"name": "cloneSpecificValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 9,
							"name": "cloneSpecificValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 10,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 86,
							"character": 27
						}
					]
				},
				{
					"id": 11,
					"name": "deepCloneArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 12,
							"name": "deepCloneArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Recursive cloning array."
							},
							"parameters": [
								{
									"id": 13,
									"name": "arr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 99,
							"character": 23
						}
					]
				},
				{
					"id": 2,
					"name": "deepExtend",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Extending object that entered in first argument.",
						"text": "Returns extended object or false if have no target object or incorrect type.\n\nIf you wish to clone source object (without modify it), just use empty new\nobject as first argument, like this:\n  deepExtend({}, yourObj_1, [yourObj_N]);\n"
					},
					"signatures": [
						{
							"id": 3,
							"name": "deepExtend",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Extending object that entered in first argument.",
								"text": "Returns extended object or false if have no target object or incorrect type.\n\nIf you wish to clone source object (without modify it), just use empty new\nobject as first argument, like this:\n  deepExtend({}, yourObj_1, [yourObj_N]);\n"
							},
							"parameters": [
								{
									"id": 4,
									"name": "objects",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 10,
							"character": 23
						}
					]
				},
				{
					"id": 14,
					"name": "getDeepFromObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 15,
							"name": "getDeepFromObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 16,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 17,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									},
									"defaultValue": " {}"
								},
								{
									"id": 18,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 19,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 119,
							"character": 33
						}
					]
				},
				{
					"id": 5,
					"name": "isSpecificValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 6,
							"name": "isSpecificValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 7,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 79,
							"character": 24
						}
					]
				},
				{
					"id": 20,
					"name": "urlBase64Decode",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 21,
							"name": "urlBase64Decode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 22,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/helpers.ts",
							"line": 134,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						26,
						23,
						8,
						11,
						2,
						14,
						5,
						20
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/helpers.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1094,
			"name": "\"auth/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/index.ts",
			"sources": [
				{
					"fileName": "auth/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 6170,
			"name": "\"auth/models/user\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/models/user.ts",
			"children": [
				{
					"id": 6171,
					"name": "NbUser",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 6172,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6180,
									"name": "new NbUser",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6181,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 6182,
											"name": "email",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6183,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6184,
											"name": "rememberMe",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 6185,
											"name": "terms",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 6186,
											"name": "confirmPassword",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6187,
											"name": "fullName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbUser",
										"id": 6171
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 1,
									"character": 21
								}
							]
						},
						{
							"id": 6178,
							"name": "confirmPassword",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 8,
									"character": 36
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6174,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 4,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6179,
							"name": "fullName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 9,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6173,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 3,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 6175,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 5,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6176,
							"name": "rememberMe",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 6,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 6177,
							"name": "terms",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/models/user.ts",
									"line": 7,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								6172
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6178,
								6174,
								6179,
								6173,
								6175,
								6176,
								6177
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/models/user.ts",
							"line": 1,
							"character": 19
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						6171
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/models/user.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 240,
			"name": "\"auth/services/auth-result\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/auth-result.ts",
			"children": [
				{
					"id": 241,
					"name": "NbAuthResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 245,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 249,
									"name": "new NbAuthResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 250,
											"name": "success",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 251,
											"name": "response",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 252,
											"name": "redirect",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 253,
											"name": "errors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 254,
											"name": "messages",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 255,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											},
											"defaultValue": " null"
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthResult",
										"id": 241
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 7,
									"character": 36
								}
							]
						},
						{
							"id": 243,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 6,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 244,
							"name": "messages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 7,
									"character": 20
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 248,
							"name": "redirect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 12,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 247,
							"name": "response",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 11,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 246,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 10,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 242,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 5,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthToken",
								"id": 30
							}
						},
						{
							"id": 262,
							"name": "getErrors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 263,
									"name": "getErrors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 42,
									"character": 11
								}
							]
						},
						{
							"id": 264,
							"name": "getMessages",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 265,
									"name": "getMessages",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 46,
									"character": 13
								}
							]
						},
						{
							"id": 260,
							"name": "getRedirect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 261,
									"name": "getRedirect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 38,
									"character": 13
								}
							]
						},
						{
							"id": 256,
							"name": "getResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 257,
									"name": "getResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 30,
									"character": 13
								}
							]
						},
						{
							"id": 258,
							"name": "getToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 259,
									"name": "getToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 34,
									"character": 10
								}
							]
						},
						{
							"id": 268,
							"name": "isFailure",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 269,
									"name": "isFailure",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 54,
									"character": 11
								}
							]
						},
						{
							"id": 266,
							"name": "isSuccess",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 267,
									"name": "isSuccess",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth-result.ts",
									"line": 50,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								245
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								243,
								244,
								248,
								247,
								246,
								242
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								262,
								264,
								260,
								256,
								258,
								268,
								266
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/auth-result.ts",
							"line": 3,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						241
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/auth-result.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 850,
			"name": "\"auth/services/auth.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/auth.service.ts",
			"children": [
				{
					"id": 851,
					"name": "NbAuthService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Common authentication service.\nShould be used to as an interlayer between UI Components and Auth Strategy."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 852,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 855,
									"name": "new NbAuthService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 856,
											"name": "tokenService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbTokenService",
												"id": 833
											}
										},
										{
											"id": 857,
											"name": "strategies",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_STRATEGIES"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthService",
										"id": 851
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 22,
									"character": 28
								}
							]
						},
						{
							"id": 854,
							"name": "strategies",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_STRATEGIES"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 25,
									"character": 62
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 853,
							"name": "tokenService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 24,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "NbTokenService",
								"id": 833
							}
						},
						{
							"id": 868,
							"name": "authenticate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 869,
									"name": "authenticate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Authenticates with the selected strategy\nStores received token in the token storage",
										"text": "Example:\nauthenticate('email', {email: 'email@example.com', password: 'test'})\n",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 870,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 871,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 99,
									"character": 14
								}
							]
						},
						{
							"id": 891,
							"name": "getStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 892,
									"name": "getStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get registered strategy by name",
										"text": "Example:\ngetStrategy('email')\n",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 893,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthStrategy",
										"id": 279
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 208,
									"character": 23
								}
							]
						},
						{
							"id": 858,
							"name": "getToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 859,
									"name": "getToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves current authenticated token stored",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 32,
									"character": 10
								}
							]
						},
						{
							"id": 860,
							"name": "isAuthenticated",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 861,
									"name": "isAuthenticated",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if auth token is present in the token storage",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 40,
									"character": 17
								}
							]
						},
						{
							"id": 862,
							"name": "isAuthenticatedOrRefresh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 863,
									"name": "isAuthenticatedOrRefresh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if valid auth token is present in the token storage.\nIf not, calls the strategy refreshToken, and returns isAuthenticated() if success, false otherwise",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 50,
									"character": 26
								}
							]
						},
						{
							"id": 876,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 877,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sign outs with the selected strategy\nRemoves token from the token storage",
										"text": "Example:\nlogout('email')\n",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 878,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 138,
									"character": 8
								}
							]
						},
						{
							"id": 866,
							"name": "onAuthenticationChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 867,
									"name": "onAuthenticationChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns authentication status stream",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 83,
									"character": 24
								}
							]
						},
						{
							"id": 864,
							"name": "onTokenChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 865,
									"name": "onTokenChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns tokens stream",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 75,
									"character": 15
								}
							]
						},
						{
							"id": 894,
							"name": "processResultToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 895,
									"name": "processResultToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 896,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 218,
									"character": 28
								}
							]
						},
						{
							"id": 887,
							"name": "refreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 888,
									"name": "refreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sends a refresh token request\nStores received token in the token storage",
										"text": "Example:\nrefreshToken('email', {token: token})\n",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 889,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 890,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 190,
									"character": 14
								}
							]
						},
						{
							"id": 872,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 873,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Registers with the selected strategy\nStores received token in the token storage",
										"text": "Example:\nregister('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 874,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 875,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 119,
									"character": 10
								}
							]
						},
						{
							"id": 879,
							"name": "requestPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 880,
									"name": "requestPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sends forgot password request to the selected strategy",
										"text": "Example:\nrequestPassword('email', {email: 'email@example.com'})\n",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 881,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 882,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 161,
									"character": 17
								}
							]
						},
						{
							"id": 883,
							"name": "resetPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 884,
									"name": "resetPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Tries to reset password with the selected strategy",
										"text": "Example:\nresetPassword('email', {newPassword: 'test'})\n",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 885,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 886,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/auth.service.ts",
									"line": 175,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								852
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								854,
								853
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								868,
								891,
								858,
								860,
								862,
								876,
								866,
								864,
								894,
								887,
								872,
								879,
								883
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/auth.service.ts",
							"line": 22,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						851
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/auth.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 925,
			"name": "\"auth/services/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/index.ts",
			"sources": [
				{
					"fileName": "auth/services/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 897,
			"name": "\"auth/services/interceptors/jwt-interceptor\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/interceptors/jwt-interceptor.ts",
			"children": [
				{
					"id": 898,
					"name": "NbAuthJWTInterceptor",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 899,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 902,
									"name": "new NbAuthJWTInterceptor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 903,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 904,
											"name": "filter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_TOKEN_INTERCEPTOR_FILTER"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthJWTInterceptor",
										"id": 898
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/interceptors/jwt-interceptor.ts",
									"line": 10,
									"character": 62
								}
							]
						},
						{
							"id": 901,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_TOKEN_INTERCEPTOR_FILTER"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/interceptors/jwt-interceptor.ts",
									"line": 13,
									"character": 72
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 900,
							"name": "injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/interceptors/jwt-interceptor.ts",
									"line": 12,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						},
						{
							"id": 909,
							"name": "authService",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"getSignature": {
								"id": 910,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "NbAuthService",
									"id": 851
								}
							},
							"sources": [
								{
									"fileName": "auth/services/interceptors/jwt-interceptor.ts",
									"line": 46,
									"character": 27
								}
							]
						},
						{
							"id": 905,
							"name": "intercept",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 906,
									"name": "intercept",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 907,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HttpRequest",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 908,
											"name": "next",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HttpHandler"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HttpEvent",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/interceptors/jwt-interceptor.ts",
									"line": 16,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								899
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								901,
								900
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								909
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								905
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/interceptors/jwt-interceptor.ts",
							"line": 10,
							"character": 33
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "HttpInterceptor"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						898
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/interceptors/jwt-interceptor.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 911,
			"name": "\"auth/services/interceptors/simple-interceptor\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/interceptors/simple-interceptor.ts",
			"children": [
				{
					"id": 912,
					"name": "NbAuthSimpleInterceptor",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 913,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 916,
									"name": "new NbAuthSimpleInterceptor",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 917,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 918,
											"name": "headerName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_INTERCEPTOR_HEADER"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Authorization\""
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthSimpleInterceptor",
										"id": 912
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/interceptors/simple-interceptor.ts",
									"line": 11,
									"character": 65
								}
							]
						},
						{
							"id": 915,
							"name": "headerName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_INTERCEPTOR_HEADER"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/interceptors/simple-interceptor.ts",
									"line": 14,
									"character": 70
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 914,
							"name": "injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/interceptors/simple-interceptor.ts",
									"line": 13,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						},
						{
							"id": 923,
							"name": "authService",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"getSignature": {
								"id": 924,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "NbAuthService",
									"id": 851
								}
							},
							"sources": [
								{
									"fileName": "auth/services/interceptors/simple-interceptor.ts",
									"line": 34,
									"character": 27
								}
							]
						},
						{
							"id": 919,
							"name": "intercept",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 920,
									"name": "intercept",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 921,
											"name": "req",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HttpRequest",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 922,
											"name": "next",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HttpHandler"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HttpEvent",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/interceptors/simple-interceptor.ts",
									"line": 17,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								913
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								915,
								914
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								923
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								919
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/interceptors/simple-interceptor.ts",
							"line": 11,
							"character": 36
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "HttpInterceptor"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						912
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/interceptors/simple-interceptor.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 29,
			"name": "\"auth/services/token/token\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/token/token.ts",
			"children": [
				{
					"id": 54,
					"name": "NbAuthEmptyTokenError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 55,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 56,
									"name": "new NbAuthEmptyTokenError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 57,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthEmptyTokenError",
										"id": 54
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthIllegalTokenError.__constructor",
										"id": 51
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 37,
									"character": 68
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthIllegalTokenError.__constructor",
								"id": 51
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								55
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 37,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthIllegalTokenError",
							"id": 50
						}
					]
				},
				{
					"id": 58,
					"name": "NbAuthIllegalJWTTokenError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 59,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 60,
									"name": "new NbAuthIllegalJWTTokenError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 61,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthIllegalJWTTokenError",
										"id": 58
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthIllegalTokenError.__constructor",
										"id": 51
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 44,
									"character": 73
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthIllegalTokenError.__constructor",
								"id": 51
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								59
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 44,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthIllegalTokenError",
							"id": 50
						}
					]
				},
				{
					"id": 50,
					"name": "NbAuthIllegalTokenError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 51,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 52,
									"name": "new NbAuthIllegalTokenError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 53,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthIllegalTokenError",
										"id": 50
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 30,
									"character": 52
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								51
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 30,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthIllegalTokenError",
							"id": 50
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbAuthIllegalTokenError",
							"id": 50
						},
						{
							"type": "reference",
							"name": "NbAuthEmptyTokenError",
							"id": 54
						},
						{
							"type": "reference",
							"name": "NbAuthIllegalJWTTokenError",
							"id": 58
						}
					]
				},
				{
					"id": 106,
					"name": "NbAuthJWTToken",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Wrapper for JWT token with additional methods."
					},
					"children": [
						{
							"id": 117,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 121,
									"name": "new NbAuthJWTToken",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 122,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 123,
											"name": "ownerStrategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 124,
											"name": "createdAt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthJWTToken",
										"id": 106
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.__constructor",
										"id": 78
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 101,
									"character": 39
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.__constructor",
								"id": 78
							}
						},
						{
							"id": 120,
							"name": "createdAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 105,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.createdAt",
								"id": 81
							}
						},
						{
							"id": 119,
							"name": "ownerStrategyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 104,
									"character": 50
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.ownerStrategyName",
								"id": 80
							}
						},
						{
							"id": 133,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 5,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " null",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.payload",
								"id": 31
							}
						},
						{
							"id": 118,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 103,
									"character": 38
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.token",
								"id": 79
							}
						},
						{
							"id": 107,
							"name": "NAME",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 168,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"nb:auth:jwt:token\"",
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.NAME",
								"id": 77
							}
						},
						{
							"id": 125,
							"name": "getCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 126,
									"name": "getCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token's creation date",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getCreatedAt",
										"id": 38
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getCreatedAt",
										"id": 91
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 130,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getCreatedAt",
								"id": 38
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getCreatedAt",
								"id": 91
							}
						},
						{
							"id": 134,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 135,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getName",
										"id": 42
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 14,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getName",
								"id": 42
							}
						},
						{
							"id": 129,
							"name": "getOwnerStrategyName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 130,
									"name": "getOwnerStrategyName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getOwnerStrategyName",
										"id": 36
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getOwnerStrategyName",
										"id": 95
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 142,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getOwnerStrategyName",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getOwnerStrategyName",
								"id": 95
							}
						},
						{
							"id": 136,
							"name": "getPayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 137,
									"name": "getPayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getPayload",
										"id": 44
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 18,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getPayload",
								"id": 44
							}
						},
						{
							"id": 113,
							"name": "getTokenExpDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 114,
									"name": "getTokenExpDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns expiration date",
										"returns": "Date\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 193,
									"character": 17
								}
							]
						},
						{
							"id": 127,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token value",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getValue",
										"id": 32
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getValue",
										"id": 93
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 138,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getValue",
								"id": 32
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getValue",
								"id": 93
							}
						},
						{
							"id": 115,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 116,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is data expired",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.isValid",
										"id": 97
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 207,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.isValid",
								"id": 97
							}
						},
						{
							"id": 111,
							"name": "parsePayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 112,
									"name": "parsePayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns payload object",
										"returns": "any\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.parsePayload",
										"id": 86
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 182,
									"character": 24
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.parsePayload",
								"id": 86
							}
						},
						{
							"id": 108,
							"name": "prepareCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 109,
									"name": "prepareCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "for JWT token, the iat (issued at) field of the token payload contains the creation Date"
									},
									"parameters": [
										{
											"id": 110,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.prepareCreatedAt",
										"id": 88
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 173,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.prepareCreatedAt",
								"id": 88
							}
						},
						{
							"id": 131,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validate value and convert to string, if value is not valid return empty string",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.toString",
										"id": 40
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.toString",
										"id": 99
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 158,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.toString",
								"id": 40
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.toString",
								"id": 99
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								117
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								120,
								119,
								133,
								118,
								107
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								125,
								134,
								129,
								136,
								113,
								127,
								115,
								111,
								108,
								131
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 166,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthSimpleToken",
							"id": 76
						}
					]
				},
				{
					"id": 180,
					"name": "NbAuthOAuth2JWTToken",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Wrapper for OAuth2 token embedding JWT tokens"
					},
					"children": [
						{
							"id": 196,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 197,
									"name": "new NbAuthOAuth2JWTToken",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 198,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 199,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"indexSignature": {
																"id": 200,
																"name": "__index",
																"kind": 8192,
																"kindString": "Index signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 201,
																		"name": "key",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															"sources": [
																{
																	"fileName": "auth/services/token/token.ts",
																	"line": 228,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": " {}"
										},
										{
											"id": 202,
											"name": "ownerStrategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 203,
											"name": "createdAt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthOAuth2JWTToken",
										"id": 180
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.__constructor",
										"id": 78
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.__constructor",
										"id": 140
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 226,
									"character": 39
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.__constructor",
								"id": 78
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.__constructor",
								"id": 140
							}
						},
						{
							"id": 182,
							"name": "accessTokenPayload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 318,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 217,
							"name": "createdAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 105,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.createdAt",
								"id": 81
							}
						},
						{
							"id": 216,
							"name": "ownerStrategyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 104,
									"character": 50
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.ownerStrategyName",
								"id": 80
							}
						},
						{
							"id": 222,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 5,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " null",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.payload",
								"id": 31
							}
						},
						{
							"id": 215,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 103,
									"character": 38
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.token",
								"id": 79
							}
						},
						{
							"id": 181,
							"name": "NAME",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 316,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"nb:auth:oauth2:jwt:token\"",
							"overwrites": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.NAME",
								"id": 139
							}
						},
						{
							"id": 187,
							"name": "getAccessTokenPayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 188,
									"name": "getAccessTokenPayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns access token payload",
										"returns": "any\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 337,
									"character": 23
								}
							]
						},
						{
							"id": 218,
							"name": "getCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 219,
									"name": "getCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token's creation date",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getCreatedAt",
										"id": 38
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getCreatedAt",
										"id": 91
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 130,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getCreatedAt",
								"id": 38
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getCreatedAt",
								"id": 91
							}
						},
						{
							"id": 223,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 224,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getName",
										"id": 42
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 14,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getName",
								"id": 42
							}
						},
						{
							"id": 220,
							"name": "getOwnerStrategyName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 221,
									"name": "getOwnerStrategyName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getOwnerStrategyName",
										"id": 36
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getOwnerStrategyName",
										"id": 95
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 142,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getOwnerStrategyName",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getOwnerStrategyName",
								"id": 95
							}
						},
						{
							"id": 225,
							"name": "getPayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 226,
									"name": "getPayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getPayload",
										"id": 44
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 18,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getPayload",
								"id": 44
							}
						},
						{
							"id": 206,
							"name": "getRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 207,
									"name": "getRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the refresh token",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.getRefreshToken",
										"id": 150
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 248,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.getRefreshToken",
								"id": 150
							}
						},
						{
							"id": 194,
							"name": "getTokenExpDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 195,
									"name": "getTokenExpDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns expiration date :\n- exp if set,\n- super.getExpDate() otherwise",
										"returns": "Date\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.getTokenExpDate",
										"id": 161
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 363,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.getTokenExpDate",
								"id": 161
							}
						},
						{
							"id": 211,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 212,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token type",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.getType",
										"id": 157
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 279,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.getType",
								"id": 157
							}
						},
						{
							"id": 204,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 205,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token value",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getValue",
										"id": 93
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.getValue",
										"id": 148
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 240,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getValue",
								"id": 93
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.getValue",
								"id": 148
							}
						},
						{
							"id": 192,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 193,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is token valid",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.isValid",
										"id": 159
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 353,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.isValid",
								"id": 159
							}
						},
						{
							"id": 185,
							"name": "parseAccessTokenPayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 186,
									"name": "parseAccessTokenPayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 325,
									"character": 35
								}
							]
						},
						{
							"id": 183,
							"name": "parsePayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 184,
									"name": "parsePayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.parsePayload",
										"id": 155
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 320,
									"character": 24
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.parsePayload",
								"id": 155
							}
						},
						{
							"id": 189,
							"name": "prepareCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 190,
									"name": "prepareCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "for Oauth2 JWT token, the iat (issued at) field of the access_token payload"
									},
									"parameters": [
										{
											"id": 191,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.prepareCreatedAt",
										"id": 88
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 344,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.prepareCreatedAt",
								"id": 88
							}
						},
						{
							"id": 208,
							"name": "setRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 209,
									"name": "setRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " put refreshToken in the token payload"
									},
									"parameters": [
										{
											"id": 210,
											"name": "refreshToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.setRefreshToken",
										"id": 152
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 256,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.setRefreshToken",
								"id": 152
							}
						},
						{
							"id": 213,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 214,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert to string",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.toString",
										"id": 99
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthOAuth2Token.toString",
										"id": 163
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 306,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.toString",
								"id": 99
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthOAuth2Token.toString",
								"id": 163
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								196
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								182,
								217,
								216,
								222,
								215,
								181
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								187,
								218,
								223,
								220,
								225,
								206,
								194,
								211,
								204,
								192,
								185,
								183,
								189,
								208,
								213
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 314,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthOAuth2Token",
							"id": 138
						}
					]
				},
				{
					"id": 138,
					"name": "NbAuthOAuth2Token",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Wrapper for OAuth2 token whose access_token is a JWT Token"
					},
					"children": [
						{
							"id": 140,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 141,
									"name": "new NbAuthOAuth2Token",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 142,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 143,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"indexSignature": {
																"id": 144,
																"name": "__index",
																"kind": 8192,
																"kindString": "Index signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 145,
																		"name": "key",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	]
																}
															},
															"sources": [
																{
																	"fileName": "auth/services/token/token.ts",
																	"line": 228,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": " {}"
										},
										{
											"id": 146,
											"name": "ownerStrategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 147,
											"name": "createdAt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthOAuth2Token",
										"id": 138
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.__constructor",
										"id": 78
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 226,
									"character": 39
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.__constructor",
								"id": 78
							}
						},
						{
							"id": 167,
							"name": "createdAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 105,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.createdAt",
								"id": 81
							}
						},
						{
							"id": 166,
							"name": "ownerStrategyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 104,
									"character": 50
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.ownerStrategyName",
								"id": 80
							}
						},
						{
							"id": 175,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 5,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " null",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.payload",
								"id": 31
							}
						},
						{
							"id": 165,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 103,
									"character": 38
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.token",
								"id": 79
							}
						},
						{
							"id": 139,
							"name": "NAME",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 226,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"nb:auth:oauth2:token\"",
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.NAME",
								"id": 77
							}
						},
						{
							"id": 171,
							"name": "getCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 172,
									"name": "getCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token's creation date",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getCreatedAt",
										"id": 38
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getCreatedAt",
										"id": 91
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 130,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getCreatedAt",
								"id": 38
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getCreatedAt",
								"id": 91
							}
						},
						{
							"id": 176,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 177,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getName",
										"id": 42
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 14,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getName",
								"id": 42
							}
						},
						{
							"id": 173,
							"name": "getOwnerStrategyName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 174,
									"name": "getOwnerStrategyName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getOwnerStrategyName",
										"id": 36
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getOwnerStrategyName",
										"id": 95
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 142,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getOwnerStrategyName",
								"id": 36
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getOwnerStrategyName",
								"id": 95
							}
						},
						{
							"id": 178,
							"name": "getPayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 179,
									"name": "getPayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getPayload",
										"id": 44
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 18,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getPayload",
								"id": 44
							}
						},
						{
							"id": 150,
							"name": "getRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 151,
									"name": "getRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the refresh token",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 248,
									"character": 17
								}
							]
						},
						{
							"id": 161,
							"name": "getTokenExpDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 162,
									"name": "getTokenExpDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns expiration date",
										"returns": "Date\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 295,
									"character": 17
								}
							]
						},
						{
							"id": 157,
							"name": "getType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 158,
									"name": "getType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token type",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 279,
									"character": 9
								}
							]
						},
						{
							"id": 148,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 149,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token value",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.getValue",
										"id": 93
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 240,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.getValue",
								"id": 93
							}
						},
						{
							"id": 159,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 160,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is data expired",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.isValid",
										"id": 97
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 287,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.isValid",
								"id": 97
							}
						},
						{
							"id": 155,
							"name": "parsePayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 156,
									"name": "parsePayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parses token payload",
										"returns": "any\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.parsePayload",
										"id": 86
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 264,
									"character": 24
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.parsePayload",
								"id": 86
							}
						},
						{
							"id": 168,
							"name": "prepareCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 169,
									"name": "prepareCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 170,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthSimpleToken.prepareCreatedAt",
										"id": 88
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 122,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthSimpleToken.prepareCreatedAt",
								"id": 88
							}
						},
						{
							"id": 152,
							"name": "setRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 153,
									"name": "setRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": " put refreshToken in the token payload"
									},
									"parameters": [
										{
											"id": 154,
											"name": "refreshToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 256,
									"character": 17
								}
							]
						},
						{
							"id": 163,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 164,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Convert to string",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthSimpleToken.toString",
										"id": 99
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 306,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthSimpleToken.toString",
								"id": 99
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								140
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								167,
								166,
								175,
								165,
								139
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								171,
								176,
								173,
								178,
								150,
								161,
								157,
								148,
								159,
								155,
								168,
								152,
								163
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 224,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthSimpleToken",
							"id": 76
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbAuthOAuth2JWTToken",
							"id": 180
						}
					]
				},
				{
					"id": 76,
					"name": "NbAuthSimpleToken",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Wrapper for simple (text) token"
					},
					"children": [
						{
							"id": 78,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 82,
									"name": "new NbAuthSimpleToken",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 83,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 84,
											"name": "ownerStrategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 85,
											"name": "createdAt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthSimpleToken",
										"id": 76
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 101,
									"character": 39
								}
							]
						},
						{
							"id": 81,
							"name": "createdAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 105,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 80,
							"name": "ownerStrategyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 104,
									"character": 50
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 101,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 5,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " null",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.payload",
								"id": 31
							}
						},
						{
							"id": 79,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 103,
									"character": 38
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 77,
							"name": "NAME",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 101,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"nb:auth:simple:token\""
						},
						{
							"id": 91,
							"name": "getCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 92,
									"name": "getCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token's creation date",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getCreatedAt",
										"id": 38
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 130,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getCreatedAt",
								"id": 38
							}
						},
						{
							"id": 102,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 103,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getName",
										"id": 42
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 14,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getName",
								"id": 42
							}
						},
						{
							"id": 95,
							"name": "getOwnerStrategyName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 96,
									"name": "getOwnerStrategyName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getOwnerStrategyName",
										"id": 36
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 142,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getOwnerStrategyName",
								"id": 36
							}
						},
						{
							"id": 104,
							"name": "getPayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 105,
									"name": "getPayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthToken.getPayload",
										"id": 44
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 18,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthToken.getPayload",
								"id": 44
							}
						},
						{
							"id": 93,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 94,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the token value",
										"returns": "string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.getValue",
										"id": 32
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 138,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.getValue",
								"id": 32
							}
						},
						{
							"id": 97,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 98,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Is non empty and valid",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.isValid",
										"id": 34
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 150,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.isValid",
								"id": 34
							}
						},
						{
							"id": 86,
							"name": "parsePayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 87,
									"name": "parsePayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 118,
									"character": 24
								}
							]
						},
						{
							"id": 88,
							"name": "prepareCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 89,
									"name": "prepareCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 90,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 122,
									"character": 28
								}
							]
						},
						{
							"id": 99,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 100,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validate value and convert to string, if value is not valid return empty string",
										"returns": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthToken.toString",
										"id": 40
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 158,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthToken.toString",
								"id": 40
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								78
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								81,
								80,
								101,
								79,
								77
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								91,
								102,
								95,
								104,
								93,
								97,
								86,
								88,
								99
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 99,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthToken",
							"id": 30
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbAuthJWTToken",
							"id": 106
						},
						{
							"type": "reference",
							"name": "NbAuthOAuth2Token",
							"id": 138
						}
					]
				},
				{
					"id": 30,
					"name": "NbAuthToken",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 31,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 5,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " null"
						},
						{
							"id": 38,
							"name": "getCreatedAt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 39,
									"name": "getCreatedAt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 11,
									"character": 23
								}
							]
						},
						{
							"id": 42,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 43,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 14,
									"character": 9
								}
							]
						},
						{
							"id": 36,
							"name": "getOwnerStrategyName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 37,
									"name": "getOwnerStrategyName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 10,
									"character": 31
								}
							]
						},
						{
							"id": 44,
							"name": "getPayload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 45,
									"name": "getPayload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 18,
									"character": 12
								}
							]
						},
						{
							"id": 32,
							"name": "getValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 33,
									"name": "getValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 7,
									"character": 19
								}
							]
						},
						{
							"id": 34,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 35,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 8,
									"character": 18
								}
							]
						},
						{
							"id": 40,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 41,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 12,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								31
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								38,
								42,
								36,
								44,
								32,
								34,
								40
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 3,
							"character": 33
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbAuthSimpleToken",
							"id": 76
						}
					]
				},
				{
					"id": 46,
					"name": "NbAuthTokenNotFoundError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 47,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 48,
									"name": "new NbAuthTokenNotFoundError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 49,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthTokenNotFoundError",
										"id": 46
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 23,
									"character": 53
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								47
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 23,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthTokenNotFoundError",
							"id": 46
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbAuthTokenNotFoundError",
							"id": 46
						}
					]
				},
				{
					"id": 62,
					"name": "NbAuthRefreshableToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 63,
							"name": "getRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 64,
									"name": "getRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 52,
									"character": 17
								}
							]
						},
						{
							"id": 65,
							"name": "setRefreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 66,
									"name": "setRefreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 67,
											"name": "refreshToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 53,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								63,
								65
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 51,
							"character": 39
						}
					]
				},
				{
					"id": 68,
					"name": "NbAuthTokenClass",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 69,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 71,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 72,
									"name": "new NbAuthTokenClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 73,
											"name": "raw",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 74,
											"name": "strategyName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 75,
											"name": "expDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 57,
									"character": 15
								}
							]
						},
						{
							"id": 70,
							"name": "NAME",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.ts",
									"line": 57,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								71
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								70
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 56,
							"character": 33
						}
					]
				},
				{
					"id": 234,
					"name": "decodeJwtPayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "decodeJwtPayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 236,
									"name": "payload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 68,
							"character": 32
						}
					]
				},
				{
					"id": 227,
					"name": "nbAuthCreateToken",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 228,
							"name": "nbAuthCreateToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 229,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									}
								}
							],
							"parameters": [
								{
									"id": 230,
									"name": "tokenClass",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAuthTokenClass",
										"id": 68,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "NbAuthToken",
													"id": 30
												}
											}
										]
									}
								},
								{
									"id": 231,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 232,
									"name": "ownerStrategyName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 233,
									"name": "createdAt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"type": {
								"type": "unknown",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 61,
							"character": 33
						}
					]
				},
				{
					"id": 237,
					"name": "prepareOAuth2Token",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 238,
							"name": "prepareOAuth2Token",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 239,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.ts",
							"line": 212,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						54,
						58,
						50,
						106,
						180,
						138,
						76,
						30,
						46
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						62,
						68
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						234,
						227,
						237
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/token/token.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 784,
			"name": "\"auth/services/token/token-parceler\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/token/token-parceler.ts",
			"children": [
				{
					"id": 790,
					"name": "NbAuthTokenParceler",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a token parcel which could be stored/restored"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 791,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 794,
									"name": "new NbAuthTokenParceler",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 795,
											"name": "fallbackClass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_FALLBACK_TOKEN"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbAuthTokenClass",
												"id": 68
											}
										},
										{
											"id": 796,
											"name": "tokenClasses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_AUTH_TOKENS"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbAuthTokenClass",
													"id": 68
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthTokenParceler",
										"id": 790
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 19,
									"character": 34
								}
							]
						},
						{
							"id": 792,
							"name": "fallbackClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_FALLBACK_TOKEN"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 21,
									"character": 67
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthTokenClass",
								"id": 68
							}
						},
						{
							"id": 793,
							"name": "tokenClasses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_AUTH_TOKENS"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 22,
									"character": 58
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbAuthTokenClass",
									"id": 68
								}
							}
						},
						{
							"id": 803,
							"name": "getClassByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 804,
									"name": "getClassByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 805,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthTokenClass",
										"id": 68
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 53,
									"character": 26
								}
							]
						},
						{
							"id": 806,
							"name": "parseTokenPack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 807,
									"name": "parseTokenPack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 808,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTokenPack",
										"id": 785
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 57,
									"character": 26
								}
							]
						},
						{
							"id": 800,
							"name": "unwrap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 801,
									"name": "unwrap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 802,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 34,
									"character": 8
								}
							]
						},
						{
							"id": 797,
							"name": "wrap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 798,
									"name": "wrap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 799,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 25,
									"character": 6
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								791
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								792,
								793
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								803,
								806,
								800,
								797
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token-parceler.ts",
							"line": 19,
							"character": 32
						}
					]
				},
				{
					"id": 785,
					"name": "NbTokenPack",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 788,
							"name": "createdAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 9,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Number"
							}
						},
						{
							"id": 786,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 787,
							"name": "ownerStrategyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 8,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 789,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token-parceler.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								788,
								786,
								787,
								789
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token-parceler.ts",
							"line": 6,
							"character": 28
						}
					]
				},
				{
					"id": 809,
					"name": "NB_AUTH_FALLBACK_TOKEN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/services/token/token-parceler.ts",
							"line": 13,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbAuthTokenClass",
								"id": 68,
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									}
								]
							}
						]
					},
					"defaultValue": " new InjectionToken<NbAuthTokenClass>('Nebular Auth Options')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						790
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						785
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						809
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/token/token-parceler.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 810,
			"name": "\"auth/services/token/token-storage\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/token/token-storage.ts",
			"children": [
				{
					"id": 819,
					"name": "NbTokenLocalStorage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service that uses browser localStorage as a storage.",
						"text": "The token storage is provided into auth module the following way:\n```ts\n{ provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n```\n\nIf you need to change the storage behaviour or provide your own - just extend your class from basic `NbTokenStorage`\nor `NbTokenLocalStorage` and provide in your `app.module`:\n```ts\n{ provide: NbTokenStorage, useClass: NbTokenCustomStorage },\n```\n\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 821,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 823,
									"name": "new NbTokenLocalStorage",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 824,
											"name": "parceler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthTokenParceler",
												"id": 790
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTokenLocalStorage",
										"id": 819
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 31,
									"character": 35
								}
							]
						},
						{
							"id": 820,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 31,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"auth_app_token\""
						},
						{
							"id": 822,
							"name": "parceler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 33,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthTokenParceler",
								"id": 790
							}
						},
						{
							"id": 830,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 831,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears token from localStorage"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbTokenStorage.clear",
										"id": 817
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 58,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbTokenStorage.clear",
								"id": 817
							}
						},
						{
							"id": 825,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 826,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns token from localStorage",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									},
									"overwrites": {
										"type": "reference",
										"name": "NbTokenStorage.get",
										"id": 812
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 41,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbTokenStorage.get",
								"id": 812
							}
						},
						{
							"id": 827,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 828,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets token to localStorage"
									},
									"parameters": [
										{
											"id": 829,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbTokenStorage.set",
										"id": 814
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 50,
									"character": 5
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbTokenStorage.set",
								"id": 814
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								821
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								820,
								822
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								830,
								825,
								827
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token-storage.ts",
							"line": 29,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbTokenStorage",
							"id": 811
						}
					]
				},
				{
					"id": 811,
					"name": "NbTokenStorage",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 817,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 818,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 10,
									"character": 16
								}
							]
						},
						{
							"id": 812,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 813,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 8,
									"character": 14
								}
							]
						},
						{
							"id": 814,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 815,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 816,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token-storage.ts",
									"line": 9,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								817,
								812,
								814
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token-storage.ts",
							"line": 6,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbTokenLocalStorage",
							"id": 819
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						819,
						811
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/token/token-storage.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 832,
			"name": "\"auth/services/token/token.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/services/token/token.service.ts",
			"children": [
				{
					"id": 833,
					"name": "NbTokenService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 835,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 837,
									"name": "new NbTokenService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 838,
											"name": "tokenStorage",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbTokenStorage",
												"id": 811
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTokenService",
										"id": 833
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 14,
									"character": 77
								}
							]
						},
						{
							"id": 834,
							"name": "token$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 14,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "BehaviorSubject",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									}
								]
							},
							"defaultValue": " new BehaviorSubject(null)"
						},
						{
							"id": 836,
							"name": "tokenStorage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 16,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "NbTokenStorage",
								"id": 811
							}
						},
						{
							"id": 846,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 847,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes the token and published token value",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 58,
									"character": 7
								}
							]
						},
						{
							"id": 844,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 845,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns observable of current token",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 48,
									"character": 5
								}
							]
						},
						{
							"id": 848,
							"name": "publishStoredToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 849,
									"name": "publishStoredToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 64,
									"character": 30
								}
							]
						},
						{
							"id": 841,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 842,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a token into the storage. This method is used by the NbAuthService automatically.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 843,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 38,
									"character": 5
								}
							]
						},
						{
							"id": 839,
							"name": "tokenChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 840,
									"name": "tokenChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Publishes token when it changes.",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/services/token/token.service.ts",
									"line": 24,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								835
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								834,
								836
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								846,
								844,
								848,
								841,
								839
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/services/token/token.service.ts",
							"line": 12,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						833
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/services/token/token.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 278,
			"name": "\"auth/strategies/auth-strategy\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/auth-strategy.ts",
			"children": [
				{
					"id": 279,
					"name": "NbAuthStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 280,
							"name": "defaultOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 14,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthStrategyOptions",
								"id": 271
							}
						},
						{
							"id": 281,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 15,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthStrategyOptions",
								"id": 271
							}
						},
						{
							"id": 295,
							"name": "authenticate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 296,
									"name": "authenticate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 297,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 43,
									"character": 23
								}
							]
						},
						{
							"id": 312,
							"name": "createFailResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 313,
									"name": "createFailResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 314,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 55,
									"character": 30
								}
							]
						},
						{
							"id": 315,
							"name": "createSuccessResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 316,
									"name": "createSuccessResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 317,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 59,
									"character": 33
								}
							]
						},
						{
							"id": 288,
							"name": "createToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 289,
									"name": "createToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 290,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"parameters": [
										{
											"id": 291,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 292,
											"name": "failWhenInvalidToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "NbAuthToken",
											"id": 30
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 27,
									"character": 13
								}
							]
						},
						{
							"id": 318,
							"name": "getActionEndpoint",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 319,
									"name": "getActionEndpoint",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 320,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 63,
									"character": 29
								}
							]
						},
						{
							"id": 293,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 294,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 39,
									"character": 9
								}
							]
						},
						{
							"id": 285,
							"name": "getOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 286,
									"name": "getOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 287,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 23,
									"character": 11
								}
							]
						},
						{
							"id": 307,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 308,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 51,
									"character": 17
								}
							]
						},
						{
							"id": 309,
							"name": "refreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 310,
									"name": "refreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 311,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 53,
									"character": 23
								}
							]
						},
						{
							"id": 298,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 299,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 300,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 45,
									"character": 19
								}
							]
						},
						{
							"id": 301,
							"name": "requestPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 302,
									"name": "requestPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 303,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 47,
									"character": 26
								}
							]
						},
						{
							"id": 304,
							"name": "resetPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 305,
									"name": "resetPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 306,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 49,
									"character": 24
								}
							]
						},
						{
							"id": 282,
							"name": "setOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 283,
									"name": "setOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 284,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 19,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								280,
								281
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								295,
								312,
								315,
								288,
								318,
								293,
								285,
								307,
								309,
								298,
								301,
								304,
								282
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/auth-strategy.ts",
							"line": 12,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbDummyAuthStrategy",
							"id": 330
						},
						{
							"type": "reference",
							"name": "NbPasswordAuthStrategy",
							"id": 510
						},
						{
							"type": "reference",
							"name": "NbOAuth2AuthStrategy",
							"id": 601
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						279
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/auth-strategy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 270,
			"name": "\"auth/strategies/auth-strategy-options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/auth-strategy-options.ts",
			"children": [
				{
					"id": 271,
					"name": "NbAuthStrategyOptions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 272,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy-options.ts",
									"line": 9,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 273,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy-options.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 276,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 277,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"children": [
										{
											"id": 275,
											"name": "class",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/auth-strategy-options.ts",
													"line": 11,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "NbAuthTokenClass",
												"id": 68
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												275
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/auth-strategy-options.ts",
											"line": 10,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								272,
								273
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/auth-strategy-options.ts",
							"line": 8,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbDummyAuthStrategyOptions",
							"id": 322
						},
						{
							"type": "reference",
							"name": "NbPasswordAuthStrategyOptions",
							"id": 410
						},
						{
							"type": "reference",
							"name": "NbOAuth2AuthStrategyOptions",
							"id": 577
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						271
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/auth-strategy-options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 329,
			"name": "\"auth/strategies/dummy/dummy-strategy\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/dummy/dummy-strategy.ts",
			"children": [
				{
					"id": 330,
					"name": "NbDummyAuthStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Dummy auth strategy. Could be useful for auth setup when backend is not available yet.",
						"text": "Strategy settings.\n\n```ts\nexport class NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n  name = 'dummy';\n  token = {\n    class: NbAuthSimpleToken,\n  };\n  delay? = 1000;\n  alwaysFail? = false;\n}\n```\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 331,
							"name": "defaultOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 32,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDummyAuthStrategyOptions",
								"id": 322
							},
							"defaultValue": " dummyStrategyOptions",
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.defaultOptions",
								"id": 280
							}
						},
						{
							"id": 356,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 15,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthStrategyOptions",
								"id": 271
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.options",
								"id": 281
							}
						},
						{
							"id": 335,
							"name": "authenticate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 336,
									"name": "authenticate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 337,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.authenticate",
										"id": 295
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 38,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.authenticate",
								"id": 295
							}
						},
						{
							"id": 353,
							"name": "createDummyResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 354,
									"name": "createDummyResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 355,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthResult",
										"id": 241
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 80,
									"character": 29
								}
							]
						},
						{
							"id": 370,
							"name": "createFailResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 371,
									"name": "createFailResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 372,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createFailResponse",
										"id": 312
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 55,
									"character": 30
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createFailResponse",
								"id": 312
							}
						},
						{
							"id": 373,
							"name": "createSuccessResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 374,
									"name": "createSuccessResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 375,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createSuccessResponse",
										"id": 315
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 59,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createSuccessResponse",
								"id": 315
							}
						},
						{
							"id": 363,
							"name": "createToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 364,
									"name": "createToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 365,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"parameters": [
										{
											"id": 366,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 367,
											"name": "failWhenInvalidToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "NbAuthToken",
											"id": 30
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createToken",
										"id": 288
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 27,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createToken",
								"id": 288
							}
						},
						{
							"id": 376,
							"name": "getActionEndpoint",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 377,
									"name": "getActionEndpoint",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 378,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getActionEndpoint",
										"id": 318
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 63,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getActionEndpoint",
								"id": 318
							}
						},
						{
							"id": 368,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 369,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getName",
										"id": 293
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 39,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getName",
								"id": 293
							}
						},
						{
							"id": 360,
							"name": "getOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 361,
									"name": "getOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 362,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getOption",
										"id": 285
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 23,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getOption",
								"id": 285
							}
						},
						{
							"id": 347,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 348,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 349,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.logout",
										"id": 307
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 66,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.logout",
								"id": 307
							}
						},
						{
							"id": 350,
							"name": "refreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 351,
									"name": "refreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 352,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.refreshToken",
										"id": 309
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 73,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.refreshToken",
								"id": 309
							}
						},
						{
							"id": 338,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 339,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 340,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.register",
										"id": 298
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 45,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.register",
								"id": 298
							}
						},
						{
							"id": 341,
							"name": "requestPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 342,
									"name": "requestPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 343,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.requestPassword",
										"id": 301
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 52,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.requestPassword",
								"id": 301
							}
						},
						{
							"id": 344,
							"name": "resetPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 345,
									"name": "resetPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 346,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.resetPassword",
										"id": 304
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 59,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.resetPassword",
								"id": 304
							}
						},
						{
							"id": 357,
							"name": "setOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 358,
									"name": "setOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 359,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.setOptions",
										"id": 282
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 19,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.setOptions",
								"id": 282
							}
						},
						{
							"id": 332,
							"name": "setup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 333,
									"name": "setup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 334,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDummyAuthStrategyOptions",
												"id": 322
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"name": "NbAuthStrategyClass",
												"id": 724
											},
											{
												"type": "reference",
												"name": "NbDummyAuthStrategyOptions",
												"id": 322
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy.ts",
									"line": 34,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								331,
								356
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								335,
								353,
								370,
								373,
								363,
								376,
								368,
								360,
								347,
								350,
								338,
								341,
								344,
								357,
								332
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/dummy/dummy-strategy.ts",
							"line": 30,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthStrategy",
							"id": 279
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						330
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/dummy/dummy-strategy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 321,
			"name": "\"auth/strategies/dummy/dummy-strategy-options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/dummy/dummy-strategy-options.ts",
			"children": [
				{
					"id": 322,
					"name": "NbDummyAuthStrategyOptions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 326,
							"name": "alwaysFail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy-options.ts",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 325,
							"name": "delay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy-options.ts",
									"line": 13,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1000"
						},
						{
							"id": 327,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy-options.ts",
									"line": 9,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategyOptions.name",
								"id": 272
							}
						},
						{
							"id": 323,
							"name": "token",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 324,
									"name": "class",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/dummy/dummy-strategy-options.ts",
											"line": 11,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthSimpleToken",
										"id": 76
									},
									"defaultValue": " NbAuthSimpleToken"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										324
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/dummy/dummy-strategy-options.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategyOptions.token",
								"id": 273
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								326,
								325,
								327
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								323
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/dummy/dummy-strategy-options.ts",
							"line": 9,
							"character": 39
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthStrategyOptions",
							"id": 271
						}
					]
				},
				{
					"id": 328,
					"name": "dummyStrategyOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/strategies/dummy/dummy-strategy-options.ts",
							"line": 17,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"name": "NbDummyAuthStrategyOptions",
						"id": 322
					},
					"defaultValue": " new NbDummyAuthStrategyOptions()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						322
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						328
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/dummy/dummy-strategy-options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 713,
			"name": "\"auth/strategies/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/index.ts",
			"sources": [
				{
					"fileName": "auth/strategies/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 600,
			"name": "\"auth/strategies/oauth2/oauth2-strategy\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/oauth2/oauth2-strategy.ts",
			"children": [
				{
					"id": 601,
					"name": "NbOAuth2AuthStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "OAuth2 authentication strategy.",
						"text": "Strategy settings:\n\n```ts\nexport enum NbOAuth2ResponseType {\n  CODE = 'code',\n  TOKEN = 'token',\n}\n\nexport enum NbOAuth2GrantType {\n  AUTHORIZATION_CODE = 'authorization_code',\n  PASSWORD = 'password',\n  REFRESH_TOKEN = 'refresh_token',\n}\n\nexport class NbOAuth2AuthStrategyOptions {\n  name: string;\n  baseEndpoint?: string = '';\n  clientId: string = '';\n  clientSecret: string = '';\n  clientAuthMethod: string = NbOAuth2ClientAuthMethod.NONE;\n  redirect?: { success?: string; failure?: string } = {\n    success: '/',\n    failure: null,\n  };\n  defaultErrors?: any[] = ['Something went wrong, please try again.'];\n  defaultMessages?: any[] = ['You have been successfully authenticated.'];\n  authorize?: {\n    endpoint?: string;\n    redirectUri?: string;\n    responseType?: string;\n    requireValidToken: false,\n    scope?: string;\n    state?: string;\n    params?: { [key: string]: string };\n  } = {\n    endpoint: 'authorize',\n    responseType: NbOAuth2ResponseType.CODE,\n  };\n  token?: {\n    endpoint?: string;\n    grantType?: string;\n    requireValidToken: false,\n    redirectUri?: string;\n    scope?: string;\n    class: NbAuthTokenClass,\n  } = {\n    endpoint: 'token',\n    grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n    class: NbAuthOAuth2Token,\n  };\n  refresh?: {\n    endpoint?: string;\n    grantType?: string;\n    scope?: string;\n    requireValidToken: false,\n  } = {\n    endpoint: 'token',\n    grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n  };\n}\n```\n\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 618,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 622,
									"name": "new NbOAuth2AuthStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 623,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HttpClient"
											}
										},
										{
											"id": 624,
											"name": "route",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ActivatedRoute"
											}
										},
										{
											"id": 625,
											"name": "window",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_WINDOW"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOAuth2AuthStrategy",
										"id": 601
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 185,
									"character": 79
								}
							]
						},
						{
							"id": 617,
							"name": "defaultOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 185,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOAuth2AuthStrategyOptions",
								"id": 577
							},
							"defaultValue": " auth2StrategyOptions",
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.defaultOptions",
								"id": 280
							}
						},
						{
							"id": 619,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 187,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "HttpClient"
							}
						},
						{
							"id": 690,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 15,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthStrategyOptions",
								"id": 271
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.options",
								"id": 281
							}
						},
						{
							"id": 620,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 188,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "ActivatedRoute"
							}
						},
						{
							"id": 621,
							"name": "window",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_WINDOW"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 189,
									"character": 47
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 607,
							"name": "clientAuthMethod",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 608,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 106,
									"character": 22
								}
							]
						},
						{
							"id": 605,
							"name": "responseType",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 606,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 102,
									"character": 18
								}
							]
						},
						{
							"id": 660,
							"name": "addCredentialsToParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 661,
									"name": "addCredentialsToParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 662,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 343,
									"character": 34
								}
							]
						},
						{
							"id": 626,
							"name": "authenticate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 627,
									"name": "authenticate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 628,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.authenticate",
										"id": 295
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 193,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.authenticate",
								"id": 295
							}
						},
						{
							"id": 638,
							"name": "authorizeRedirect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 639,
									"name": "authorizeRedirect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 261,
									"character": 29
								}
							]
						},
						{
							"id": 655,
							"name": "buildAuthHeader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 656,
									"name": "buildAuthHeader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 320,
									"character": 27
								}
							]
						},
						{
							"id": 645,
							"name": "buildCodeRequestData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 646,
									"name": "buildCodeRequestData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 647,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 291,
									"character": 32
								}
							]
						},
						{
							"id": 651,
							"name": "buildPasswordRequestData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 652,
									"name": "buildPasswordRequestData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 653,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 654,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 310,
									"character": 36
								}
							]
						},
						{
							"id": 666,
							"name": "buildRedirectUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 667,
									"name": "buildRedirectUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 383,
									"character": 28
								}
							]
						},
						{
							"id": 648,
							"name": "buildRefreshRequestData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 649,
									"name": "buildRefreshRequestData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 650,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthRefreshableToken",
												"id": 62
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 301,
									"character": 35
								}
							]
						},
						{
							"id": 657,
							"name": "cleanParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 658,
									"name": "cleanParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 659,
											"name": "params",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 337,
									"character": 23
								}
							]
						},
						{
							"id": 704,
							"name": "createFailResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 705,
									"name": "createFailResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 706,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createFailResponse",
										"id": 312
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 55,
									"character": 30
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createFailResponse",
								"id": 312
							}
						},
						{
							"id": 674,
							"name": "createRefreshedToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 675,
									"name": "createRefreshedToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 676,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 677,
											"name": "existingToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthRefreshableToken",
												"id": 62
											}
										},
										{
											"id": 678,
											"name": "requireValidToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthToken",
										"id": 30
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 411,
									"character": 32
								}
							]
						},
						{
							"id": 707,
							"name": "createSuccessResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 708,
									"name": "createSuccessResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 709,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createSuccessResponse",
										"id": 315
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 59,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createSuccessResponse",
								"id": 315
							}
						},
						{
							"id": 697,
							"name": "createToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 698,
									"name": "createToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 699,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"parameters": [
										{
											"id": 700,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 701,
											"name": "failWhenInvalidToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "NbAuthToken",
											"id": 30
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createToken",
										"id": 288
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 27,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createToken",
								"id": 288
							}
						},
						{
							"id": 710,
							"name": "getActionEndpoint",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 711,
									"name": "getActionEndpoint",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 712,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getActionEndpoint",
										"id": 318
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 63,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getActionEndpoint",
								"id": 318
							}
						},
						{
							"id": 629,
							"name": "getAuthorizationResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 630,
									"name": "getAuthorizationResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 211,
									"character": 24
								}
							]
						},
						{
							"id": 702,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 703,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getName",
										"id": 293
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 39,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getName",
								"id": 293
							}
						},
						{
							"id": 694,
							"name": "getOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 695,
									"name": "getOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 696,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getOption",
										"id": 285
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 23,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getOption",
								"id": 285
							}
						},
						{
							"id": 663,
							"name": "handleResponseError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 664,
									"name": "handleResponseError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 665,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 359,
									"character": 31
								}
							]
						},
						{
							"id": 640,
							"name": "isRedirectResult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 641,
									"name": "isRedirectResult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 265,
									"character": 28
								}
							]
						},
						{
							"id": 688,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 689,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.logout",
										"id": 307
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 433,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.logout",
								"id": 307
							}
						},
						{
							"id": 668,
							"name": "parseHashAsQueryParams",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 669,
									"name": "parseHashAsQueryParams",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 670,
											"name": "hash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 671,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 672,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 673,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"sources": [
												{
													"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
													"line": 403,
													"character": 49
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 403,
									"character": 34
								}
							]
						},
						{
							"id": 634,
							"name": "passwordToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 635,
									"name": "passwordToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 636,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 637,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 241,
									"character": 15
								}
							]
						},
						{
							"id": 631,
							"name": "refreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 632,
									"name": "refreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 633,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthRefreshableToken",
												"id": 62
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.refreshToken",
										"id": 309
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 221,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.refreshToken",
								"id": 309
							}
						},
						{
							"id": 679,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 680,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 681,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.register",
										"id": 298
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 421,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.register",
								"id": 298
							}
						},
						{
							"id": 682,
							"name": "requestPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 683,
									"name": "requestPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 684,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.requestPassword",
										"id": 301
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 425,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.requestPassword",
								"id": 301
							}
						},
						{
							"id": 642,
							"name": "requestToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 643,
									"name": "requestToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 644,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "Object"
													},
													{
														"type": "reference",
														"name": "NbAuthResult",
														"id": 241
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 269,
									"character": 24
								}
							]
						},
						{
							"id": 685,
							"name": "resetPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 686,
									"name": "resetPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 687,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.resetPassword",
										"id": 304
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 429,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.resetPassword",
								"id": 304
							}
						},
						{
							"id": 691,
							"name": "setOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 692,
									"name": "setOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 693,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.setOptions",
										"id": 282
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 19,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.setOptions",
								"id": 282
							}
						},
						{
							"id": 602,
							"name": "setup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 603,
									"name": "setup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 604,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOAuth2AuthStrategyOptions",
												"id": 577
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"name": "NbAuthStrategyClass",
												"id": 724
											},
											{
												"type": "reference",
												"name": "NbOAuth2AuthStrategyOptions",
												"id": 577
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 98,
									"character": 14
								}
							]
						},
						{
							"id": 609,
							"name": "redirectResultHandlers",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"children": [
								{
									"id": 610,
									"name": "__computed",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 611,
											"name": "__computed",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "Object"
													}
												]
											}
										},
										{
											"id": 612,
											"name": "__computed",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "Object"
															},
															{
																"type": "reference",
																"name": "NbAuthResult",
																"id": 241
															}
														]
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
											"line": 111,
											"character": 31
										},
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
											"line": 129,
											"character": 32
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										610
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 110,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 613,
							"name": "redirectResults",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"children": [
								{
									"id": 614,
									"name": "__computed",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 615,
											"name": "__computed",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 616,
											"name": "__computed",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Observable",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
											"line": 172,
											"character": 31
										},
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
											"line": 177,
											"character": 32
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										614
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
									"line": 171,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								618
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								617,
								619,
								690,
								620,
								621
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								607,
								605
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								660,
								626,
								638,
								655,
								645,
								651,
								666,
								648,
								657,
								704,
								674,
								707,
								697,
								710,
								629,
								702,
								694,
								663,
								640,
								688,
								668,
								634,
								631,
								679,
								682,
								642,
								685,
								691,
								602
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								609,
								613
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
							"line": 96,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthStrategy",
							"id": 279
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						601
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/oauth2/oauth2-strategy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 565,
			"name": "\"auth/strategies/oauth2/oauth2-strategy.options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/oauth2/oauth2-strategy.options.ts",
			"children": [
				{
					"id": 573,
					"name": "NbOAuth2ClientAuthMethod",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 575,
							"name": "BASIC",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 24,
									"character": 7
								}
							],
							"defaultValue": "\"basic\""
						},
						{
							"id": 574,
							"name": "NONE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 23,
									"character": 6
								}
							],
							"defaultValue": "\"none\""
						},
						{
							"id": 576,
							"name": "REQUEST_BODY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 25,
									"character": 14
								}
							],
							"defaultValue": "\"request-body\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								575,
								574,
								576
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
							"line": 22,
							"character": 36
						}
					]
				},
				{
					"id": 569,
					"name": "NbOAuth2GrantType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 570,
							"name": "AUTHORIZATION_CODE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 17,
									"character": 20
								}
							],
							"defaultValue": "\"authorization_code\""
						},
						{
							"id": 571,
							"name": "PASSWORD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 18,
									"character": 10
								}
							],
							"defaultValue": "\"password\""
						},
						{
							"id": 572,
							"name": "REFRESH_TOKEN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 19,
									"character": 15
								}
							],
							"defaultValue": "\"refresh_token\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								570,
								571,
								572
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
							"line": 16,
							"character": 29
						}
					]
				},
				{
					"id": 566,
					"name": "NbOAuth2ResponseType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 567,
							"name": "CODE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 11,
									"character": 6
								}
							],
							"defaultValue": "\"code\""
						},
						{
							"id": 568,
							"name": "TOKEN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 12,
									"character": 7
								}
							],
							"defaultValue": "\"token\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								567,
								568
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
							"line": 10,
							"character": 32
						}
					]
				},
				{
					"id": 577,
					"name": "NbOAuth2AuthStrategyOptions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 578,
							"name": "baseEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 581,
							"name": "clientAuthMethod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 32,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbOAuth2ClientAuthMethod.NONE"
						},
						{
							"id": 579,
							"name": "clientId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 30,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 580,
							"name": "clientSecret",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 585,
							"name": "defaultErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 37,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"defaultValue": " ['Something went wrong, please try again.']"
						},
						{
							"id": 586,
							"name": "defaultMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 38,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"defaultValue": " ['You have been successfully authenticated.']"
						},
						{
							"id": 598,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy-options.ts",
									"line": 9,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategyOptions.name",
								"id": 272
							}
						},
						{
							"id": 587,
							"name": "authorize",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 588,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 48,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"authorize\""
								},
								{
									"id": 589,
									"name": "responseType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 49,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOAuth2ResponseType",
										"id": 566
									},
									"defaultValue": " NbOAuth2ResponseType.CODE"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										588,
										589
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 39,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 582,
							"name": "redirect",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 584,
									"name": "failure",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 35,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "null"
									},
									"defaultValue": " null"
								},
								{
									"id": 583,
									"name": "success",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 34,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										584,
										583
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 33,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 595,
							"name": "refresh",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 596,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 70,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"token\""
								},
								{
									"id": 597,
									"name": "grantType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 71,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOAuth2GrantType",
										"id": 569
									},
									"defaultValue": " NbOAuth2GrantType.REFRESH_TOKEN"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										596,
										597
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 64,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 590,
							"name": "token",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 594,
									"name": "class",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 62,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthOAuth2Token",
										"id": 138
									},
									"defaultValue": " NbAuthOAuth2Token"
								},
								{
									"id": 591,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 59,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"token\""
								},
								{
									"id": 592,
									"name": "grantType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 60,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOAuth2GrantType",
										"id": 569
									},
									"defaultValue": " NbOAuth2GrantType.AUTHORIZATION_CODE"
								},
								{
									"id": 593,
									"name": "requireValidToken",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
											"line": 61,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										594,
										591,
										592,
										593
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
									"line": 51,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategyOptions.token",
								"id": 273
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								578,
								581,
								579,
								580,
								585,
								586,
								598
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								587,
								582,
								595,
								590
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
							"line": 28,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthStrategyOptions",
							"id": 271
						}
					]
				},
				{
					"id": 599,
					"name": "auth2StrategyOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
							"line": 75,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"name": "NbOAuth2AuthStrategyOptions",
						"id": 577
					},
					"defaultValue": " new NbOAuth2AuthStrategyOptions()"
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						573,
						569,
						566
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						577
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						599
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/oauth2/oauth2-strategy.options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 509,
			"name": "\"auth/strategies/password/password-strategy\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/password/password-strategy.ts",
			"children": [
				{
					"id": 510,
					"name": "NbPasswordAuthStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The most common authentication provider for email/password strategy.",
						"text": "Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\nAlso, this.getOption call won't work outside of the default options declaration\n(which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\nif you need it.\n\n```ts\nexport class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n name: string;\n baseEndpoint? = '/api/auth/';\n login?: boolean | NbPasswordStrategyModule = {\n   alwaysFail: false,\n   endpoint: 'login',\n   method: 'post',\n   requireValidToken: false,\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Login/Email combination is not correct, please try again.'],\n   defaultMessages: ['You have been successfully logged in.'],\n };\n register?: boolean | NbPasswordStrategyModule = {\n   alwaysFail: false,\n   endpoint: 'register',\n   method: 'post',\n   requireValidToken: false,\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['You have been successfully registered.'],\n };\n requestPass?: boolean | NbPasswordStrategyModule = {\n   endpoint: 'request-pass',\n   method: 'post',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['Reset password instructions have been sent to your email.'],\n };\n resetPass?: boolean | NbPasswordStrategyReset = {\n   endpoint: 'reset-pass',\n   method: 'put',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   resetPasswordTokenKey: 'reset_password_token',\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['Your password has been successfully changed.'],\n };\n logout?: boolean | NbPasswordStrategyReset = {\n   alwaysFail: false,\n   endpoint: 'logout',\n   method: 'delete',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['You have been successfully logged out.'],\n };\n refreshToken?: boolean | NbPasswordStrategyModule = {\n   endpoint: 'refresh-token',\n   method: 'post',\n   requireValidToken: false,\n   redirect: {\n     success: null,\n     failure: null,\n   },\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['Your token has been successfully refreshed.'],\n };\n token?: NbPasswordStrategyToken = {\n   class: NbAuthSimpleToken,\n   key: 'data.token',\n   getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n     res.body,\n     options.token.key,\n   ),\n };\n errors?: NbPasswordStrategyMessage = {\n   key: 'data.errors',\n   getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n     res.error,\n     options.errors.key,\n     options[module].defaultErrors,\n   ),\n };\n messages?: NbPasswordStrategyMessage = {\n   key: 'data.messages',\n   getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n     res.body,\n     options.messages.key,\n     options[module].defaultMessages,\n   ),\n };\n validation?: {\n   password?: {\n     required?: boolean;\n     minLength?: number | null;\n     maxLength?: number | null;\n     regexp?: string | null;\n   };\n   email?: {\n     required?: boolean;\n     regexp?: string | null;\n   };\n   fullName?: {\n     required?: boolean;\n     minLength?: number | null;\n     maxLength?: number | null;\n     regexp?: string | null;\n   };\n };\n}\n```\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 515,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 518,
									"name": "new NbPasswordAuthStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 519,
											"name": "http",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HttpClient"
											}
										},
										{
											"id": 520,
											"name": "route",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ActivatedRoute"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPasswordAuthStrategy",
										"id": 510
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 149,
									"character": 3
								}
							]
						},
						{
							"id": 511,
							"name": "defaultOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 145,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPasswordAuthStrategyOptions",
								"id": 410
							},
							"defaultValue": " passwordStrategyOptions",
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.defaultOptions",
								"id": 280
							}
						},
						{
							"id": 516,
							"name": "http",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 151,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "HttpClient"
							}
						},
						{
							"id": 542,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 15,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthStrategyOptions",
								"id": 271
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.options",
								"id": 281
							}
						},
						{
							"id": 517,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 151,
									"character": 55
								}
							],
							"type": {
								"type": "reference",
								"name": "ActivatedRoute"
							}
						},
						{
							"id": 521,
							"name": "authenticate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 522,
									"name": "authenticate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 523,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.authenticate",
										"id": 295
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 155,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.authenticate",
								"id": 295
							}
						},
						{
							"id": 556,
							"name": "createFailResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 557,
									"name": "createFailResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 558,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createFailResponse",
										"id": 312
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 55,
									"character": 30
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createFailResponse",
								"id": 312
							}
						},
						{
							"id": 559,
							"name": "createSuccessResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 560,
									"name": "createSuccessResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 561,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "HttpResponse",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Object"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createSuccessResponse",
										"id": 315
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 59,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createSuccessResponse",
								"id": 315
							}
						},
						{
							"id": 549,
							"name": "createToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 550,
									"name": "createToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 551,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAuthToken",
												"id": 30
											}
										}
									],
									"parameters": [
										{
											"id": 552,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 553,
											"name": "failWhenInvalidToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "NbAuthToken",
											"id": 30
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.createToken",
										"id": 288
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 27,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.createToken",
								"id": 288
							}
						},
						{
							"id": 562,
							"name": "getActionEndpoint",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 563,
									"name": "getActionEndpoint",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 564,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getActionEndpoint",
										"id": 318
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 63,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getActionEndpoint",
								"id": 318
							}
						},
						{
							"id": 554,
							"name": "getName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 555,
									"name": "getName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getName",
										"id": 293
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 39,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getName",
								"id": 293
							}
						},
						{
							"id": 546,
							"name": "getOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 547,
									"name": "getOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 548,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.getOption",
										"id": 285
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 23,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.getOption",
								"id": 285
							}
						},
						{
							"id": 538,
							"name": "handleResponseError",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 539,
									"name": "handleResponseError",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 540,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 541,
											"name": "module",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 335,
									"character": 31
								}
							]
						},
						{
							"id": 533,
							"name": "logout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 534,
									"name": "logout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.logout",
										"id": 307
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 269,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.logout",
								"id": 307
							}
						},
						{
							"id": 535,
							"name": "refreshToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 536,
									"name": "refreshToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 537,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.refreshToken",
										"id": 309
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 304,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.refreshToken",
								"id": 309
							}
						},
						{
							"id": 524,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 525,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 526,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.register",
										"id": 298
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 183,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.register",
								"id": 298
							}
						},
						{
							"id": 527,
							"name": "requestPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 528,
									"name": "requestPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 529,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.requestPassword",
										"id": 301
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 212,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.requestPassword",
								"id": 301
							}
						},
						{
							"id": 530,
							"name": "resetPassword",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 531,
									"name": "resetPassword",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 532,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbAuthResult",
												"id": 241
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbAuthStrategy.resetPassword",
										"id": 304
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 239,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategy.resetPassword",
								"id": 304
							}
						},
						{
							"id": 543,
							"name": "setOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 544,
									"name": "setOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 545,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbAuthStrategy.setOptions",
										"id": 282
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy.ts",
									"line": 19,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategy.setOptions",
								"id": 282
							}
						},
						{
							"id": 512,
							"name": "setup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 513,
									"name": "setup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 514,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPasswordAuthStrategyOptions",
												"id": 410
											}
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"name": "NbAuthStrategyClass",
												"id": 724
											},
											{
												"type": "reference",
												"name": "NbPasswordAuthStrategyOptions",
												"id": 410
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy.ts",
									"line": 147,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								515
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								511,
								516,
								542,
								517
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								521,
								556,
								559,
								549,
								562,
								554,
								546,
								538,
								533,
								535,
								524,
								527,
								530,
								543,
								512
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/password/password-strategy.ts",
							"line": 143,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthStrategy",
							"id": 279
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						510
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/password/password-strategy.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 379,
			"name": "\"auth/strategies/password/password-strategy-options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/auth/strategies/password/password-strategy-options.ts",
			"children": [
				{
					"id": 410,
					"name": "NbPasswordAuthStrategyOptions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 411,
							"name": "baseEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"/api/auth/\""
						},
						{
							"id": 507,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/auth-strategy-options.ts",
									"line": 9,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbAuthStrategyOptions.name",
								"id": 272
							}
						},
						{
							"id": 489,
							"name": "validation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 133,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 490,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 497,
											"name": "email",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 140,
													"character": 9
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 498,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 500,
															"name": "regexp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 142,
																	"character": 12
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 499,
															"name": "required",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 141,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																500,
																499
															]
														}
													],
													"sources": [
														{
															"fileName": "auth/strategies/password/password-strategy-options.ts",
															"line": 140,
															"character": 11
														}
													]
												}
											}
										},
										{
											"id": 501,
											"name": "fullName",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 144,
													"character": 12
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 502,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 505,
															"name": "maxLength",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 147,
																	"character": 15
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 504,
															"name": "minLength",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 146,
																	"character": 15
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 506,
															"name": "regexp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 148,
																	"character": 12
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 503,
															"name": "required",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 145,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																505,
																504,
																506,
																503
															]
														}
													],
													"sources": [
														{
															"fileName": "auth/strategies/password/password-strategy-options.ts",
															"line": 144,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 491,
											"name": "password",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 134,
													"character": 12
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 492,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 495,
															"name": "maxLength",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 137,
																	"character": 15
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 494,
															"name": "minLength",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 136,
																	"character": 15
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 496,
															"name": "regexp",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 138,
																	"character": 12
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														},
														{
															"id": 493,
															"name": "required",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "auth/strategies/password/password-strategy-options.ts",
																	"line": 135,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																495,
																494,
																496,
																493
															]
														}
													],
													"sources": [
														{
															"fileName": "auth/strategies/password/password-strategy-options.ts",
															"line": 134,
															"character": 14
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												497,
												501,
												491
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 133,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 475,
							"name": "errors",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 476,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 118,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"data.errors\""
								},
								{
									"id": 477,
									"name": "getter",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 478,
											"name": "getter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 479,
													"name": "module",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 480,
													"name": "res",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "HttpErrorResponse"
													}
												},
												{
													"id": 481,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "NbPasswordAuthStrategyOptions",
														"id": 410
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 119,
											"character": 10
										}
									]
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										476
									]
								},
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										477
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 117,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 412,
							"name": "login",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 413,
									"name": "alwaysFail",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 43,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 420,
									"name": "defaultErrors",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 51,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Login/Email combination is not correct, please try again.']"
								},
								{
									"id": 421,
									"name": "defaultMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 52,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['You have been successfully logged in.']"
								},
								{
									"id": 414,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 44,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"login\""
								},
								{
									"id": 415,
									"name": "method",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 45,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"post\""
								},
								{
									"id": 416,
									"name": "requireValidToken",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 46,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 417,
									"name": "redirect",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 419,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 49,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": " null"
										},
										{
											"id": 418,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 48,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												419,
												418
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 47,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										413,
										420,
										421,
										414,
										415,
										416
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										417
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 42,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 449,
							"name": "logout",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 450,
									"name": "alwaysFail",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 88,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 456,
									"name": "defaultErrors",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 95,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Something went wrong, please try again.']"
								},
								{
									"id": 457,
									"name": "defaultMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 96,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['You have been successfully logged out.']"
								},
								{
									"id": 451,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 89,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"logout\""
								},
								{
									"id": 452,
									"name": "method",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 90,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"delete\""
								},
								{
									"id": 453,
									"name": "redirect",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 455,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 93,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": " null"
										},
										{
											"id": 454,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 92,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												455,
												454
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 91,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										450,
										456,
										457,
										451,
										452
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										453
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 87,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 482,
							"name": "messages",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 483,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 126,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"data.messages\""
								},
								{
									"id": 484,
									"name": "getter",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 485,
											"name": "getter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 486,
													"name": "module",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 487,
													"name": "res",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "HttpResponse",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Object"
															}
														]
													}
												},
												{
													"id": 488,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "NbPasswordAuthStrategyOptions",
														"id": 410
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 127,
											"character": 10
										}
									]
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										483
									]
								},
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										484
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 125,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 458,
							"name": "refreshToken",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 465,
									"name": "defaultErrors",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 106,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Something went wrong, please try again.']"
								},
								{
									"id": 466,
									"name": "defaultMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 107,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Your token has been successfully refreshed.']"
								},
								{
									"id": 459,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 99,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"refresh-token\""
								},
								{
									"id": 460,
									"name": "method",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 100,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"post\""
								},
								{
									"id": 461,
									"name": "requireValidToken",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 101,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 462,
									"name": "redirect",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 464,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 104,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": " null"
										},
										{
											"id": 463,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 103,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": " null"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												464,
												463
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 102,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										465,
										466,
										459,
										460,
										461
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										462
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 98,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 422,
							"name": "register",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 423,
									"name": "alwaysFail",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 55,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 430,
									"name": "defaultErrors",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 63,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Something went wrong, please try again.']"
								},
								{
									"id": 431,
									"name": "defaultMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 64,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['You have been successfully registered.']"
								},
								{
									"id": 424,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 56,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"register\""
								},
								{
									"id": 425,
									"name": "method",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 57,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"post\""
								},
								{
									"id": 426,
									"name": "requireValidToken",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 58,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 427,
									"name": "redirect",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 429,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 61,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": " null"
										},
										{
											"id": 428,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 60,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												429,
												428
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 59,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										423,
										430,
										431,
										424,
										425,
										426
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										427
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 54,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 432,
							"name": "requestPass",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 438,
									"name": "defaultErrors",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 73,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Something went wrong, please try again.']"
								},
								{
									"id": 439,
									"name": "defaultMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 74,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Reset password instructions have been sent to your email.']"
								},
								{
									"id": 433,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 67,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"request-pass\""
								},
								{
									"id": 434,
									"name": "method",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 68,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"post\""
								},
								{
									"id": 435,
									"name": "redirect",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 437,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 71,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": " null"
										},
										{
											"id": 436,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 70,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												437,
												436
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 69,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										438,
										439,
										433,
										434
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										435
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 66,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 440,
							"name": "resetPass",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 447,
									"name": "defaultErrors",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 84,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Something went wrong, please try again.']"
								},
								{
									"id": 448,
									"name": "defaultMessages",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 85,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " ['Your password has been successfully changed.']"
								},
								{
									"id": 441,
									"name": "endpoint",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 77,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"reset-pass\""
								},
								{
									"id": 442,
									"name": "method",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 78,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"put\""
								},
								{
									"id": 446,
									"name": "resetPasswordTokenKey",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 83,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"reset_password_token\""
								},
								{
									"id": 443,
									"name": "redirect",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 445,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 81,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "null"
											},
											"defaultValue": " null"
										},
										{
											"id": 444,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 80,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"/\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												445,
												444
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 79,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										447,
										448,
										441,
										442,
										446
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										443
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 76,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 467,
							"name": "token",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"children": [
								{
									"id": 468,
									"name": "class",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 110,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAuthSimpleToken",
										"id": 76
									},
									"defaultValue": " NbAuthSimpleToken"
								},
								{
									"id": 469,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 111,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"data.token\""
								},
								{
									"id": 470,
									"name": "getter",
									"kind": 64,
									"kindString": "Function",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 471,
											"name": "getter",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 472,
													"name": "module",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 473,
													"name": "res",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "HttpResponse",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Object"
															}
														]
													}
												},
												{
													"id": 474,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "NbPasswordAuthStrategyOptions",
														"id": 410
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 112,
											"character": 10
										}
									]
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										468,
										469
									]
								},
								{
									"title": "Functions",
									"kind": 64,
									"children": [
										470
									]
								}
							],
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 109,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbAuthStrategyOptions.token",
								"id": 273
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								411,
								507,
								489
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								475,
								412,
								449,
								482,
								458,
								422,
								432,
								440,
								467
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/password/password-strategy-options.ts",
							"line": 40,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbAuthStrategyOptions",
							"id": 271
						}
					]
				},
				{
					"id": 407,
					"name": "NbPasswordStrategyMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 409,
							"name": "getter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 37,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 408,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 36,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								409,
								408
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/password/password-strategy-options.ts",
							"line": 35,
							"character": 42
						}
					]
				},
				{
					"id": 380,
					"name": "NbPasswordStrategyModule",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 381,
							"name": "alwaysFail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 13,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 389,
							"name": "defaultErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 21,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 390,
							"name": "defaultMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 22,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 382,
							"name": "endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 383,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 15,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 384,
							"name": "redirect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 385,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 387,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 18,
													"character": 11
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 386,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 17,
													"character": 11
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												387,
												386
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 16,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 388,
							"name": "requireValidToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 20,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								381,
								389,
								390,
								382,
								383,
								384,
								388
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/password/password-strategy-options.ts",
							"line": 12,
							"character": 41
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbPasswordStrategyReset",
							"id": 391
						}
					]
				},
				{
					"id": 391,
					"name": "NbPasswordStrategyReset",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 393,
							"name": "alwaysFail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 13,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPasswordStrategyModule.alwaysFail",
								"id": 381
							}
						},
						{
							"id": 401,
							"name": "defaultErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 21,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPasswordStrategyModule.defaultErrors",
								"id": 389
							}
						},
						{
							"id": 402,
							"name": "defaultMessages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 22,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPasswordStrategyModule.defaultMessages",
								"id": 390
							}
						},
						{
							"id": 394,
							"name": "endpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPasswordStrategyModule.endpoint",
								"id": 382
							}
						},
						{
							"id": 395,
							"name": "method",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 15,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPasswordStrategyModule.method",
								"id": 383
							}
						},
						{
							"id": 396,
							"name": "redirect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 397,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 399,
											"name": "failure",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 18,
													"character": 11
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 398,
											"name": "success",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "auth/strategies/password/password-strategy-options.ts",
													"line": 17,
													"character": 11
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												399,
												398
											]
										}
									],
									"sources": [
										{
											"fileName": "auth/strategies/password/password-strategy-options.ts",
											"line": 16,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPasswordStrategyModule.redirect",
								"id": 384
							}
						},
						{
							"id": 400,
							"name": "requireValidToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 20,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPasswordStrategyModule.requireValidToken",
								"id": 388
							}
						},
						{
							"id": 392,
							"name": "resetPasswordTokenKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 26,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								393,
								401,
								402,
								394,
								395,
								396,
								400,
								392
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/password/password-strategy-options.ts",
							"line": 25,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbPasswordStrategyModule",
							"id": 380
						}
					]
				},
				{
					"id": 403,
					"name": "NbPasswordStrategyToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 404,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 30,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAuthTokenClass",
								"id": 68
							}
						},
						{
							"id": 406,
							"name": "getter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Function"
							}
						},
						{
							"id": 405,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "auth/strategies/password/password-strategy-options.ts",
									"line": 31,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								404,
								406,
								405
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/strategies/password/password-strategy-options.ts",
							"line": 29,
							"character": 40
						}
					]
				},
				{
					"id": 508,
					"name": "passwordStrategyOptions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "auth/strategies/password/password-strategy-options.ts",
							"line": 153,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"name": "NbPasswordAuthStrategyOptions",
						"id": 410
					},
					"defaultValue": " new NbPasswordAuthStrategyOptions()"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						410
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						407,
						380,
						391,
						403
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						508
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/strategies/password/password-strategy-options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1104,
			"name": "\"date-fns/date-fns.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/date-fns/date-fns.module.ts",
			"children": [
				{
					"id": 1105,
					"name": "NbDateFnsDateModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  providers: [{ provide: NbDateService, useClass: NbDateFnsDateService }],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "date-fns/date-fns.module.ts",
							"line": 16,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1105
					]
				}
			],
			"sources": [
				{
					"fileName": "date-fns/date-fns.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1106,
			"name": "\"date-fns/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/date-fns/index.ts",
			"sources": [
				{
					"fileName": "date-fns/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1095,
			"name": "\"date-fns/services/date-fns-date.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/date-fns/services/date-fns-date.service.ts",
			"children": [
				{
					"id": 1096,
					"name": "NbDateFnsDateService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1097,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1098,
									"name": "new NbDateFnsDateService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1099,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "LOCALE_ID"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDateFnsDateService",
										"id": 1096
									}
								}
							],
							"sources": [
								{
									"fileName": "date-fns/services/date-fns-date.service.ts",
									"line": 15,
									"character": 63
								}
							]
						},
						{
							"id": 1100,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1101,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1102,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1103,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "date-fns/services/date-fns-date.service.ts",
									"line": 21,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1097
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1100
							]
						}
					],
					"sources": [
						{
							"fileName": "date-fns/services/date-fns-date.service.ts",
							"line": 15,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbDateFnsDateService",
							"id": 1096
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbDateFnsDateService",
							"id": 1096
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1096
					]
				}
			],
			"sources": [
				{
					"fileName": "date-fns/services/date-fns-date.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1222,
			"name": "\"moment/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/moment/index.ts",
			"sources": [
				{
					"fileName": "moment/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1220,
			"name": "\"moment/moment.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/moment/moment.module.ts",
			"children": [
				{
					"id": 1221,
					"name": "NbMomentDateModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  providers: [{ provide: NbDateService, useClass: NbMomentDateService }],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "moment/moment.module.ts",
							"line": 16,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1221
					]
				}
			],
			"sources": [
				{
					"fileName": "moment/moment.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1107,
			"name": "\"moment/services/moment-date.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/moment/services/moment-date.service.ts",
			"children": [
				{
					"id": 1108,
					"name": "NbMomentDateService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1121,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1122,
									"name": "new NbMomentDateService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1123,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "LOCALE_ID"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMomentDateService",
										"id": 1108
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 23,
									"character": 4
								}
							]
						},
						{
							"id": 1109,
							"name": "localeData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 18,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1110,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1117,
											"name": "days",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "moment/services/moment-date.service.ts",
													"line": 22,
													"character": 8
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1118,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 1119,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 1120,
																"name": "key",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													},
													"sources": [
														{
															"fileName": "moment/services/moment-date.service.ts",
															"line": 22,
															"character": 9
														}
													]
												}
											}
										},
										{
											"id": 1112,
											"name": "defaultFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "moment/services/moment-date.service.ts",
													"line": 20,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1111,
											"name": "firstDayOfWeek",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "moment/services/moment-date.service.ts",
													"line": 19,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1113,
											"name": "months",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "moment/services/moment-date.service.ts",
													"line": 21,
													"character": 10
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1114,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 1115,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 1116,
																"name": "key",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													},
													"sources": [
														{
															"fileName": "moment/services/moment-date.service.ts",
															"line": 21,
															"character": 11
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1117,
												1112,
												1111,
												1113
											]
										}
									],
									"sources": [
										{
											"fileName": "moment/services/moment-date.service.ts",
											"line": 18,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 1127,
							"name": "addDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1128,
									"name": "addDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1129,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1130,
											"name": "days",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 35,
									"character": 8
								}
							]
						},
						{
							"id": 1131,
							"name": "addMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1132,
									"name": "addMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1133,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1134,
											"name": "months",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 39,
									"character": 10
								}
							]
						},
						{
							"id": 1135,
							"name": "addYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1136,
									"name": "addYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1137,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1138,
											"name": "years",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 43,
									"character": 9
								}
							]
						},
						{
							"id": 1139,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1140,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1141,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 47,
									"character": 7
								}
							]
						},
						{
							"id": 1142,
							"name": "compareDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1143,
									"name": "compareDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1144,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1145,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 51,
									"character": 14
								}
							]
						},
						{
							"id": 1146,
							"name": "createDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1147,
									"name": "createDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1148,
											"name": "year",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1149,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1150,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 57,
									"character": 12
								}
							]
						},
						{
							"id": 1151,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1152,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1153,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1154,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 61,
									"character": 8
								}
							]
						},
						{
							"id": 1155,
							"name": "getDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1156,
									"name": "getDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1157,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 65,
									"character": 9
								}
							]
						},
						{
							"id": 1158,
							"name": "getDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1159,
									"name": "getDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1160,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 69,
									"character": 14
								}
							]
						},
						{
							"id": 1161,
							"name": "getDayOfWeekNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1162,
									"name": "getDayOfWeekNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1163,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											},
											"defaultValue": " TranslationWidth.Narrow"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 73,
									"character": 19
								}
							]
						},
						{
							"id": 1164,
							"name": "getFirstDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1165,
									"name": "getFirstDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 77,
									"character": 19
								}
							]
						},
						{
							"id": 1166,
							"name": "getMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1167,
									"name": "getMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1168,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 81,
									"character": 10
								}
							]
						},
						{
							"id": 1169,
							"name": "getMonthEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1170,
									"name": "getMonthEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1171,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 85,
									"character": 13
								}
							]
						},
						{
							"id": 1172,
							"name": "getMonthName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1173,
									"name": "getMonthName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1174,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1175,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											},
											"defaultValue": " TranslationWidth.Abbreviated"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 89,
									"character": 14
								}
							]
						},
						{
							"id": 1176,
							"name": "getMonthNameByIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1177,
									"name": "getMonthNameByIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1178,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1179,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											},
											"defaultValue": " TranslationWidth.Abbreviated"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 94,
									"character": 21
								}
							]
						},
						{
							"id": 1180,
							"name": "getMonthStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1181,
									"name": "getMonthStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1182,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 98,
									"character": 15
								}
							]
						},
						{
							"id": 1183,
							"name": "getNumberOfDaysInMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1184,
									"name": "getNumberOfDaysInMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1185,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 102,
									"character": 24
								}
							]
						},
						{
							"id": 1186,
							"name": "getYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1187,
									"name": "getYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1188,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 106,
									"character": 9
								}
							]
						},
						{
							"id": 1189,
							"name": "getYearEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1190,
									"name": "getYearEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1191,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 110,
									"character": 12
								}
							]
						},
						{
							"id": 1192,
							"name": "getYearStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1193,
									"name": "getYearStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1194,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 114,
									"character": 14
								}
							]
						},
						{
							"id": 1195,
							"name": "isSameDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1196,
									"name": "isSameDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1197,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1198,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 118,
									"character": 11
								}
							]
						},
						{
							"id": 1199,
							"name": "isSameMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1200,
									"name": "isSameMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1201,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1202,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 122,
									"character": 13
								}
							]
						},
						{
							"id": 1203,
							"name": "isSameYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1204,
									"name": "isSameYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1205,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										},
										{
											"id": 1206,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Moment"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 126,
									"character": 12
								}
							]
						},
						{
							"id": 1207,
							"name": "isValidDateString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1208,
									"name": "isValidDateString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1209,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1210,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 130,
									"character": 19
								}
							]
						},
						{
							"id": 1211,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1212,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1213,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1214,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 134,
									"character": 7
								}
							]
						},
						{
							"id": 1124,
							"name": "setLocale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1125,
									"name": "setLocale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1126,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 30,
									"character": 11
								}
							]
						},
						{
							"id": 1217,
							"name": "setMomentLocaleData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 1218,
									"name": "setMomentLocaleData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1219,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 142,
									"character": 31
								}
							]
						},
						{
							"id": 1215,
							"name": "today",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1216,
									"name": "today",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Moment"
									}
								}
							],
							"sources": [
								{
									"fileName": "moment/services/moment-date.service.ts",
									"line": 138,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1121
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1109
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1127,
								1131,
								1135,
								1139,
								1142,
								1146,
								1151,
								1155,
								1158,
								1161,
								1164,
								1166,
								1169,
								1172,
								1176,
								1180,
								1183,
								1186,
								1189,
								1192,
								1195,
								1199,
								1203,
								1207,
								1211,
								1124,
								1217,
								1215
							]
						}
					],
					"sources": [
						{
							"fileName": "moment/services/moment-date.service.ts",
							"line": 17,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbMomentDateService",
							"id": 1108,
							"typeArguments": [
								{
									"type": "reference",
									"name": "Moment"
								}
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbMomentDateService",
							"id": 1108
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1108
					]
				}
			],
			"sources": [
				{
					"fileName": "moment/services/moment-date.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1315,
			"name": "\"security/directives/is-granted.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/security/directives/is-granted.directive.ts",
			"children": [
				{
					"id": 1316,
					"name": "NbIsGrantedDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{ selector: '[nbIsGranted]'}"
							}
						}
					],
					"children": [
						{
							"id": 1319,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1323,
									"name": "new NbIsGrantedDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1324,
											"name": "templateRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TemplateRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 1325,
											"name": "viewContainer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ViewContainerRef"
											}
										},
										{
											"id": 1326,
											"name": "accessChecker",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAccessChecker",
												"id": 1304
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbIsGrantedDirective",
										"id": 1316
									}
								}
							],
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 10,
									"character": 26
								}
							]
						},
						{
							"id": 1322,
							"name": "accessChecker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 14,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAccessChecker",
								"id": 1304
							}
						},
						{
							"id": 1317,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 9,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 1318,
							"name": "hasView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 10,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1320,
							"name": "templateRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 12,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "TemplateRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 1321,
							"name": "viewContainer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 13,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							}
						},
						{
							"id": 1327,
							"name": "nbIsGranted",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 1328,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 1329,
										"name": "__namedParameters",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"originalName": "__0",
										"type": {
											"type": "tuple",
											"elements": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 17,
									"character": 26
								}
							]
						},
						{
							"id": 1330,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1331,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/directives/is-granted.directive.ts",
									"line": 34,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1319
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1322,
								1317,
								1318,
								1320,
								1321
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1327
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1330
							]
						}
					],
					"sources": [
						{
							"fileName": "security/directives/is-granted.directive.ts",
							"line": 7,
							"character": 33
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1316
					]
				}
			],
			"sources": [
				{
					"fileName": "security/directives/is-granted.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1337,
			"name": "\"security/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/security/index.ts",
			"sources": [
				{
					"fileName": "security/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1332,
			"name": "\"security/security.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/security/security.module.ts",
			"children": [
				{
					"id": 1333,
					"name": "NbSecurityModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    NbIsGrantedDirective,\n  ],\n  exports: [\n    NbIsGrantedDirective,\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 1334,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1335,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1336,
											"name": "nbSecurityOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "NbAclOptions",
												"id": 1231
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/security.module.ts",
									"line": 21,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1334
							]
						}
					],
					"sources": [
						{
							"fileName": "security/security.module.ts",
							"line": 20,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1333
					]
				}
			],
			"sources": [
				{
					"fileName": "security/security.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1223,
			"name": "\"security/security.options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/security/security.options.ts",
			"children": [
				{
					"id": 1228,
					"name": "NbAccessControl",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": {
						"id": 1229,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1230,
								"name": "role",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"name": "NbAclRole",
							"id": 1224
						}
					},
					"sources": [
						{
							"fileName": "security/security.options.ts",
							"line": 8,
							"character": 32
						}
					]
				},
				{
					"id": 1231,
					"name": "NbAclOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1232,
							"name": "accessControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "security/security.options.ts",
									"line": 13,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAccessControl",
								"id": 1228
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1232
							]
						}
					],
					"sources": [
						{
							"fileName": "security/security.options.ts",
							"line": 12,
							"character": 29
						}
					]
				},
				{
					"id": 1224,
					"name": "NbAclRole",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": {
						"id": 1226,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1227,
								"name": "permission",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					},
					"children": [
						{
							"id": 1225,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "security/security.options.ts",
									"line": 4,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1225
							]
						}
					],
					"sources": [
						{
							"fileName": "security/security.options.ts",
							"line": 3,
							"character": 26
						}
					]
				},
				{
					"id": 1233,
					"name": "NB_SECURITY_OPTIONS_TOKEN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "security/security.options.ts",
							"line": 16,
							"character": 38
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbAclOptions",
								"id": 1231
							}
						]
					},
					"defaultValue": " new InjectionToken<NbAclOptions>('Nebular Security Options')"
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1228,
						1231,
						1224
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1233
					]
				}
			],
			"sources": [
				{
					"fileName": "security/security.options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1303,
			"name": "\"security/services/access-checker.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/security/services/access-checker.service.ts",
			"children": [
				{
					"id": 1304,
					"name": "NbAccessChecker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Access checker service.",
						"text": "Injects `NbRoleProvider` to determine current user role, and checks access permissions using `NbAclService`\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1305,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1308,
									"name": "new NbAccessChecker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1309,
											"name": "roleProvider",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbRoleProvider",
												"id": 1300
											}
										},
										{
											"id": 1310,
											"name": "acl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAclService",
												"id": 1235
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAccessChecker",
										"id": 1304
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/access-checker.service.ts",
									"line": 18,
									"character": 30
								}
							]
						},
						{
							"id": 1307,
							"name": "acl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "security/services/access-checker.service.ts",
									"line": 20,
									"character": 67
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAclService",
								"id": 1235
							}
						},
						{
							"id": 1306,
							"name": "roleProvider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "security/services/access-checker.service.ts",
									"line": 20,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "NbRoleProvider",
								"id": 1300
							}
						},
						{
							"id": 1311,
							"name": "isGranted",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1312,
									"name": "isGranted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks whether access is granted or not",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 1313,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1314,
											"name": "resource",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/access-checker.service.ts",
									"line": 30,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1305
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1307,
								1306
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1311
							]
						}
					],
					"sources": [
						{
							"fileName": "security/services/access-checker.service.ts",
							"line": 18,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1304
					]
				}
			],
			"sources": [
				{
					"fileName": "security/services/access-checker.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1234,
			"name": "\"security/services/acl.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/security/services/acl.service.ts",
			"children": [
				{
					"id": 1235,
					"name": "NbAclService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Common acl service."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1238,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1240,
									"name": "new NbAclService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1241,
											"name": "settings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Optional",
													"type": {
														"type": "reference",
														"name": "Optional"
													},
													"arguments": {}
												},
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_SECURITY_OPTIONS_TOKEN"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbAclOptions",
												"id": 1231
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAclService",
										"id": 1235
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 25,
									"character": 38
								}
							]
						},
						{
							"id": 1239,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Optional",
									"type": {
										"type": "reference",
										"name": "Optional"
									},
									"arguments": {}
								},
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_SECURITY_OPTIONS_TOKEN"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 27,
									"character": 79
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAclOptions",
								"id": 1231
							}
						},
						{
							"id": 1237,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 25,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAccessControl",
								"id": 1228
							}
						},
						{
							"id": 1236,
							"name": "ANY_RESOURCE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 23,
									"character": 38
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "*"
							},
							"defaultValue": "\"*\""
						},
						{
							"id": 1253,
							"name": "allow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1254,
									"name": "allow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Allow a permission for specific resources to a role"
									},
									"parameters": [
										{
											"id": 1255,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1256,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1257,
											"name": "resource",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 72,
									"character": 7
								}
							]
						},
						{
							"id": 1258,
							"name": "can",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1259,
									"name": "can",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check whether the role has a permission to a resource",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 1260,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1261,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1262,
											"name": "resource",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 96,
									"character": 5
								}
							]
						},
						{
							"id": 1272,
							"name": "exactCan",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1273,
									"name": "exactCan",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1274,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1275,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1276,
											"name": "resource",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 120,
									"character": 18
								}
							]
						},
						{
							"id": 1263,
							"name": "getRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1264,
									"name": "getRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1265,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAclRole",
										"id": 1224
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 104,
									"character": 17
								}
							]
						},
						{
							"id": 1281,
							"name": "getRoleAbilities",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1282,
									"name": "getRoleAbilities",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1283,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1284,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 1285,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 1286,
														"name": "permission",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											},
											"sources": [
												{
													"fileName": "security/services/acl.service.ts",
													"line": 129,
													"character": 41
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 129,
									"character": 26
								}
							]
						},
						{
							"id": 1287,
							"name": "getRoleParent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1288,
									"name": "getRoleParent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1289,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 135,
									"character": 23
								}
							]
						},
						{
							"id": 1277,
							"name": "getRoleResources",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1278,
									"name": "getRoleResources",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1279,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1280,
											"name": "permission",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 125,
									"character": 26
								}
							]
						},
						{
							"id": 1245,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1246,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a new role with a list of abilities (permission/resources combinations)"
									},
									"parameters": [
										{
											"id": 1247,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1248,
											"name": "parent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " null"
										},
										{
											"id": 1249,
											"name": "abilities",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1250,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 1251,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 1252,
																"name": "permission",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													},
													"sources": [
														{
															"fileName": "security/services/acl.service.ts",
															"line": 52,
															"character": 58
														}
													]
												}
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 52,
									"character": 10
								}
							]
						},
						{
							"id": 1242,
							"name": "setAccessControl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1243,
									"name": "setAccessControl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set/Reset ACL list"
									},
									"parameters": [
										{
											"id": 1244,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "NbAccessControl",
												"id": 1228
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 38,
									"character": 18
								}
							]
						},
						{
							"id": 1269,
							"name": "validateResource",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1270,
									"name": "validateResource",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1271,
											"name": "resource",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 114,
									"character": 26
								}
							]
						},
						{
							"id": 1266,
							"name": "validateRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1267,
									"name": "validateRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1268,
											"name": "role",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/acl.service.ts",
									"line": 108,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1238
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1239,
								1237,
								1236
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1253,
								1258,
								1272,
								1263,
								1281,
								1287,
								1277,
								1245,
								1242,
								1269,
								1266
							]
						}
					],
					"sources": [
						{
							"fileName": "security/services/acl.service.ts",
							"line": 21,
							"character": 25
						}
					]
				},
				{
					"id": 1296,
					"name": "popParent",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 1297,
							"name": "popParent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1298,
									"name": "abilities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "security/services/acl.service.ts",
							"line": 11,
							"character": 15
						}
					]
				},
				{
					"id": 1293,
					"name": "shallowArrayClone",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 1294,
							"name": "shallowArrayClone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1295,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "security/services/acl.service.ts",
							"line": 10,
							"character": 23
						}
					]
				},
				{
					"id": 1290,
					"name": "shallowObjectClone",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 1291,
							"name": "shallowObjectClone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1292,
									"name": "o",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "security/services/acl.service.ts",
							"line": 9,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1235
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1296,
						1293,
						1290
					]
				}
			],
			"sources": [
				{
					"fileName": "security/services/acl.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1299,
			"name": "\"security/services/role.provider\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/security/services/role.provider.ts",
			"children": [
				{
					"id": 1300,
					"name": "NbRoleProvider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 1301,
							"name": "getRole",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1302,
									"name": "getRole",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns current user role",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "security/services/role.provider.ts",
									"line": 14,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1301
							]
						}
					],
					"sources": [
						{
							"fileName": "security/services/role.provider.ts",
							"line": 8,
							"character": 36
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1300
					]
				}
			],
			"sources": [
				{
					"fileName": "security/services/role.provider.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4863,
			"name": "\"theme/components/accordion/accordion-item-body.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/accordion/accordion-item-body.component.ts",
			"children": [
				{
					"id": 4864,
					"name": "NbAccordionItemBodyComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within `<nb-accordion-item>` component"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-accordion-item-body',\n  template: `\n    <div [@accordionItemBody]=\"{ value: state, params: { contentHeight: contentHeight } }\">\n      <div class=\"item-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  animations: [accordionItemBodyTrigger],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4867,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4871,
									"name": "new NbAccordionItemBodyComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4872,
											"name": "accordionItem",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Host",
													"type": {
														"type": "reference",
														"name": "Host"
													},
													"arguments": {}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbAccordionItemComponent",
												"id": 4824
											}
										},
										{
											"id": 4873,
											"name": "el",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 4874,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAccordionItemBodyComponent",
										"id": 4864
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 62,
									"character": 32
								}
							]
						},
						{
							"id": 4868,
							"name": "accordionItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Host",
									"type": {
										"type": "reference",
										"name": "Host"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 65,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAccordionItemComponent",
								"id": 4824
							}
						},
						{
							"id": 4866,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 62,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4870,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 67,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 4865,
							"name": "contentHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 60,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4869,
							"name": "el",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 66,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 4875,
							"name": "state",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 4876,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 70,
									"character": 11
								}
							]
						},
						{
							"id": 4879,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4880,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 81,
									"character": 13
								}
							]
						},
						{
							"id": 4877,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4878,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-body.component.ts",
									"line": 74,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4867
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4868,
								4866,
								4870,
								4865,
								4869
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4875
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4879,
								4877
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/accordion/accordion-item-body.component.ts",
							"line": 58,
							"character": 41
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 4881,
					"name": "accordionItemBodyTrigger",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/accordion/accordion-item-body.component.ts",
							"line": 21,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "AnimationTriggerMetadata"
					},
					"defaultValue": " trigger('accordionItemBody', [\n  state(\n    'collapsed',\n    style({\n      overflow: 'hidden',\n      visibility: 'hidden',\n      height: 0,\n    }),\n  ),\n  state(\n    'expanded',\n    style({\n      overflow: 'hidden',\n      visibility: 'visible',\n      height: '{{ contentHeight }}',\n    }),\n    { params: { contentHeight: '1rem' } },\n  ),\n  transition('collapsed => expanded', animate('100ms ease-in')),\n  transition('expanded => collapsed', animate('100ms ease-out')),\n])"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4864
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4881
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/accordion/accordion-item-body.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4882,
			"name": "\"theme/components/accordion/accordion-item-header.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/accordion/accordion-item-header.component.ts",
			"children": [
				{
					"id": 4883,
					"name": "NbAccordionItemHeaderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within `<nb-accordion-item>` component"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-accordion-item-header',\n  styleUrls: ['./accordion-item-header.component.scss'],\n  template: `\n    <ng-content select=\"nb-accordion-item-title\"></ng-content>\n    <ng-content select=\"nb-accordion-item-description\"></ng-content>\n    <ng-content></ng-content>\n    <i [@expansionIndicator]=\"state\" *ngIf=\"!disabled\" class=\"nb-arrow-down\"></i>\n  `,\n  animations: [\n    trigger('expansionIndicator', [\n      state(\n        'expanded',\n        style({\n          transform: 'rotate(180deg)',\n        }),\n      ),\n      transition('collapsed => expanded', animate('100ms ease-in')),\n      transition('expanded => collapsed', animate('100ms ease-out')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4897,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4900,
									"name": "new NbAccordionItemHeaderComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4901,
											"name": "accordionItem",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Host",
													"type": {
														"type": "reference",
														"name": "Host"
													},
													"arguments": {}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbAccordionItemComponent",
												"id": 4824
											}
										},
										{
											"id": 4902,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAccordionItemHeaderComponent",
										"id": 4883
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 85,
									"character": 32
								}
							]
						},
						{
							"id": 4898,
							"name": "accordionItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Host",
									"type": {
										"type": "reference",
										"name": "Host"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 86,
									"character": 43
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAccordionItemComponent",
								"id": 4824
							}
						},
						{
							"id": 4896,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 85,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4899,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 86,
									"character": 81
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 4890,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.aria-disabled'"
									}
								}
							],
							"getSignature": {
								"id": 4891,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 67,
									"character": 14
								}
							]
						},
						{
							"id": 4886,
							"name": "expanded",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accordion-item-header-expanded'"
									}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.aria-expanded'"
									}
								}
							],
							"getSignature": {
								"id": 4887,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 57,
									"character": 14
								}
							]
						},
						{
							"id": 4884,
							"name": "isCollapsed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accordion-item-header-collapsed'"
									}
								}
							],
							"getSignature": {
								"id": 4885,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 51,
									"character": 17
								}
							]
						},
						{
							"id": 4894,
							"name": "state",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 4895,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 76,
									"character": 11
								}
							]
						},
						{
							"id": 4888,
							"name": "tabbable",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.tabindex'"
									}
								}
							],
							"getSignature": {
								"id": 4889,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 62,
									"character": 14
								}
							]
						},
						{
							"id": 4905,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4906,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 95,
									"character": 13
								}
							]
						},
						{
							"id": 4903,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4904,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 89,
									"character": 10
								}
							]
						},
						{
							"id": 4892,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 4893,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item-header.component.ts",
									"line": 72,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4897
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4898,
								4896,
								4899
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4890,
								4886,
								4884,
								4894,
								4888
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4905,
								4903,
								4892
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/accordion/accordion-item-header.component.ts",
							"line": 48,
							"character": 43
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4883
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/accordion/accordion-item-header.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4823,
			"name": "\"theme/components/accordion/accordion-item.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/accordion/accordion-item.component.ts",
			"children": [
				{
					"id": 4824,
					"name": "NbAccordionItemComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within `<nb-accordion>` component"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-accordion-item',\n  styleUrls: ['./accordion-item.component.scss'],\n  template: `\n    <ng-content select=\"nb-accordion-item-header\"></ng-content>\n    <ng-content select=\"nb-accordion-item-body\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4842,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4845,
									"name": "new NbAccordionItemComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4846,
											"name": "accordion",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Host",
													"type": {
														"type": "reference",
														"name": "Host"
													},
													"arguments": {}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbAccordionComponent",
												"id": 4805
											}
										},
										{
											"id": 4847,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAccordionItemComponent",
										"id": 4824
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 93,
									"character": 23
								}
							]
						},
						{
							"id": 4843,
							"name": "accordion",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Host",
									"type": {
										"type": "reference",
										"name": "Host"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 95,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAccordionComponent",
								"id": 4805
							}
						},
						{
							"id": 4838,
							"name": "accordionItemInvalidate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 89,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							},
							"defaultValue": " new Subject<boolean>()"
						},
						{
							"id": 4841,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 93,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4844,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 95,
									"character": 73
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 4837,
							"name": "collapsedChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits whenever the expanded state of the accordion changes.\nPrimarily used to facilitate two-way binding."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 87,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							},
							"defaultValue": " new EventEmitter<boolean>()"
						},
						{
							"id": 4839,
							"name": "collapsedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 91,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4840,
							"name": "disabledValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 92,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4825,
							"name": "collapsed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Item is collapse (`true` by default)",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'collapsed'"
									}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.collapsed'"
									}
								}
							],
							"getSignature": {
								"id": 4826,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Item is collapse (`true` by default)",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 4827,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Item is collapse (`true` by default)"
								},
								"parameters": [
									{
										"id": 4828,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 47,
									"character": 15
								},
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 50,
									"character": 15
								}
							]
						},
						{
							"id": 4833,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Item is disabled and cannot be opened.",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'disabled'"
									}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"getSignature": {
								"id": 4834,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Item is disabled and cannot be opened.",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 4835,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Item is disabled and cannot be opened."
								},
								"parameters": [
									{
										"id": 4836,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 75,
									"character": 14
								},
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 78,
									"character": 14
								}
							]
						},
						{
							"id": 4829,
							"name": "expanded",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Item is expanded (`false` by default)",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'expanded'"
									}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.expanded'"
									}
								}
							],
							"getSignature": {
								"id": 4830,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Item is expanded (`false` by default)",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 4831,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Item is expanded (`false` by default)"
								},
								"parameters": [
									{
										"id": 4832,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 62,
									"character": 14
								},
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 65,
									"character": 14
								}
							]
						},
						{
							"id": 4852,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4853,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Collapse the item."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 123,
									"character": 7
								}
							]
						},
						{
							"id": 4861,
							"name": "invalidate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4862,
									"name": "invalidate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 144,
									"character": 20
								}
							]
						},
						{
							"id": 4856,
							"name": "ngOnChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4857,
									"name": "ngOnChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4858,
											"name": "changes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SimpleChanges"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 135,
									"character": 13
								}
							]
						},
						{
							"id": 4859,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4860,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 139,
									"character": 13
								}
							]
						},
						{
							"id": 4854,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4855,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 127,
									"character": 10
								}
							]
						},
						{
							"id": 4850,
							"name": "open",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4851,
									"name": "open",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Open the item."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 116,
									"character": 6
								}
							]
						},
						{
							"id": 4848,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4849,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Open/close the item"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion-item.component.ts",
									"line": 101,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4842
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4843,
								4838,
								4841,
								4844,
								4837,
								4839,
								4840
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4825,
								4833,
								4829
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4852,
								4861,
								4856,
								4859,
								4854,
								4850,
								4848
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/accordion/accordion-item.component.ts",
							"line": 39,
							"character": 37
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnChanges"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4824
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/accordion/accordion-item.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4804,
			"name": "\"theme/components/accordion/accordion.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/accordion/accordion.component.ts",
			"children": [
				{
					"id": 4805,
					"name": "NbAccordionComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An accordion allows to toggle the display of sections of content",
						"text": "Basic example",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "accordion/accordion-showcase.component)\n\n```ts\n<nb-accordion>\n <nb-accordion-item>\n  <nb-accordion-item-header>Product Details</nb-accordion-item-header>\n  <nb-accordion-item-body>\n    Item Content\n  </nb-accordion-item-body>\n </nb-accordion-item>\n</nb-accordion>\n```\nWith `multi` mode acordion can have multiple items expanded:"
							},
							{
								"tag": "stacked-example(showcase,",
								"text": "accordion/accordion-multi.component)\n\n`NbAccordionItemComponent` has several method, for example it is possible to trigger item click/toggle:"
							},
							{
								"tag": "stacked-example(showcase,",
								"text": "accordion/accordion-toggle.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\naccordion-padding:\naccordion-separator:\naccordion-header-font-family:\naccordion-header-font-size:\naccordion-header-font-weight:\naccordion-header-fg-heading:\naccordion-header-disabled-fg:\naccordion-header-border-width:\naccordion-header-border-type:\naccordion-header-border-color:\naccordion-item-bg:\naccordion-item-font-size:\naccordion-item-font-weight:\naccordion-item-font-family:\naccordion-item-fg-text:\naccordion-item-shadow:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-accordion',\n  template: `\n    <ng-content select=\"nb-accordion-item\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4818,
							"name": "multiValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 83,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4813,
							"name": "openCloseItems",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 69,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							},
							"defaultValue": " new Subject<boolean>()"
						},
						{
							"id": 4806,
							"name": "STATUS_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 61,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 4812,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 67,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 4807,
							"name": "STATUS_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 62,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 4809,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 64,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 4808,
							"name": "STATUS_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 63,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 4810,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 65,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 4811,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 66,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 4814,
							"name": "multi",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Allow multiple items to be expanded at the same time.",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'multi'"
									}
								}
							],
							"getSignature": {
								"id": 4815,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": " Allow multiple items to be expanded at the same time.",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 4816,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": " Allow multiple items to be expanded at the same time."
								},
								"parameters": [
									{
										"id": 4817,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 76,
									"character": 11
								},
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 79,
									"character": 11
								}
							]
						},
						{
							"id": 4821,
							"name": "closeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4822,
									"name": "closeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Closes all enabled accordion items."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 97,
									"character": 10
								}
							]
						},
						{
							"id": 4819,
							"name": "openAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4820,
									"name": "openAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Opens all enabled accordion items."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/accordion/accordion.component.ts",
									"line": 88,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4818,
								4813,
								4806,
								4812,
								4807,
								4809,
								4808,
								4810,
								4811
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4814
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4821,
								4819
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/accordion/accordion.component.ts",
							"line": 59,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4805
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/accordion/accordion.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4907,
			"name": "\"theme/components/accordion/accordion.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/accordion/accordion.module.ts",
			"children": [
				{
					"id": 4908,
					"name": "NbAccordionModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [CommonModule],\n  exports: [...NB_ACCORDION_COMPONENTS],\n  declarations: [...NB_ACCORDION_COMPONENTS],\n  providers: [],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/accordion/accordion.module.ts",
							"line": 28,
							"character": 30
						}
					]
				},
				{
					"id": 4909,
					"name": "NB_ACCORDION_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/accordion/accordion.module.ts",
							"line": 15,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbAccordionComponent,\n  NbAccordionItemComponent,\n  NbAccordionItemHeaderComponent,\n  NbAccordionItemBodyComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4908
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4909
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/accordion/accordion.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3499,
			"name": "\"theme/components/actions/actions.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/actions/actions.component.ts",
			"children": [
				{
					"id": 3500,
					"name": "NbActionComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Action item, display a link with an icon, or any other content provided instead."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-action',\n  template: `\n    <a class=\"icon-container\" href=\"#\" *ngIf=\"icon; else showContent\" (click)=\"$event.preventDefault()\">\n      <i class=\"control-icon {{ icon }}\"></i>\n    </a>\n    <ng-template #showContent>\n      <ng-content></ng-content>\n    </ng-template>\n    <nb-badge *ngIf=\"badgeText\" [text]=\"badgeText\" [status]=\"badgeStatus\" [position]=\"badgePosition\"></nb-badge>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3508,
							"name": "badgePosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge position.\nCan be set to any class or to one of predefined positions:\n'top left', 'top right', 'bottom left', 'bottom right',\n'top start', 'top end', 'bottom start', 'bottom end'",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 69,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3507,
							"name": "badgeStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge status (adds specific styles):\n'primary', 'info', 'success', 'warning', 'danger'",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 60,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3506,
							"name": "badgeText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge text to display",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 53,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3501,
							"name": "disabledValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 32,
									"character": 46
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3502,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Icon class to display",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 38,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3503,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Disables the item (changes item opacity and mouse cursor)",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3504,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Disables the item (changes item opacity and mouse cursor)",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3505,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 45,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3508,
								3507,
								3506,
								3501,
								3502
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3503
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/actions/actions.component.ts",
							"line": 30,
							"character": 30
						}
					]
				},
				{
					"id": 3509,
					"name": "NbActionsComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Shows a horizontal list of actions, available in multiple sizes.\nAligns items vertically.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "action/action-showcase.component)\n\nBasic actions setup:\n```html\n<nb-actions size=\"small\">\n  <nb-action icon=\"nb-search\"></nb-action>\n  <nb-action icon=\"nb-power-circled\"></nb-action>\n  <nb-action icon=\"nb-person\"></nb-action>\n</nb-actions>\n```\n\nMultiple sizes example:"
							},
							{
								"tag": "stacked-example(multiple",
								"text": "Sizes, action/action-sizes.component)\n\nIt is also possible to specify a `badge` value:\n"
							},
							{
								"tag": "stacked-example(action",
								"text": "Badge, action/action-badge.component)\n\nand we can set it to full a width of a parent component"
							},
							{
								"tag": "stacked-example(full",
								"text": "Width, action/action-width.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nactions-font-size:\nactions-font-family:\nactions-line-height:\nactions-fg:\nactions-bg:\nactions-separator:\nactions-padding:\nactions-size-small:\nactions-size-medium:\nactions-size-large:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-actions',\n  styleUrls: ['./actions.component.scss'],\n  template: `\n    <ng-content select=\"nb-action\"></ng-content>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3521,
							"name": "fullWidthValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.full-width'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 144,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3514,
							"name": "inverseValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.inverse'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 126,
									"character": 44
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3513,
							"name": "sizeValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 124,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3512,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 122,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 3511,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 121,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 3510,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 120,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 3528,
							"name": "fullWidth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Component will fill full width of the container",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3529,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Component will fill full width of the container",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3530,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 169,
									"character": 15
								}
							]
						},
						{
							"id": 3525,
							"name": "inverse",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes colors inverse based on current theme",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3526,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes colors inverse based on current theme",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3527,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 160,
									"character": 13
								}
							]
						},
						{
							"id": 3519,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large'"
									}
								}
							],
							"getSignature": {
								"id": 3520,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 139,
									"character": 11
								}
							]
						},
						{
							"id": 3517,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium'"
									}
								}
							],
							"getSignature": {
								"id": 3518,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 134,
									"character": 12
								}
							]
						},
						{
							"id": 3522,
							"name": "size",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the component, small|medium|large",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3523,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Size of the component, small|medium|large",
									"tags": [
										{
											"tag": "type",
											"text": "string\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3524,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 151,
									"character": 10
								}
							]
						},
						{
							"id": 3515,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.small'"
									}
								}
							],
							"getSignature": {
								"id": 3516,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/actions/actions.component.ts",
									"line": 129,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3521,
								3514,
								3513,
								3512,
								3511,
								3510
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3528,
								3525,
								3519,
								3517,
								3522,
								3515
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/actions/actions.component.ts",
							"line": 118,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3500,
						3509
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/actions/actions.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3531,
			"name": "\"theme/components/actions/actions.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/actions/actions.module.ts",
			"children": [
				{
					"id": 3532,
					"name": "NbActionsModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n    NbBadgeModule,\n  ],\n  declarations: [\n    ...NB_ACTIONS_COMPONENTS,\n  ],\n  exports: [\n    ...NB_ACTIONS_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/actions/actions.module.ts",
							"line": 32,
							"character": 28
						}
					]
				},
				{
					"id": 3533,
					"name": "NB_ACTIONS_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/actions/actions.module.ts",
							"line": 15,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbActionComponent,\n  NbActionsComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3532
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3533
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/actions/actions.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4343,
			"name": "\"theme/components/alert/alert.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/alert/alert.component.ts",
			"children": [
				{
					"id": 4344,
					"name": "NbAlertComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Alert component.",
						"text": "Basic alert example:",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "alert/alert-showcase.component)\n\nAlert configuration:\n\n```html\n<nb-alert status=\"success\">\n  You have been successfully authenticated!\n</nb-alert>\n```\n\nAlert could additionally have a `close` button when `closable` property is set:\n```html\n<nb-alert status=\"success\" closable (close)=\"onClose()\">\n  You have been successfully authenticated!\n</nb-alert>\n```\n\nColored alerts could be simply configured by providing a `status` property:"
							},
							{
								"tag": "stacked-example(colored",
								"text": "Alert, alert/alert-colors.component)\n\nIt is also possible to assign an `accent` property for a slight alert highlight\nas well as combine it with `status`:"
							},
							{
								"tag": "stacked-example(accent",
								"text": "Alert, alert/alert-accents.component)\n\nAnd `outline` property:"
							},
							{
								"tag": "stacked-example(outline",
								"text": "Alert, alert/alert-outline.component)\n"
							},
							{
								"tag": "additional-example(multiple",
								"text": "Sizes, alert/alert-sizes.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nalert-font-size:\nalert-line-height:\nalert-font-weight:\nalert-fg:\nalert-outline-fg:\nalert-bg:\nalert-active-bg:\nalert-disabled-bg:\nalert-disabled-fg:\nalert-primary-bg:\nalert-info-bg:\nalert-success-bg:\nalert-warning-bg:\nalert-danger-bg:\nalert-height-xxsmall:\nalert-height-xsmall:\nalert-height-small:\nalert-height-medium:\nalert-height-large:\nalert-height-xlarge:\nalert-height-xxlarge:\nalert-shadow:\nalert-border-radius:\nalert-padding:\nalert-closable-padding:\nalert-button-padding:\nalert-margin:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-alert',\n  styleUrls: ['./alert.component.scss'],\n  template: `\n    <button *ngIf=\"closableValue\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"onClose()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <ng-content></ng-content>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4375,
							"name": "accent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 120,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4377,
							"name": "closableValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.closable'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 124,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4455,
							"name": "close",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when chip is removed",
								"tags": [
									{
										"tag": "type",
										"text": "EventEmitter<any>\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 333,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 4376,
							"name": "outline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 121,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4373,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 118,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4374,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 119,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4359,
							"name": "ACCENT_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 102,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 4365,
							"name": "ACCENT_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 108,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 4360,
							"name": "ACCENT_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 103,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 4362,
							"name": "ACCENT_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 105,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 4361,
							"name": "ACCENT_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 104,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 4363,
							"name": "ACCENT_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 106,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 4364,
							"name": "ACCENT_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 107,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 4366,
							"name": "OUTLINE_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 110,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 4372,
							"name": "OUTLINE_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 116,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 4367,
							"name": "OUTLINE_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 111,
									"character": 34
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 4369,
							"name": "OUTLINE_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 113,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 4368,
							"name": "OUTLINE_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 112,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 4370,
							"name": "OUTLINE_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 114,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 4371,
							"name": "OUTLINE_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 115,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 4349,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 90,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 4348,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 89,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 4347,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 88,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 4350,
							"name": "SIZE_XLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 91,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xlarge"
							},
							"defaultValue": "\"xlarge\""
						},
						{
							"id": 4346,
							"name": "SIZE_XSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 87,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xsmall"
							},
							"defaultValue": "\"xsmall\""
						},
						{
							"id": 4351,
							"name": "SIZE_XXLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 92,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxlarge"
							},
							"defaultValue": "\"xxlarge\""
						},
						{
							"id": 4345,
							"name": "SIZE_XXSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 86,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxsmall"
							},
							"defaultValue": "\"xxsmall\""
						},
						{
							"id": 4352,
							"name": "STATUS_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 94,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 4358,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 100,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 4353,
							"name": "STATUS_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 95,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 4355,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 97,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 4354,
							"name": "STATUS_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 96,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 4356,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 98,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 4357,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 99,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 4395,
							"name": "active",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.active-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4396,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 170,
									"character": 12
								}
							]
						},
						{
							"id": 4423,
							"name": "activeAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-active'"
									}
								}
							],
							"getSignature": {
								"id": 4424,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 240,
									"character": 18
								}
							]
						},
						{
							"id": 4439,
							"name": "activeOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline-active'"
									}
								}
							],
							"getSignature": {
								"id": 4440,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 280,
									"character": 19
								}
							]
						},
						{
							"id": 4378,
							"name": "closable",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Shows `close` icon"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 4379,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Shows `close` icon"
								},
								"parameters": [
									{
										"id": 4380,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 130,
									"character": 14
								}
							]
						},
						{
							"id": 4407,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.danger-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4408,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 200,
									"character": 12
								}
							]
						},
						{
							"id": 4421,
							"name": "dangerAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-danger'"
									}
								}
							],
							"getSignature": {
								"id": 4422,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 235,
									"character": 18
								}
							]
						},
						{
							"id": 4437,
							"name": "dangerOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline-danger'"
									}
								}
							],
							"getSignature": {
								"id": 4438,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 275,
									"character": 19
								}
							]
						},
						{
							"id": 4397,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4398,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 175,
									"character": 14
								}
							]
						},
						{
							"id": 4425,
							"name": "disabledAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-disabled'"
									}
								}
							],
							"getSignature": {
								"id": 4426,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 245,
									"character": 20
								}
							]
						},
						{
							"id": 4441,
							"name": "disabledOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline-disabled'"
									}
								}
							],
							"getSignature": {
								"id": 4442,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 285,
									"character": 21
								}
							]
						},
						{
							"id": 4409,
							"name": "hasAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent'"
									}
								}
							],
							"getSignature": {
								"id": 4410,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 205,
									"character": 15
								}
							]
						},
						{
							"id": 4427,
							"name": "hasOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline'"
									}
								}
							],
							"getSignature": {
								"id": 4428,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 250,
									"character": 16
								}
							]
						},
						{
							"id": 4411,
							"name": "hasStatus",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.status'"
									}
								}
							],
							"getSignature": {
								"id": 4412,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 210,
									"character": 15
								}
							]
						},
						{
							"id": 4401,
							"name": "info",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.info-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4402,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 185,
									"character": 10
								}
							]
						},
						{
							"id": 4415,
							"name": "infoAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-info'"
									}
								}
							],
							"getSignature": {
								"id": 4416,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 220,
									"character": 16
								}
							]
						},
						{
							"id": 4431,
							"name": "infoOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline-info'"
									}
								}
							],
							"getSignature": {
								"id": 4432,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 260,
									"character": 17
								}
							]
						},
						{
							"id": 4389,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4390,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 155,
									"character": 11
								}
							]
						},
						{
							"id": 4387,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4388,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 150,
									"character": 12
								}
							]
						},
						{
							"id": 4399,
							"name": "primary",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.primary-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4400,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 180,
									"character": 13
								}
							]
						},
						{
							"id": 4413,
							"name": "primaryAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-primary'"
									}
								}
							],
							"getSignature": {
								"id": 4414,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 215,
									"character": 19
								}
							]
						},
						{
							"id": 4429,
							"name": "primaryOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline-primary'"
									}
								}
							],
							"getSignature": {
								"id": 4430,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 255,
									"character": 20
								}
							]
						},
						{
							"id": 4449,
							"name": "setAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Alert accent (color of the top border):\nactive, disabled, primary, info, success, warning, danger"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'accent'"
									}
								}
							],
							"setSignature": {
								"id": 4450,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Alert accent (color of the top border):\nactive, disabled, primary, info, success, warning, danger"
								},
								"parameters": [
									{
										"id": 4451,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 315,
									"character": 23
								}
							]
						},
						{
							"id": 4452,
							"name": "setOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Alert outline (color of the border):\nactive, disabled, primary, info, success, warning, danger"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'outline'"
									}
								}
							],
							"setSignature": {
								"id": 4453,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Alert outline (color of the border):\nactive, disabled, primary, info, success, warning, danger"
								},
								"parameters": [
									{
										"id": 4454,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 325,
									"character": 24
								}
							]
						},
						{
							"id": 4443,
							"name": "setSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Alert size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'size'"
									}
								}
							],
							"setSignature": {
								"id": 4444,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Alert size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
								},
								"parameters": [
									{
										"id": 4445,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 295,
									"character": 21
								}
							]
						},
						{
							"id": 4446,
							"name": "setStatus",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Alert status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'status'"
									}
								}
							],
							"setSignature": {
								"id": 4447,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Alert status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
								},
								"parameters": [
									{
										"id": 4448,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 305,
									"character": 23
								}
							]
						},
						{
							"id": 4385,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.small-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4386,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 145,
									"character": 11
								}
							]
						},
						{
							"id": 4403,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.success-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4404,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 190,
									"character": 13
								}
							]
						},
						{
							"id": 4417,
							"name": "successAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-success'"
									}
								}
							],
							"getSignature": {
								"id": 4418,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 225,
									"character": 19
								}
							]
						},
						{
							"id": 4433,
							"name": "successOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline-success'"
									}
								}
							],
							"getSignature": {
								"id": 4434,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 265,
									"character": 20
								}
							]
						},
						{
							"id": 4405,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.warning-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4406,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 195,
									"character": 13
								}
							]
						},
						{
							"id": 4419,
							"name": "warningAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-warning'"
									}
								}
							],
							"getSignature": {
								"id": 4420,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 230,
									"character": 19
								}
							]
						},
						{
							"id": 4435,
							"name": "warningOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.outline-warning'"
									}
								}
							],
							"getSignature": {
								"id": 4436,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 270,
									"character": 20
								}
							]
						},
						{
							"id": 4391,
							"name": "xlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xlarge-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4392,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 160,
									"character": 12
								}
							]
						},
						{
							"id": 4383,
							"name": "xsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xsmall-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4384,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 140,
									"character": 12
								}
							]
						},
						{
							"id": 4393,
							"name": "xxlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxlarge-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4394,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 165,
									"character": 13
								}
							]
						},
						{
							"id": 4381,
							"name": "xxsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxsmall-alert'"
									}
								}
							],
							"getSignature": {
								"id": 4382,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 135,
									"character": 13
								}
							]
						},
						{
							"id": 4456,
							"name": "onClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4457,
									"name": "onClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Emits the removed chip event"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/alert/alert.component.ts",
									"line": 338,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4375,
								4377,
								4455,
								4376,
								4373,
								4374,
								4359,
								4365,
								4360,
								4362,
								4361,
								4363,
								4364,
								4366,
								4372,
								4367,
								4369,
								4368,
								4370,
								4371,
								4349,
								4348,
								4347,
								4350,
								4346,
								4351,
								4345,
								4352,
								4358,
								4353,
								4355,
								4354,
								4356,
								4357
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4395,
								4423,
								4439,
								4378,
								4407,
								4421,
								4437,
								4397,
								4425,
								4441,
								4409,
								4427,
								4411,
								4401,
								4415,
								4431,
								4389,
								4387,
								4399,
								4413,
								4429,
								4449,
								4452,
								4443,
								4446,
								4385,
								4403,
								4417,
								4433,
								4405,
								4419,
								4435,
								4391,
								4383,
								4393,
								4381
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4456
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/alert/alert.component.ts",
							"line": 84,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4344
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/alert/alert.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4458,
			"name": "\"theme/components/alert/alert.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/alert/alert.module.ts",
			"children": [
				{
					"id": 4459,
					"name": "NbAlertModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    NbAlertComponent,\n  ],\n  exports: [\n    NbAlertComponent,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/alert/alert.module.ts",
							"line": 24,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4459
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/alert/alert.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3410,
			"name": "\"theme/components/badge/badge.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/badge/badge.component.ts",
			"children": [
				{
					"id": 3411,
					"name": "NbBadgeComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Badge is a simple labeling component.\nIt can be used to add additional information to any content or highlight unread items.",
						"text": "Element is absolute positioned, so parent should be\n[positioned element](https://developer.mozilla.org/en-US/docs/Web/CSS/position).\nIt means parent `position` should be set to anything except `static`, e.g. `relative`,\n`absolute`, `fixed`, or `sticky`.\n\n\nBadge with default position and status(color):\n\n```html\n<nb-badge text=\"badgeText\"></nb-badge>\n```\n\nFor example, badge can be placed into nb-card header:",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "badge/badge-showcase.component)\n\nBadge located on the bottom right with warning status:\n\n```html\n<nb-badge text=\"badgeText\" status=\"warning\" position=\"bottom right\">\n</nb-badge>\n```\n"
							},
							{
								"tag": "styles",
								"text": "\n\nbadge-fg-text:\nbadge-primary-bg-color:\nbadge-success-bg-color:\nbadge-info-bg-color:\nbadge-warning-bg-color:\nbadge-danger-bg-color:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-badge',\n  styleUrls: ['./badge.component.scss'],\n  template: `\n    <span class=\"nb-badge {{positionClass}} nb-badge-{{colorClass}}\">{{text}}</span>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3433,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3435,
									"name": "new NbBadgeComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3436,
											"name": "layoutDirectionService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirectionService",
												"id": 1581
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbBadgeComponent",
										"id": 3411
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 110,
									"character": 3
								}
							]
						},
						{
							"id": 3425,
							"name": "colorClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbBadgeComponent.STATUS_PRIMARY"
						},
						{
							"id": 3434,
							"name": "layoutDirectionService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 112,
									"character": 44
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirectionService",
								"id": 1581
							}
						},
						{
							"id": 3427,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge position",
								"text": "Can be set to any class or to one of predefined positions:\n'top left', 'top right', 'bottom left', 'bottom right',\n'top start', 'top end', 'bottom start', 'bottom end'",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 85,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3426,
							"name": "text",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Text to display",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 75,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 3419,
							"name": "BOTTOM_END",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 61,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "bottom end"
							},
							"defaultValue": "\"bottom end\""
						},
						{
							"id": 3414,
							"name": "BOTTOM_LEFT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 55,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "bottom left"
							},
							"defaultValue": "\"bottom left\""
						},
						{
							"id": 3415,
							"name": "BOTTOM_RIGHT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 56,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "bottom right"
							},
							"defaultValue": "\"bottom right\""
						},
						{
							"id": 3418,
							"name": "BOTTOM_START",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 60,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "bottom start"
							},
							"defaultValue": "\"bottom start\""
						},
						{
							"id": 3424,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 67,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 3421,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 64,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 3420,
							"name": "STATUS_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 63,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 3422,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 65,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 3423,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 66,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 3417,
							"name": "TOP_END",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 59,
									"character": 25
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "top end"
							},
							"defaultValue": "\"top end\""
						},
						{
							"id": 3412,
							"name": "TOP_LEFT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 53,
									"character": 26
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "top left"
							},
							"defaultValue": "\"top left\""
						},
						{
							"id": 3413,
							"name": "TOP_RIGHT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 54,
									"character": 27
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "top right"
							},
							"defaultValue": "\"top right\""
						},
						{
							"id": 3416,
							"name": "TOP_START",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 58,
									"character": 27
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "top start"
							},
							"defaultValue": "\"top start\""
						},
						{
							"id": 3431,
							"name": "positionClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 3432,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 99,
									"character": 19
								}
							]
						},
						{
							"id": 3428,
							"name": "status",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge status (adds specific styles):\n'primary', 'info', 'success', 'warning', 'danger'",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3429,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Badge status (adds specific styles):\n'primary', 'info', 'success', 'warning', 'danger'",
									"tags": [
										{
											"tag": "type",
											"text": "string\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3430,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/badge/badge.component.ts",
									"line": 93,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3433
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3425,
								3434,
								3427,
								3426,
								3419,
								3414,
								3415,
								3418,
								3424,
								3421,
								3420,
								3422,
								3423,
								3417,
								3412,
								3413,
								3416
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3431,
								3428
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/badge/badge.component.ts",
							"line": 52,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3411
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/badge/badge.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3437,
			"name": "\"theme/components/badge/badge.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/badge/badge.module.ts",
			"children": [
				{
					"id": 3438,
					"name": "NbBadgeModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  exports: [ NbBadgeComponent ],\n  declarations: [ NbBadgeComponent ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/badge/badge.module.ts",
							"line": 14,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3438
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/badge/badge.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4910,
			"name": "\"theme/components/button/button.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/button/button.component.ts",
			"children": [
				{
					"id": 4911,
					"name": "NbButtonComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Basic button component.",
						"text": "Default button size is `medium` and status color is `primary`:",
						"tags": [
							{
								"tag": "stacked-example(button",
								"text": "Showcase, button/button-showcase.component)\n\n```html\n<button nbButton></button>\n```\n\nButtons are available in multiple colors using `status` property:"
							},
							{
								"tag": "stacked-example(button",
								"text": "Colors, button/button-colors.component.html)\n\nThere are three button sizes:\n"
							},
							{
								"tag": "stacked-example(button",
								"text": "Sizes, button/button-sizes.component.html)\n\nAnd two additional style types - `outline`:\n"
							},
							{
								"tag": "stacked-example(outline",
								"text": "Buttons, button/button-outline.component.html)\n\nand `hero`:\n"
							},
							{
								"tag": "stacked-example(button",
								"text": "Colors, button/button-hero.component.html)\n\nButtons available in different shapes, which could be combined with the other properties:"
							},
							{
								"tag": "stacked-example(button",
								"text": "Shapes, button/button-shapes.component)\n\n`nbButton` could be applied to the following selectors - `button`, `input[type=\"button\"]`, `input[type=\"submit\"]`\nand `a`:"
							},
							{
								"tag": "stacked-example(button",
								"text": "Elements, button/button-types.component.html)\n\nButton can be made `fullWidth`:"
							},
							{
								"tag": "stacked-example(full",
								"text": "Width Button, button/button-full-width.component.html)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nbtn-fg:\nbtn-font-family:\nbtn-line-height:\nbtn-disabled-opacity:\nbtn-cursor:\nbtn-primary-bg:\nbtn-secondary-bg:\nbtn-info-bg:\nbtn-success-bg:\nbtn-warning-bg:\nbtn-danger-bg:\nbtn-secondary-border:\nbtn-secondary-border-width:\nbtn-padding-y-lg:\nbtn-padding-x-lg:\nbtn-font-size-lg:\nbtn-padding-y-md:\nbtn-padding-x-md:\nbtn-font-size-md:\nbtn-padding-y-sm:\nbtn-padding-x-sm:\nbtn-font-size-sm:\nbtn-padding-y-xs:\nbtn-padding-x-xs:\nbtn-font-size-xs:\nbtn-border-radius:\nbtn-rectangle-border-radius:\nbtn-semi-round-border-radius:\nbtn-round-border-radius:\nbtn-hero-shadow:\nbtn-hero-text-shadow:\nbtn-hero-bevel-size:\nbtn-hero-glow-size:\nbtn-hero-primary-glow-size:\nbtn-hero-success-glow-size:\nbtn-hero-warning-glow-size:\nbtn-hero-info-glow-size:\nbtn-hero-danger-glow-size:\nbtn-hero-secondary-glow-size:\nbtn-hero-degree:\nbtn-hero-primary-degree:\nbtn-hero-success-degree:\nbtn-hero-warning-degree:\nbtn-hero-info-degree:\nbtn-hero-danger-degree:\nbtn-hero-secondary-degree:\nbtn-hero-border-radius:\nbtn-outline-fg:\nbtn-outline-hover-fg:\nbtn-outline-focus-fg:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'button[nbButton],a[nbButton],input[type=\"button\"][nbButton],input[type=\"submit\"][nbButton]',\n  styleUrls: ['./button.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4926,
							"name": "accent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 124,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4954,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.aria-disabled'"
									}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-disabled'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 191,
									"character": 45
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4957,
							"name": "fullWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-full-width'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 199,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4952,
							"name": "hero",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-hero'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 187,
									"character": 37
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4953,
							"name": "outline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-outline'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 188,
									"character": 43
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4927,
							"name": "shape",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 125,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4924,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 122,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4925,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 123,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4921,
							"name": "SHAPE_RECTANGLE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 118,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "rectangle"
							},
							"defaultValue": "\"rectangle\""
						},
						{
							"id": 4922,
							"name": "SHAPE_ROUND",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 119,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "round"
							},
							"defaultValue": "\"round\""
						},
						{
							"id": 4923,
							"name": "SHAPE_SEMI_ROUND",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 120,
									"character": 34
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "semi-round"
							},
							"defaultValue": "\"semi-round\""
						},
						{
							"id": 4915,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 110,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 4914,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 109,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 4913,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 108,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 4912,
							"name": "SIZE_XSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 107,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xsmall"
							},
							"defaultValue": "\"xsmall\""
						},
						{
							"id": 4920,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 116,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 4917,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 113,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 4916,
							"name": "STATUS_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 112,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 4918,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 114,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 4919,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 115,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 4944,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-danger'"
									}
								}
							],
							"getSignature": {
								"id": 4945,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 168,
									"character": 12
								}
							]
						},
						{
							"id": 4938,
							"name": "info",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-info'"
									}
								}
							],
							"getSignature": {
								"id": 4939,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 153,
									"character": 10
								}
							]
						},
						{
							"id": 4934,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-large'"
									}
								}
							],
							"getSignature": {
								"id": 4935,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 143,
									"character": 11
								}
							]
						},
						{
							"id": 4932,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-medium'"
									}
								}
							],
							"getSignature": {
								"id": 4933,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 138,
									"character": 12
								}
							]
						},
						{
							"id": 4936,
							"name": "primary",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-primary'"
									}
								}
							],
							"getSignature": {
								"id": 4937,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 148,
									"character": 13
								}
							]
						},
						{
							"id": 4946,
							"name": "rectangle",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-rectangle'"
									}
								}
							],
							"getSignature": {
								"id": 4947,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 173,
									"character": 15
								}
							]
						},
						{
							"id": 4948,
							"name": "round",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-round'"
									}
								}
							],
							"getSignature": {
								"id": 4949,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 178,
									"character": 11
								}
							]
						},
						{
							"id": 4950,
							"name": "semiRound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-semi-round'"
									}
								}
							],
							"getSignature": {
								"id": 4951,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 183,
									"character": 15
								}
							]
						},
						{
							"id": 4970,
							"name": "setDisabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Disables the button"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'disabled'"
									}
								}
							],
							"setSignature": {
								"id": 4971,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Disables the button"
								},
								"parameters": [
									{
										"id": 4972,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 244,
									"character": 17
								}
							]
						},
						{
							"id": 4973,
							"name": "setFullWidth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If set element will fill its container"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'fullWidth'"
									}
								}
							],
							"setSignature": {
								"id": 4974,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "If set element will fill its container"
								},
								"parameters": [
									{
										"id": 4975,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 253,
									"character": 18
								}
							]
						},
						{
							"id": 4967,
							"name": "setHero",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Adds `hero` styles"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'hero'"
									}
								}
							],
							"setSignature": {
								"id": 4968,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Adds `hero` styles"
								},
								"parameters": [
									{
										"id": 4969,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 235,
									"character": 13
								}
							]
						},
						{
							"id": 4976,
							"name": "setOutline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Adds `outline` styles"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'outline'"
									}
								}
							],
							"setSignature": {
								"id": 4977,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Adds `outline` styles"
								},
								"parameters": [
									{
										"id": 4978,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 262,
									"character": 16
								}
							]
						},
						{
							"id": 4964,
							"name": "setShape",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Button shapes: `rectangle`, `round`, `semi-round`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'shape'"
									}
								}
							],
							"setSignature": {
								"id": 4965,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Button shapes: `rectangle`, `round`, `semi-round`"
								},
								"parameters": [
									{
										"id": 4966,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 226,
									"character": 22
								}
							]
						},
						{
							"id": 4958,
							"name": "setSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Button size, available sizes:\n`xxsmall`, `xsmall`, `small`, `medium`, `large`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'size'"
									}
								}
							],
							"setSignature": {
								"id": 4959,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Button size, available sizes:\n`xxsmall`, `xsmall`, `small`, `medium`, `large`"
								},
								"parameters": [
									{
										"id": 4960,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 207,
									"character": 21
								}
							]
						},
						{
							"id": 4961,
							"name": "setStatus",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Button status (adds specific styles):\n`primary`, `info`, `success`, `warning`, `danger`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'status'"
									}
								}
							],
							"setSignature": {
								"id": 4962,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Button status (adds specific styles):\n`primary`, `info`, `success`, `warning`, `danger`"
								},
								"parameters": [
									{
										"id": 4963,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 217,
									"character": 23
								}
							]
						},
						{
							"id": 4930,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-small'"
									}
								}
							],
							"getSignature": {
								"id": 4931,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 133,
									"character": 11
								}
							]
						},
						{
							"id": 4940,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-success'"
									}
								}
							],
							"getSignature": {
								"id": 4941,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 158,
									"character": 13
								}
							]
						},
						{
							"id": 4955,
							"name": "tabbable",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.tabindex'"
									}
								}
							],
							"getSignature": {
								"id": 4956,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 194,
									"character": 14
								}
							]
						},
						{
							"id": 4942,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-warning'"
									}
								}
							],
							"getSignature": {
								"id": 4943,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 163,
									"character": 13
								}
							]
						},
						{
							"id": 4928,
							"name": "xsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.btn-xsmall'"
									}
								}
							],
							"getSignature": {
								"id": 4929,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 128,
									"character": 12
								}
							]
						},
						{
							"id": 4979,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'",
										"args": "['$event']"
									}
								}
							],
							"signatures": [
								{
									"id": 4980,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4981,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/button/button.component.ts",
									"line": 267,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4926,
								4954,
								4957,
								4952,
								4953,
								4927,
								4924,
								4925,
								4921,
								4922,
								4923,
								4915,
								4914,
								4913,
								4912,
								4920,
								4917,
								4916,
								4918,
								4919
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4944,
								4938,
								4934,
								4932,
								4936,
								4946,
								4948,
								4950,
								4970,
								4973,
								4967,
								4976,
								4964,
								4958,
								4961,
								4930,
								4940,
								4955,
								4942,
								4928
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4979
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/button/button.component.ts",
							"line": 105,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4911
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/button/button.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4982,
			"name": "\"theme/components/button/button.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/button/button.module.ts",
			"children": [
				{
					"id": 4983,
					"name": "NbButtonModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    ...NB_BUTTON_COMPONENTS,\n  ],\n  exports: [\n    ...NB_BUTTON_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/button/button.module.ts",
							"line": 28,
							"character": 27
						}
					]
				},
				{
					"id": 4984,
					"name": "NB_BUTTON_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/button/button.module.ts",
							"line": 13,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbButtonComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4983
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4984
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/button/button.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2387,
			"name": "\"theme/components/calendar-kit/calendar-kit.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/calendar-kit.module.ts",
			"children": [
				{
					"id": 2388,
					"name": "NbCalendarKitModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "`NbCalendarKitModule` is a module that contains multiple useful components for building custom calendars.\nSo if you think our calendars is not enough powerful for you just use calendar-kit and build your own calendar!",
						"text": "Available components:\n- `NbCalendarDayPicker`\n- `NbCalendarDayCell`\n- `NbCalendarMonthPicker`\n- `NbCalendarMonthCell`\n- `NbCalendarYearPicker`\n- `NbCalendarYearCell`\n- `NbCalendarHeader`\n- `NbCalendarNavigation`\n- `NbCalendarPageableNavigation`\n\nFor example you can easily build full calendar:",
						"tags": [
							{
								"tag": "stacked-example(full",
								"text": "calendar, calendar-kit/calendar-kit-full-calendar.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbSharedModule],\n  exports: [...COMPONENTS, ...PIPES],\n  declarations: [...COMPONENTS, ...PIPES],\n  providers: [...SERVICES],\n  entryComponents: [\n    NbCalendarDayCellComponent,\n    NbCalendarMonthCellComponent,\n    NbCalendarYearCellComponent,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/calendar-kit.module.ts",
							"line": 86,
							"character": 32
						}
					]
				},
				{
					"id": 2390,
					"name": "COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/calendar-kit.module.ts",
							"line": 38,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbCalendarHeaderComponent,\n  NbCalendarNavigationComponent,\n  NbCalendarPageableNavigationComponent,\n  NbCalendarDaysNamesComponent,\n  NbCalendarYearPickerComponent,\n  NbCalendarMonthPickerComponent,\n  NbCalendarDayPickerComponent,\n  NbCalendarDayCellComponent,\n  NbCalendarMonthCellComponent,\n  NbCalendarYearCellComponent,\n  NbCalendarPickerRowComponent,\n  NbCalendarPickerComponent,\n]"
				},
				{
					"id": 2391,
					"name": "PIPES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/calendar-kit.module.ts",
							"line": 53,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbCalendarDatePipe,\n]"
				},
				{
					"id": 2389,
					"name": "SERVICES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/calendar-kit.module.ts",
							"line": 32,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  { provide: NbDateService, useClass: NbNativeDateService },\n  DatePipe,\n  NbCalendarMonthModelService,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2388
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2390,
						2391,
						2389
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/calendar-kit.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2376,
			"name": "\"theme/components/calendar-kit/components/calendar-date/calendar-date.pipe\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-date/calendar-date.pipe.ts",
			"children": [
				{
					"id": 2377,
					"name": "NbCalendarDatePipe",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Pipe",
							"type": {
								"type": "reference",
								"name": "Pipe"
							},
							"arguments": {
								"obj": "{ name: 'nbCalendarDate' }"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2378,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2379,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2381,
									"name": "new NbCalendarDatePipe",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2382,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarDatePipe",
										"id": 2377
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-date/calendar-date.pipe.ts",
									"line": 12,
									"character": 61
								}
							]
						},
						{
							"id": 2380,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-date/calendar-date.pipe.ts",
									"line": 14,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2383,
							"name": "transform",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2384,
									"name": "transform",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2385,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-date/calendar-date.pipe.ts",
									"line": 17,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2379
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2380
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2383
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-date/calendar-date.pipe.ts",
							"line": 12,
							"character": 31
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "PipeTransform"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2377
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-date/calendar-date.pipe.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2087,
			"name": "\"theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
			"children": [
				{
					"id": 2088,
					"name": "NbCalendarDayCellComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-day-cell',\n  template: '{{ day }}',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { 'class': 'day-cell' },\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2089,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2100,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2102,
									"name": "new NbCalendarDayCellComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2103,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarDayCellComponent",
										"id": 2088
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 41,
									"character": 61
								}
							]
						},
						{
							"id": 2090,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 29,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.date",
								"id": 2077
							}
						},
						{
							"id": 2101,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 43,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2095,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 39,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2096,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2097,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2098,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
											"line": 39,
											"character": 18
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.filter",
								"id": 2083
							}
						},
						{
							"id": 2094,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.max",
								"id": 2082
							}
						},
						{
							"id": 2093,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.min",
								"id": 2081
							}
						},
						{
							"id": 2099,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 41,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter(true)",
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.select",
								"id": 2078
							}
						},
						{
							"id": 2091,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 31,
									"character": 24
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.selectedValue",
								"id": 2079
							}
						},
						{
							"id": 2092,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 33,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.visibleDate",
								"id": 2080
							}
						},
						{
							"id": 2106,
							"name": "boundingMonth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.bounding-month'"
									}
								}
							],
							"getSignature": {
								"id": 2107,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 50,
									"character": 56
								}
							]
						},
						{
							"id": 2114,
							"name": "day",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2115,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 66,
									"character": 9
								}
							]
						},
						{
							"id": 2112,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"getSignature": {
								"id": 2113,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 62,
									"character": 45
								}
							]
						},
						{
							"id": 2110,
							"name": "empty",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.empty'"
									}
								}
							],
							"getSignature": {
								"id": 2111,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 58,
									"character": 39
								}
							]
						},
						{
							"id": 2108,
							"name": "selected",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.selected'"
									}
								}
							],
							"getSignature": {
								"id": 2109,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 54,
									"character": 45
								}
							]
						},
						{
							"id": 2104,
							"name": "today",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.today'"
									}
								}
							],
							"getSignature": {
								"id": 2105,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 46,
									"character": 39
								}
							]
						},
						{
							"id": 2122,
							"name": "dontFitFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2123,
									"name": "dontFitFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 87,
									"character": 23
								}
							]
						},
						{
							"id": 2120,
							"name": "greaterThanMax",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2121,
									"name": "greaterThanMax",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 83,
									"character": 24
								}
							]
						},
						{
							"id": 2116,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 2117,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 71,
									"character": 9
								}
							]
						},
						{
							"id": 2118,
							"name": "smallerThanMin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2119,
									"name": "smallerThanMin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
									"line": 79,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2100
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2090,
								2101,
								2095,
								2094,
								2093,
								2099,
								2091,
								2092
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2106,
								2114,
								2112,
								2110,
								2108,
								2104
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2122,
								2120,
								2116,
								2118
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
							"line": 27,
							"character": 39
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "NbCalendarCell",
							"id": 2074,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "typeParameter",
									"name": "D"
								}
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2088
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-cell.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2257,
			"name": "\"theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
			"children": [
				{
					"id": 2258,
					"name": "NbCalendarDayPickerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Provides capability pick days."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-day-picker',\n  styles: [` :host { display: block; } `],\n  template: `\n    <nb-calendar-days-names></nb-calendar-days-names>\n    <nb-calendar-picker\n      [data]=\"weeks\"\n      [visibleDate]=\"visibleDate\"\n      [selectedValue]=\"date\"\n      [cellComponent]=\"cellComponent\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      (select)=\"onSelect($event)\">\n    </nb-calendar-picker>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2259,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2260,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2281,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2283,
									"name": "new NbCalendarDayPickerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2284,
											"name": "monthModel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbCalendarMonthModelService",
												"id": 1877,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarDayPickerComponent",
										"id": 2258
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 115,
									"character": 15
								}
							]
						},
						{
							"id": 2262,
							"name": "boundingMonths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines if we should render previous and next months\nin the current month view."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 56,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 2272,
							"name": "cellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 82,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							},
							"defaultValue": " NbCalendarDayCellComponent"
						},
						{
							"id": 2274,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Already selected date."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 93,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 2275,
							"name": "dateChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Fires newly selected date."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 98,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "unknown",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter<D>()"
						},
						{
							"id": 2265,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predicate that decides which cells will be disabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 71,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2266,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2267,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2268,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
											"line": 71,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2264,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 66,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2263,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Minimum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2282,
							"name": "monthModel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 117,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarMonthModelService",
								"id": 1877,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2273,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the component.\nCan be 'medium' which is default or 'large'."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 88,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM"
						},
						{
							"id": 2261,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Describes which month picker have to render."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 50,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2280,
							"name": "weeks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Day picker model.\nProvides all days in current month and if boundingMonth is true some days\nfrom previous and next one."
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 115,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							}
						},
						{
							"id": 2278,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large'"
									}
								}
							],
							"getSignature": {
								"id": 2279,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 106,
									"character": 11
								}
							]
						},
						{
							"id": 2276,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium'"
									}
								}
							],
							"getSignature": {
								"id": 2277,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 101,
									"character": 12
								}
							]
						},
						{
							"id": 2269,
							"name": "setCellComponent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'cellComponent'"
									}
								}
							],
							"setSignature": {
								"id": 2270,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
								},
								"parameters": [
									{
										"id": 2271,
										"name": "cellComponent",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "Type",
											"typeArguments": [
												{
													"type": "reference",
													"name": "NbCalendarCell",
													"id": 2074,
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "D"
														},
														{
															"type": "typeParameter",
															"name": "T"
														}
													]
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 77,
									"character": 22
								}
							]
						},
						{
							"id": 2285,
							"name": "ngOnChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2286,
									"name": "ngOnChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2287,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2288,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2289,
															"name": "visibleDate",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
																	"line": 120,
																	"character": 27
																}
															],
															"type": {
																"type": "reference",
																"name": "SimpleChange"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2289
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
															"line": 120,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 120,
									"character": 13
								}
							]
						},
						{
							"id": 2290,
							"name": "onSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2291,
									"name": "onSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2292,
											"name": "day",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
									"line": 126,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2281
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2262,
								2272,
								2274,
								2275,
								2265,
								2264,
								2263,
								2282,
								2273,
								2261,
								2280
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2278,
								2276,
								2269
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2285,
								2290
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
							"line": 45,
							"character": 41
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnChanges"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2258
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-day-picker/calendar-day-picker.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2313,
			"name": "\"theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
			"children": [
				{
					"id": 2314,
					"name": "NbCalendarDaysNamesComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-days-names',\n  styleUrls: ['./calendar-days-names.component.scss'],\n  template: `\n    <div class=\"day\" *ngFor=\"let day of days\" [class.holiday]=\"day.isHoliday\">{{ day.name }}</div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2315,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2317,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2319,
									"name": "new NbCalendarDaysNamesComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2320,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarDaysNamesComponent",
										"id": 2314
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
									"line": 22,
									"character": 24
								}
							]
						},
						{
							"id": 2318,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
									"line": 24,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2316,
							"name": "days",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
									"line": 22,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbCalendarDay",
									"id": 2064
								}
							}
						},
						{
							"id": 2323,
							"name": "createDaysNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2324,
									"name": "createDaysNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbCalendarDay",
											"id": 2064
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
									"line": 32,
									"character": 25
								}
							]
						},
						{
							"id": 2328,
							"name": "markIfHoliday",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2329,
									"name": "markIfHoliday",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2330,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2331,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2332,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2334,
													"name": "isHoliday",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
															"line": 46,
															"character": 28
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": " i % 6 === 0"
												},
												{
													"id": 2333,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
															"line": 46,
															"character": 17
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2334,
														2333
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
									"line": 45,
									"character": 23
								}
							]
						},
						{
							"id": 2321,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2322,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
									"line": 27,
									"character": 10
								}
							]
						},
						{
							"id": 2325,
							"name": "shiftStartOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2326,
									"name": "shiftStartOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2327,
											"name": "days",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbCalendarDay",
													"id": 2064
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbCalendarDay",
											"id": 2064
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
									"line": 37,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2317
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2318,
								2316
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2323,
								2328,
								2321,
								2325
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
							"line": 20,
							"character": 41
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2314
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-days-names/calendar-days-names.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2048,
			"name": "\"theme/components/calendar-kit/components/calendar-header/calendar-header.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
			"children": [
				{
					"id": 2049,
					"name": "NbCalendarHeaderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-header',\n  template: `\n    <div class=\"header\">\n      <span class=\"title\" (click)=\"navigateToday.emit()\">\n        {{ date | nbCalendarDate }}\n        <i [ngClass]=\"{ 'nb-arrow-dropright': isLtr, 'nb-arrow-dropleft': isRtl }\"></i>\n      </span>\n      <span class=\"sub-title\">Today</span>\n    </div>\n  `,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2050,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2053,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2056,
									"name": "new NbCalendarHeaderComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2057,
											"name": "directionService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirectionService",
												"id": 1581
											}
										},
										{
											"id": 2058,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarHeaderComponent",
										"id": 2049
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
									"line": 27,
									"character": 67
								}
							]
						},
						{
							"id": 2051,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
									"line": 26,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2055,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
									"line": 29,
									"character": 89
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2054,
							"name": "directionService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
									"line": 29,
									"character": 40
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirectionService",
								"id": 1581
							}
						},
						{
							"id": 2052,
							"name": "navigateToday",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
									"line": 27,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 2061,
							"name": "isLtr",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2062,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
									"line": 37,
									"character": 11
								}
							]
						},
						{
							"id": 2059,
							"name": "isRtl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2060,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
									"line": 33,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2053
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2051,
								2055,
								2054,
								2052
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2061,
								2059
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
							"line": 25,
							"character": 38
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2049
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-header/calendar-header.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2191,
			"name": "\"theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
			"children": [
				{
					"id": 2192,
					"name": "NbCalendarMonthCellComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-month-cell',\n  template: `{{ month }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { 'class': 'month-cell' },\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2193,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2199,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2201,
									"name": "new NbCalendarMonthCellComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2202,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarMonthCellComponent",
										"id": 2192
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 35,
									"character": 61
								}
							]
						},
						{
							"id": 2194,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 27,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.date",
								"id": 2077
							}
						},
						{
							"id": 2200,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 37,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2197,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 33,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.max",
								"id": 2082
							}
						},
						{
							"id": 2196,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.min",
								"id": 2081
							}
						},
						{
							"id": 2198,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 35,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter(true)",
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.select",
								"id": 2078
							}
						},
						{
							"id": 2195,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 29,
									"character": 24
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.selectedValue",
								"id": 2079
							}
						},
						{
							"id": 2207,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"getSignature": {
								"id": 2208,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 48,
									"character": 45
								}
							]
						},
						{
							"id": 2209,
							"name": "month",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2210,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 52,
									"character": 11
								}
							]
						},
						{
							"id": 2203,
							"name": "selected",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.selected'"
									}
								}
							],
							"getSignature": {
								"id": 2204,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 40,
									"character": 45
								}
							]
						},
						{
							"id": 2205,
							"name": "today",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.today'"
									}
								}
							],
							"getSignature": {
								"id": 2206,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 44,
									"character": 39
								}
							]
						},
						{
							"id": 2215,
							"name": "greaterThanMax",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2216,
									"name": "greaterThanMax",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 69,
									"character": 24
								}
							]
						},
						{
							"id": 2219,
							"name": "monthEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2220,
									"name": "monthEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 77,
									"character": 18
								}
							]
						},
						{
							"id": 2217,
							"name": "monthStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2218,
									"name": "monthStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 73,
									"character": 20
								}
							]
						},
						{
							"id": 2211,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 2212,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 57,
									"character": 9
								}
							]
						},
						{
							"id": 2213,
							"name": "smallerThanMin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2214,
									"name": "smallerThanMin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
									"line": 65,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2199
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2194,
								2200,
								2197,
								2196,
								2198,
								2195
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2207,
								2209,
								2203,
								2205
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2215,
								2219,
								2217,
								2211,
								2213
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
							"line": 26,
							"character": 41
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "NbCalendarCell",
							"id": 2074,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "typeParameter",
									"name": "D"
								}
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2192
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-cell.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2221,
			"name": "\"theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
			"children": [
				{
					"id": 2222,
					"name": "NbCalendarMonthPickerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-month-picker',\n  template: `\n    <nb-calendar-picker\n      [data]=\"months\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [selectedValue]=\"month\"\n      [cellComponent]=\"cellComponent\"\n      (select)=\"onSelect($event)\">\n    </nb-calendar-picker>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2223,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2224,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2235,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2237,
									"name": "new NbCalendarMonthPickerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2238,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarMonthPickerComponent",
										"id": 2222
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 48,
									"character": 16
								}
							]
						},
						{
							"id": 2242,
							"name": "cellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 59,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							},
							"defaultValue": " NbCalendarMonthCellComponent"
						},
						{
							"id": 2236,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 50,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2227,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 44,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2228,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2229,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2230,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
											"line": 44,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2226,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 42,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2225,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2232,
							"name": "month",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 46,
									"character": 16
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2233,
							"name": "monthChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 47,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 2234,
							"name": "months",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 48,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							}
						},
						{
							"id": 2231,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 45,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM"
						},
						{
							"id": 2239,
							"name": "_cellComponent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'cellComponent'"
									}
								}
							],
							"setSignature": {
								"id": 2240,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 2241,
										"name": "cellComponent",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "Type",
											"typeArguments": [
												{
													"type": "reference",
													"name": "NbCalendarCell",
													"id": 2074,
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "D"
														},
														{
															"type": "typeParameter",
															"name": "T"
														}
													]
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 54,
									"character": 20
								}
							]
						},
						{
							"id": 2245,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large'"
									}
								}
							],
							"getSignature": {
								"id": 2246,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 67,
									"character": 11
								}
							]
						},
						{
							"id": 2243,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium'"
									}
								}
							],
							"getSignature": {
								"id": 2244,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 62,
									"character": 12
								}
							]
						},
						{
							"id": 2254,
							"name": "createMonthDateByIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2255,
									"name": "createMonthDateByIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2256,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 84,
									"character": 32
								}
							]
						},
						{
							"id": 2249,
							"name": "initMonths",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2250,
									"name": "initMonths",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 75,
									"character": 12
								}
							]
						},
						{
							"id": 2247,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2248,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 71,
									"character": 10
								}
							]
						},
						{
							"id": 2251,
							"name": "onSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2252,
									"name": "onSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2253,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
									"line": 80,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2235
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2242,
								2236,
								2227,
								2226,
								2225,
								2232,
								2233,
								2234,
								2231
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2239,
								2245,
								2243
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2254,
								2249,
								2247,
								2251
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
							"line": 38,
							"character": 43
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2222
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-month-picker/calendar-month-picker.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2293,
			"name": "\"theme/components/calendar-kit/components/calendar-navigation/calendar-navigation.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-navigation/calendar-navigation.component.ts",
			"children": [
				{
					"id": 2294,
					"name": "NbCalendarNavigationComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-navigation',\n  styles: [`\n    :host {\n      display: flex;\n      justify-content: center;\n    }\n\n    :host button {\n      height: 3.125rem;\n    }\n  `],\n  template: `\n    <button class=\"btn btn-primary\" (click)=\"changeMode.emit()\">\n      {{ date | nbCalendarDate }}\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2295,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2297,
							"name": "changeMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-navigation.component.ts",
									"line": 31,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"defaultValue": " new EventEmitter<void>(true)"
						},
						{
							"id": 2296,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-navigation.component.ts",
									"line": 30,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2297,
								2296
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-navigation.component.ts",
							"line": 29,
							"character": 42
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2294
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-navigation.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2298,
			"name": "\"theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
			"children": [
				{
					"id": 2299,
					"name": "NbCalendarPageableNavigationComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-pageable-navigation',\n  styleUrls: ['./calendar-pageable-navigation.component.scss'],\n  template: `\n    <i [ngClass]=\"{'nb-arrow-left': isLtr, 'nb-arrow-right': isRtl }\" (click)=\"prev.emit()\"></i>\n    <nb-calendar-navigation [date]=\"date\" (changeMode)=\"changeMode.emit()\"></nb-calendar-navigation>\n    <i [ngClass]=\"{'nb-arrow-right': isLtr, 'nb-arrow-left': isRtl }\" (click)=\"next.emit()\"></i>\n  `,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2300,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2305,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2307,
									"name": "new NbCalendarPageableNavigationComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2308,
											"name": "directionService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirectionService",
												"id": 1581
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarPageableNavigationComponent",
										"id": 2299
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 25,
									"character": 44
								}
							]
						},
						{
							"id": 2302,
							"name": "changeMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 23,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"defaultValue": " new EventEmitter<void>()"
						},
						{
							"id": 2301,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 22,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2306,
							"name": "directionService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 27,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirectionService",
								"id": 1581
							}
						},
						{
							"id": 2303,
							"name": "next",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 24,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"defaultValue": " new EventEmitter<void>()"
						},
						{
							"id": 2304,
							"name": "prev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"defaultValue": " new EventEmitter<void>()"
						},
						{
							"id": 2311,
							"name": "isLtr",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2312,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 34,
									"character": 11
								}
							]
						},
						{
							"id": 2309,
							"name": "isRtl",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2310,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
									"line": 30,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2305
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2302,
								2301,
								2306,
								2303,
								2304
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2311,
								2309
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
							"line": 21,
							"character": 50
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2299
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2335,
			"name": "\"theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
			"children": [
				{
					"id": 2336,
					"name": "NbCalendarPickerRowComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-picker-row',\n  styles: [`\n    :host {\n      display: flex;\n      justify-content: space-between;\n    }\n  `],\n  template: '<ng-template></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2337,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2338,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2351,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2353,
									"name": "new NbCalendarPickerRowComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2354,
											"name": "cfr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentFactoryResolver"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarPickerRowComponent",
										"id": 2336
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 45,
									"character": 85
								}
							]
						},
						{
							"id": 2352,
							"name": "cfr",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 47,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentFactoryResolver"
							}
						},
						{
							"id": 2342,
							"name": "component",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 39,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 2350,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "TemplateRef",
										"opts": "{ read: ViewContainerRef }"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 45,
									"character": 66
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							}
						},
						{
							"id": 2345,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 42,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2346,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2347,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2348,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
											"line": 42,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2344,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2343,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2339,
							"name": "row",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 36,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "D"
								}
							}
						},
						{
							"id": 2349,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 43,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 2340,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 37,
									"character": 24
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 2341,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 38,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2355,
							"name": "ngOnChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2356,
									"name": "ngOnChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 50,
									"character": 13
								}
							]
						},
						{
							"id": 2357,
							"name": "patchWithContext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2358,
									"name": "patchWithContext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2359,
											"name": "component",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbCalendarCell",
												"id": 2074,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													},
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 2360,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
									"line": 62,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2351
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2352,
								2342,
								2350,
								2345,
								2344,
								2343,
								2339,
								2349,
								2340,
								2341
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2355,
								2357
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
							"line": 35,
							"character": 41
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnChanges"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2336
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker-row.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2361,
			"name": "\"theme/components/calendar-kit/components/calendar-picker/calendar-picker.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
			"children": [
				{
					"id": 2362,
					"name": "NbCalendarPickerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-picker',\n  template: `\n    <nb-calendar-picker-row\n      *ngFor=\"let row of data\"\n      [row]=\"row\"\n      [visibleDate]=\"visibleDate\"\n      [selectedValue]=\"selectedValue\"\n      [component]=\"cellComponent\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      (select)=\"select.emit($event)\">\n    </nb-calendar-picker-row>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2363,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2364,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2368,
							"name": "cellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 33,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 2365,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 30,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							}
						},
						{
							"id": 2371,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 36,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2372,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2373,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2374,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
											"line": 36,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2370,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 35,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2369,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2375,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 37,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 2367,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 32,
									"character": 24
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 2366,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
									"line": 31,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2368,
								2365,
								2371,
								2370,
								2369,
								2375,
								2367,
								2366
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
							"line": 29,
							"character": 38
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2362
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-picker/calendar-picker.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2124,
			"name": "\"theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
			"children": [
				{
					"id": 2125,
					"name": "NbCalendarYearCellComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-year-cell',\n  template: `{{ year }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { 'class': 'year-cell' },\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2126,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2132,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2134,
									"name": "new NbCalendarYearCellComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2135,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarYearCellComponent",
										"id": 2125
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 35,
									"character": 61
								}
							]
						},
						{
							"id": 2127,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 27,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.date",
								"id": 2077
							}
						},
						{
							"id": 2133,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 37,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2129,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.max",
								"id": 2082
							}
						},
						{
							"id": 2128,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.min",
								"id": 2081
							}
						},
						{
							"id": 2131,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 35,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter(true)",
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.select",
								"id": 2078
							}
						},
						{
							"id": 2130,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 33,
									"character": 24
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.selectedValue",
								"id": 2079
							}
						},
						{
							"id": 2140,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"getSignature": {
								"id": 2141,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 48,
									"character": 45
								}
							]
						},
						{
							"id": 2136,
							"name": "selected",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.selected'"
									}
								}
							],
							"getSignature": {
								"id": 2137,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 40,
									"character": 45
								}
							]
						},
						{
							"id": 2138,
							"name": "today",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.today'"
									}
								}
							],
							"getSignature": {
								"id": 2139,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 44,
									"character": 39
								}
							]
						},
						{
							"id": 2142,
							"name": "year",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2143,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 52,
									"character": 10
								}
							]
						},
						{
							"id": 2148,
							"name": "greaterThanMax",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2149,
									"name": "greaterThanMax",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 69,
									"character": 24
								}
							]
						},
						{
							"id": 2144,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 2145,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 57,
									"character": 9
								}
							]
						},
						{
							"id": 2146,
							"name": "smallerThanMin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2147,
									"name": "smallerThanMin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 65,
									"character": 24
								}
							]
						},
						{
							"id": 2152,
							"name": "yearEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2153,
									"name": "yearEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 77,
									"character": 17
								}
							]
						},
						{
							"id": 2150,
							"name": "yearStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2151,
									"name": "yearStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
									"line": 73,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2132
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2127,
								2133,
								2129,
								2128,
								2131,
								2130
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2140,
								2136,
								2138,
								2142
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2148,
								2144,
								2146,
								2152,
								2150
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
							"line": 26,
							"character": 40
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "NbCalendarCell",
							"id": 2074,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "typeParameter",
									"name": "D"
								}
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2125
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-cell.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2154,
			"name": "\"theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
			"children": [
				{
					"id": 2155,
					"name": "NbCalendarYearPickerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-year-picker',\n  template: `\n    <nb-calendar-picker\n      [data]=\"years\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [selectedValue]=\"date\"\n      [visibleDate]=\"year\"\n      [cellComponent]=\"cellComponent\"\n      (select)=\"onSelect($event)\">\n    </nb-calendar-picker>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2156,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2176,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2178,
									"name": "new NbCalendarYearPickerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2179,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarYearPickerComponent",
										"id": 2155
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 75,
									"character": 15
								}
							]
						},
						{
							"id": 2167,
							"name": "cellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 57,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"defaultValue": " NbCalendarYearCellComponent"
						},
						{
							"id": 2157,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 43,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2177,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 77,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2160,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 49,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2161,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2162,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2163,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
											"line": 49,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2159,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2158,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 45,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2168,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 59,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM"
						},
						{
							"id": 2169,
							"name": "year",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 61,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2170,
							"name": "yearChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 63,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "unknown",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter<D>()"
						},
						{
							"id": 2175,
							"name": "years",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 75,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							}
						},
						{
							"id": 2164,
							"name": "_cellComponent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'cellComponent'"
									}
								}
							],
							"setSignature": {
								"id": 2165,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 2166,
										"name": "cellComponent",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "Type",
											"typeArguments": [
												{
													"type": "reference",
													"name": "NbCalendarCell",
													"id": 2074,
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "D"
														},
														{
															"type": "typeParameter",
															"name": "D"
														}
													]
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 52,
									"character": 20
								}
							]
						},
						{
							"id": 2173,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large'"
									}
								}
							],
							"getSignature": {
								"id": 2174,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 71,
									"character": 11
								}
							]
						},
						{
							"id": 2171,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium'"
									}
								}
							],
							"getSignature": {
								"id": 2172,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 66,
									"character": 12
								}
							]
						},
						{
							"id": 2187,
							"name": "createYearDateByIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2188,
									"name": "createYearDateByIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2189,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 95,
									"character": 31
								}
							]
						},
						{
							"id": 2182,
							"name": "initYears",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2183,
									"name": "initYears",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 84,
									"character": 11
								}
							]
						},
						{
							"id": 2180,
							"name": "ngOnChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2181,
									"name": "ngOnChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 80,
									"character": 13
								}
							]
						},
						{
							"id": 2184,
							"name": "onSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2185,
									"name": "onSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2186,
											"name": "year",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
									"line": 91,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2176
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2167,
								2157,
								2177,
								2160,
								2159,
								2158,
								2168,
								2169,
								2170,
								2175
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2164,
								2173,
								2171
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2187,
								2182,
								2180,
								2184
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
							"line": 41,
							"character": 42
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnChanges"
						}
					]
				},
				{
					"id": 2190,
					"name": "defaultYearCount",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
							"line": 23,
							"character": 22
						}
					],
					"type": {
						"type": "unknown",
						"name": "20"
					},
					"defaultValue": "20"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2155
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2190
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/calendar-year-picker/calendar-year-picker.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2386,
			"name": "\"theme/components/calendar-kit/components/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/components/index.ts",
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/components/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1861,
			"name": "\"theme/components/calendar-kit/helpers\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/helpers.ts",
			"children": [
				{
					"id": 1862,
					"name": "batch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"tags": [
							{
								"tag": "license",
								"text": "\nCopyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.\n"
							}
						]
					},
					"signatures": [
						{
							"id": 1863,
							"name": "batch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"typeParameter": [
								{
									"id": 1864,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1865,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								},
								{
									"id": 1866,
									"name": "batchSize",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1867,
									"name": "offset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/helpers.ts",
							"line": 7,
							"character": 18
						}
					]
				},
				{
					"id": 1868,
					"name": "range",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "returns array with numbers from zero to bound."
					},
					"signatures": [
						{
							"id": 1869,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "returns array with numbers from zero to bound."
							},
							"typeParameter": [
								{
									"id": 1870,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1871,
									"name": "bound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1872,
									"name": "producer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1873,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1874,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1875,
															"name": "number",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											],
											"sources": [
												{
													"fileName": "theme/components/calendar-kit/helpers.ts",
													"line": 21,
													"character": 49
												}
											]
										}
									},
									"defaultValue": " i => i"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "Object"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/helpers.ts",
							"line": 21,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1862,
						1868
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/helpers.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2392,
			"name": "\"theme/components/calendar-kit/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/index.ts",
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2063,
			"name": "\"theme/components/calendar-kit/model\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/model.ts",
			"children": [
				{
					"id": 2071,
					"name": "NbCalendarSize",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2073,
							"name": "LARGE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 22,
									"character": 7
								}
							],
							"defaultValue": "\"large\""
						},
						{
							"id": 2072,
							"name": "MEDIUM",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 21,
									"character": 8
								}
							],
							"defaultValue": "\"medium\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2073,
								2072
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/model.ts",
							"line": 20,
							"character": 26
						}
					]
				},
				{
					"id": 2067,
					"name": "NbCalendarViewMode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2070,
							"name": "DATE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 17,
									"character": 6
								}
							],
							"defaultValue": "\"date\""
						},
						{
							"id": 2069,
							"name": "MONTH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 16,
									"character": 7
								}
							],
							"defaultValue": "\"month\""
						},
						{
							"id": 2068,
							"name": "YEAR",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 15,
									"character": 6
								}
							],
							"defaultValue": "\"year\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2070,
								2069,
								2068
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/model.ts",
							"line": 14,
							"character": 30
						}
					]
				},
				{
					"id": 2074,
					"name": "NbCalendarCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 2075,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2076,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2077,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 26,
									"character": 6
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2083,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2084,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2085,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2086,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar-kit/model.ts",
											"line": 32,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 2082,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 31,
									"character": 5
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2081,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 30,
									"character": 5
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2078,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2079,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 28,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 2080,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2077,
								2083,
								2082,
								2081,
								2078,
								2079,
								2080
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/model.ts",
							"line": 25,
							"character": 31
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "NbCalendarDayCellComponent",
							"id": 2088
						},
						{
							"type": "reference",
							"name": "NbCalendarMonthCellComponent",
							"id": 2192
						},
						{
							"type": "reference",
							"name": "NbCalendarRangeDayCellComponent",
							"id": 2468
						},
						{
							"type": "reference",
							"name": "NbCalendarRangeYearCellComponent",
							"id": 2510
						},
						{
							"type": "reference",
							"name": "NbCalendarYearCellComponent",
							"id": 2125
						}
					]
				},
				{
					"id": 2064,
					"name": "NbCalendarDay",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2066,
							"name": "isHoliday",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 11,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2065,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/model.ts",
									"line": 10,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2066,
								2065
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/model.ts",
							"line": 9,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						2071,
						2067
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2074,
						2064
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/model.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1876,
			"name": "\"theme/components/calendar-kit/services/calendar-month-model.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/services/calendar-month-model.service.ts",
			"children": [
				{
					"id": 1877,
					"name": "NbCalendarMonthModelService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"typeParameter": [
						{
							"id": 1878,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1879,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1881,
									"name": "new NbCalendarMonthModelService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1882,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarMonthModelService",
										"id": 1877
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 14,
									"character": 45
								}
							]
						},
						{
							"id": 1880,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 16,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 1900,
							"name": "addNextBoundingMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1901,
									"name": "addNextBoundingMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1902,
											"name": "weeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											}
										},
										{
											"id": 1903,
											"name": "activeMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1904,
											"name": "boundingMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 51,
									"character": 30
								}
							]
						},
						{
							"id": 1895,
							"name": "addPrevBoundingMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1896,
									"name": "addPrevBoundingMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1897,
											"name": "weeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											}
										},
										{
											"id": 1898,
											"name": "activeMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1899,
											"name": "boundingMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 44,
									"character": 30
								}
							]
						},
						{
							"id": 1927,
							"name": "createDateRangeForMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1928,
									"name": "createDateRangeForMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1929,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "D"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 90,
									"character": 33
								}
							]
						},
						{
							"id": 1887,
							"name": "createDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1888,
									"name": "createDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1889,
											"name": "activeMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 24,
									"character": 21
								}
							]
						},
						{
							"id": 1883,
							"name": "createDaysGrid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1884,
									"name": "createDaysGrid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1885,
											"name": "activeMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1886,
											"name": "boundingMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 19,
									"character": 16
								}
							]
						},
						{
							"id": 1910,
							"name": "createNextBoundingDays",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1911,
									"name": "createNextBoundingDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1912,
											"name": "activeMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1913,
											"name": "boundingMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1914,
											"name": "requiredItems",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "D"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 66,
									"character": 32
								}
							]
						},
						{
							"id": 1905,
							"name": "createPrevBoundingDays",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1906,
									"name": "createPrevBoundingDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1907,
											"name": "activeMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1908,
											"name": "boundingMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1909,
											"name": "requiredItems",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "D"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 58,
									"character": 32
								}
							]
						},
						{
							"id": 1915,
							"name": "getStartOfWeekDayDiff",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1916,
									"name": "getStartOfWeekDayDiff",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1917,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 73,
									"character": 31
								}
							]
						},
						{
							"id": 1918,
							"name": "getWeekStartDiff",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1919,
									"name": "getWeekStartDiff",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1920,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 78,
									"character": 26
								}
							]
						},
						{
							"id": 1924,
							"name": "isShouldAddNextBoundingMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1925,
									"name": "isShouldAddNextBoundingMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1926,
											"name": "weeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 86,
									"character": 38
								}
							]
						},
						{
							"id": 1921,
							"name": "isShouldAddPrevBoundingMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1922,
									"name": "isShouldAddPrevBoundingMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1923,
											"name": "weeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 82,
									"character": 38
								}
							]
						},
						{
							"id": 1890,
							"name": "withBoundingMonths",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1891,
									"name": "withBoundingMonths",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1892,
											"name": "weeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "typeParameter",
														"name": "D"
													}
												}
											}
										},
										{
											"id": 1893,
											"name": "activeMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1894,
											"name": "boundingMonth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
									"line": 30,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1879
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1880
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1900,
								1895,
								1927,
								1887,
								1883,
								1910,
								1905,
								1915,
								1918,
								1924,
								1921,
								1890
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
							"line": 14,
							"character": 40
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1877
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/services/calendar-month-model.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1746,
			"name": "\"theme/components/calendar-kit/services/date.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/services/date.service.ts",
			"children": [
				{
					"id": 1747,
					"name": "NbDateService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"typeParameter": [
						{
							"id": 1748,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1749,
							"name": "DAYS_IN_WEEK",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 11,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "7"
						},
						{
							"id": 1750,
							"name": "locale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 13,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1849,
							"name": "addDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1850,
									"name": "addDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns date with added number of days."
									},
									"parameters": [
										{
											"id": 1851,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1852,
											"name": "days",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 169,
									"character": 17
								}
							]
						},
						{
							"id": 1853,
							"name": "addMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1854,
									"name": "addMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns date with added number of months."
									},
									"parameters": [
										{
											"id": 1855,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1856,
											"name": "months",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 174,
									"character": 19
								}
							]
						},
						{
							"id": 1857,
							"name": "addYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1858,
									"name": "addYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns date with added number of years."
									},
									"parameters": [
										{
											"id": 1859,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1860,
											"name": "years",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 179,
									"character": 18
								}
							]
						},
						{
							"id": 1831,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1832,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clones passed date."
									},
									"parameters": [
										{
											"id": 1833,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 139,
									"character": 16
								}
							]
						},
						{
							"id": 1827,
							"name": "compareDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1828,
									"name": "compareDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compares two dates.\nReturns 0 if dates are the same.\nReturns 1 if the first date is greater than the second.\nReturns -1 if the second date is greater than the first."
									},
									"parameters": [
										{
											"id": 1829,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1830,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 134,
									"character": 23
								}
							]
						},
						{
							"id": 1810,
							"name": "createDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1811,
									"name": "createDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates new date from year, month and date."
									},
									"parameters": [
										{
											"id": 1812,
											"name": "year",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1813,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1814,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 111,
									"character": 21
								}
							]
						},
						{
							"id": 1806,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1807,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Transforms the date to the string according to the passed format."
									},
									"parameters": [
										{
											"id": 1808,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1809,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 106,
									"character": 17
								}
							]
						},
						{
							"id": 1777,
							"name": "getDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1778,
									"name": "getDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the date of the month component of the given date."
									},
									"parameters": [
										{
											"id": 1779,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 60,
									"character": 18
								}
							]
						},
						{
							"id": 1786,
							"name": "getDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1787,
									"name": "getDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns day of the week of the given date."
									},
									"parameters": [
										{
											"id": 1788,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 75,
									"character": 23
								}
							]
						},
						{
							"id": 1799,
							"name": "getDayOfWeekNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1800,
									"name": "getDayOfWeekNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns localized days names."
									},
									"parameters": [
										{
											"id": 1801,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 96,
									"character": 28
								}
							]
						},
						{
							"id": 1789,
							"name": "getFirstDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1790,
									"name": "getFirstDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns first day of the week, it can be 1 if week starts from monday\nand 0 if from sunday and so on."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 81,
									"character": 28
								}
							]
						},
						{
							"id": 1780,
							"name": "getMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1781,
									"name": "getMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the month component of the given date."
									},
									"parameters": [
										{
											"id": 1782,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 65,
									"character": 19
								}
							]
						},
						{
							"id": 1837,
							"name": "getMonthEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1838,
									"name": "getMonthEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates the same date but with day equals to the last day in this month."
									},
									"parameters": [
										{
											"id": 1839,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 149,
									"character": 22
								}
							]
						},
						{
							"id": 1791,
							"name": "getMonthName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1792,
									"name": "getMonthName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns localized month name by date and style."
									},
									"parameters": [
										{
											"id": 1793,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1794,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 86,
									"character": 23
								}
							]
						},
						{
							"id": 1795,
							"name": "getMonthNameByIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1796,
									"name": "getMonthNameByIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns localized month name by month index and style."
									},
									"parameters": [
										{
											"id": 1797,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1798,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 91,
									"character": 30
								}
							]
						},
						{
							"id": 1834,
							"name": "getMonthStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1835,
									"name": "getMonthStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates the same date but with day equals to 1."
									},
									"parameters": [
										{
											"id": 1836,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 144,
									"character": 24
								}
							]
						},
						{
							"id": 1846,
							"name": "getNumberOfDaysInMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1847,
									"name": "getNumberOfDaysInMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns number of days in the date."
									},
									"parameters": [
										{
											"id": 1848,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 164,
									"character": 33
								}
							]
						},
						{
							"id": 1783,
							"name": "getYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1784,
									"name": "getYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the year component of the given date."
									},
									"parameters": [
										{
											"id": 1785,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 70,
									"character": 18
								}
							]
						},
						{
							"id": 1843,
							"name": "getYearEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1844,
									"name": "getYearEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates the same date but with month equals to 11 and day equals to 31."
									},
									"parameters": [
										{
											"id": 1845,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 159,
									"character": 21
								}
							]
						},
						{
							"id": 1840,
							"name": "getYearStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1841,
									"name": "getYearStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates the same date but with month equals to 0 and day equals to 1."
									},
									"parameters": [
										{
											"id": 1842,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 154,
									"character": 23
								}
							]
						},
						{
							"id": 1754,
							"name": "isBetween",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1755,
									"name": "isBetween",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if the date is between the start date and the end date."
									},
									"parameters": [
										{
											"id": 1756,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1757,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1758,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 22,
									"character": 11
								}
							]
						},
						{
							"id": 1823,
							"name": "isSameDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1824,
									"name": "isSameDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same day."
									},
									"parameters": [
										{
											"id": 1825,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1826,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 126,
									"character": 20
								}
							]
						},
						{
							"id": 1759,
							"name": "isSameDaySafe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1760,
									"name": "isSameDaySafe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same day."
									},
									"parameters": [
										{
											"id": 1761,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1762,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 29,
									"character": 15
								}
							]
						},
						{
							"id": 1819,
							"name": "isSameMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1820,
									"name": "isSameMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same month."
									},
									"parameters": [
										{
											"id": 1821,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1822,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 121,
									"character": 22
								}
							]
						},
						{
							"id": 1763,
							"name": "isSameMonthSafe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1764,
									"name": "isSameMonthSafe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same month."
									},
									"parameters": [
										{
											"id": 1765,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1766,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 36,
									"character": 17
								}
							]
						},
						{
							"id": 1815,
							"name": "isSameYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1816,
									"name": "isSameYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same year."
									},
									"parameters": [
										{
											"id": 1817,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1818,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 116,
									"character": 21
								}
							]
						},
						{
							"id": 1767,
							"name": "isSameYearSafe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1768,
									"name": "isSameYearSafe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same year."
									},
									"parameters": [
										{
											"id": 1769,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 1770,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 43,
									"character": 16
								}
							]
						},
						{
							"id": 1771,
							"name": "isValidDateString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1772,
									"name": "isValidDateString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if date string is valid date string according to the provided format."
									},
									"parameters": [
										{
											"id": 1773,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1774,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 50,
									"character": 28
								}
							]
						},
						{
							"id": 1802,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1803,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parses the date string according to the passed format."
									},
									"parameters": [
										{
											"id": 1804,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1805,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 101,
									"character": 16
								}
							]
						},
						{
							"id": 1751,
							"name": "setLocale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1752,
									"name": "setLocale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1753,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 15,
									"character": 11
								}
							]
						},
						{
							"id": 1775,
							"name": "today",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 1776,
									"name": "today",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns today date."
									},
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 55,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1749,
								1750
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1849,
								1853,
								1857,
								1831,
								1827,
								1810,
								1806,
								1777,
								1786,
								1799,
								1789,
								1780,
								1837,
								1791,
								1795,
								1834,
								1846,
								1783,
								1843,
								1840,
								1754,
								1823,
								1759,
								1819,
								1763,
								1815,
								1767,
								1771,
								1802,
								1751,
								1775
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/services/date.service.ts",
							"line": 10,
							"character": 35
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbNativeDateService",
							"id": 1931
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1747
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/services/date.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2047,
			"name": "\"theme/components/calendar-kit/services/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/services/index.ts",
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/services/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1930,
			"name": "\"theme/components/calendar-kit/services/native-date.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar-kit/services/native-date.service.ts",
			"children": [
				{
					"id": 1931,
					"name": "NbNativeDateService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbNativeDateService` is basic implementation of `NbDateService` using\nnative js date objects and angular localization services."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1933,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1934,
									"name": "new NbNativeDateService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1935,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "LOCALE_ID"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbNativeDateService",
										"id": 1931
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 26,
									"character": 31
								}
							]
						},
						{
							"id": 2028,
							"name": "DAYS_IN_WEEK",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 11,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "7",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbDateService.DAYS_IN_WEEK",
								"id": 1749
							}
						},
						{
							"id": 1932,
							"name": "datePipe",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 26,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "DatePipe"
							}
						},
						{
							"id": 2029,
							"name": "locale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 13,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbDateService.locale",
								"id": 1750
							}
						},
						{
							"id": 1977,
							"name": "addDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1978,
									"name": "addDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1979,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1980,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.addDay",
										"id": 1849
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 94,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.addDay",
								"id": 1849
							}
						},
						{
							"id": 1981,
							"name": "addMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1982,
									"name": "addMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1983,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1984,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.addMonth",
										"id": 1853
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 98,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.addMonth",
								"id": 1853
							}
						},
						{
							"id": 1985,
							"name": "addYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1986,
									"name": "addYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1987,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1988,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.addYear",
										"id": 1857
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 102,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.addYear",
								"id": 1857
							}
						},
						{
							"id": 1989,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1990,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1991,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.clone",
										"id": 1831
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 106,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.clone",
								"id": 1831
							}
						},
						{
							"id": 1992,
							"name": "compareDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1993,
									"name": "compareDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1994,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1995,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.compareDates",
										"id": 1827
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 110,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.compareDates",
								"id": 1827
							}
						},
						{
							"id": 1996,
							"name": "createDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1997,
									"name": "createDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1998,
											"name": "year",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1999,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2000,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.createDate",
										"id": 1810
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 114,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.createDate",
								"id": 1810
							}
						},
						{
							"id": 1969,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1970,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1971,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1972,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.format",
										"id": 1806
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 83,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.format",
								"id": 1806
							}
						},
						{
							"id": 1945,
							"name": "getDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1946,
									"name": "getDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1947,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getDate",
										"id": 1777
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 46,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getDate",
								"id": 1777
							}
						},
						{
							"id": 1954,
							"name": "getDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1955,
									"name": "getDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1956,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getDayOfWeek",
										"id": 1786
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 58,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getDayOfWeek",
								"id": 1786
							}
						},
						{
							"id": 1967,
							"name": "getDayOfWeekNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1968,
									"name": "getDayOfWeekNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getDayOfWeekNames",
										"id": 1799
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 79,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getDayOfWeekNames",
								"id": 1799
							}
						},
						{
							"id": 1957,
							"name": "getFirstDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1958,
									"name": "getFirstDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "returns first day of the week, it can be 1 if week starts from monday\nand 0 if from sunday and so on."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getFirstDayOfWeek",
										"id": 1789
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 66,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getFirstDayOfWeek",
								"id": 1789
							}
						},
						{
							"id": 1948,
							"name": "getMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1949,
									"name": "getMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1950,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getMonth",
										"id": 1780
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 50,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getMonth",
								"id": 1780
							}
						},
						{
							"id": 2001,
							"name": "getMonthEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2002,
									"name": "getMonthEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2003,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getMonthEnd",
										"id": 1837
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 125,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getMonthEnd",
								"id": 1837
							}
						},
						{
							"id": 1959,
							"name": "getMonthName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1960,
									"name": "getMonthName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1961,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1962,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											},
											"defaultValue": " TranslationWidth.Abbreviated"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getMonthName",
										"id": 1791
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 70,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getMonthName",
								"id": 1791
							}
						},
						{
							"id": 1963,
							"name": "getMonthNameByIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1964,
									"name": "getMonthNameByIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1965,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1966,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TranslationWidth"
											},
											"defaultValue": " TranslationWidth.Abbreviated"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getMonthNameByIndex",
										"id": 1795
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 75,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getMonthNameByIndex",
								"id": 1795
							}
						},
						{
							"id": 2004,
							"name": "getMonthStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2005,
									"name": "getMonthStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2006,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getMonthStart",
										"id": 1834
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 129,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getMonthStart",
								"id": 1834
							}
						},
						{
							"id": 2007,
							"name": "getNumberOfDaysInMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2008,
									"name": "getNumberOfDaysInMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2009,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getNumberOfDaysInMonth",
										"id": 1846
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 133,
									"character": 24
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getNumberOfDaysInMonth",
								"id": 1846
							}
						},
						{
							"id": 1951,
							"name": "getYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1952,
									"name": "getYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1953,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getYear",
										"id": 1783
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 54,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getYear",
								"id": 1783
							}
						},
						{
							"id": 2010,
							"name": "getYearEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2011,
									"name": "getYearEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2012,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getYearEnd",
										"id": 1843
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 137,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getYearEnd",
								"id": 1843
							}
						},
						{
							"id": 2013,
							"name": "getYearStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2014,
									"name": "getYearStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2015,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.getYearStart",
										"id": 1840
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 141,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.getYearStart",
								"id": 1840
							}
						},
						{
							"id": 2030,
							"name": "isBetween",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2031,
									"name": "isBetween",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if the date is between the start date and the end date."
									},
									"parameters": [
										{
											"id": 2032,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2033,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2034,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbDateService.isBetween",
										"id": 1754
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 22,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbDateService.isBetween",
								"id": 1754
							}
						},
						{
							"id": 2016,
							"name": "isSameDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2017,
									"name": "isSameDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2018,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2019,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.isSameDay",
										"id": 1823
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 145,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.isSameDay",
								"id": 1823
							}
						},
						{
							"id": 2035,
							"name": "isSameDaySafe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2036,
									"name": "isSameDaySafe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same day."
									},
									"parameters": [
										{
											"id": 2037,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2038,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbDateService.isSameDaySafe",
										"id": 1759
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 29,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbDateService.isSameDaySafe",
								"id": 1759
							}
						},
						{
							"id": 2020,
							"name": "isSameMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2021,
									"name": "isSameMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2022,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2023,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.isSameMonth",
										"id": 1819
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 150,
									"character": 13
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.isSameMonth",
								"id": 1819
							}
						},
						{
							"id": 2039,
							"name": "isSameMonthSafe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2040,
									"name": "isSameMonthSafe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same month."
									},
									"parameters": [
										{
											"id": 2041,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2042,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbDateService.isSameMonthSafe",
										"id": 1763
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 36,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbDateService.isSameMonthSafe",
								"id": 1763
							}
						},
						{
							"id": 2024,
							"name": "isSameYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2025,
									"name": "isSameYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2026,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2027,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.isSameYear",
										"id": 1815
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 155,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.isSameYear",
								"id": 1815
							}
						},
						{
							"id": 2043,
							"name": "isSameYearSafe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2044,
									"name": "isSameYearSafe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks is two dates have the same year."
									},
									"parameters": [
										{
											"id": 2045,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2046,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbDateService.isSameYearSafe",
										"id": 1767
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/date.service.ts",
									"line": 43,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbDateService.isSameYearSafe",
								"id": 1767
							}
						},
						{
							"id": 1939,
							"name": "isValidDateString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1940,
									"name": "isValidDateString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1941,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1942,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.isValidDateString",
										"id": 1771
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 38,
									"character": 19
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.isValidDateString",
								"id": 1771
							}
						},
						{
							"id": 1973,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1974,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "We haven't got capability to parse date using formatting without third party libraries."
									},
									"parameters": [
										{
											"id": 1975,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1976,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.parse",
										"id": 1802
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 90,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.parse",
								"id": 1802
							}
						},
						{
							"id": 1936,
							"name": "setLocale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1937,
									"name": "setLocale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1938,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.setLocale",
										"id": 1751
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 33,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.setLocale",
								"id": 1751
							}
						},
						{
							"id": 1943,
							"name": "today",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1944,
									"name": "today",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDateService.today",
										"id": 1775
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
									"line": 42,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDateService.today",
								"id": 1775
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1933
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2028,
								1932,
								2029
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1977,
								1981,
								1985,
								1989,
								1992,
								1996,
								1969,
								1945,
								1954,
								1967,
								1957,
								1948,
								2001,
								1959,
								1963,
								2004,
								2007,
								1951,
								2010,
								2013,
								2030,
								2016,
								2035,
								2020,
								2039,
								2024,
								2043,
								1939,
								1973,
								1936,
								1943
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
							"line": 25,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbDateService",
							"id": 1747,
							"typeArguments": [
								{
									"type": "reference",
									"name": "Date"
								}
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1931
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar-kit/services/native-date.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2411,
			"name": "\"theme/components/calendar/base-calendar.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar/base-calendar.component.ts",
			"children": [
				{
					"id": 2412,
					"name": "NbBaseCalendarComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The basis for calendar and range calendar components.\nEncapsulates common behavior - store calendar state and perform navigation\nbetween pickers."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-base-calendar',\n  templateUrl: './base-calendar.component.html',\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2413,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2414,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2430,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2432,
									"name": "new NbBaseCalendarComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2433,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbBaseCalendarComponent",
										"id": 2412
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 80,
									"character": 61
								}
							]
						},
						{
							"id": 2440,
							"name": "ViewMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 101,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarViewMode",
								"id": 2067
							},
							"defaultValue": " NbCalendarViewMode"
						},
						{
							"id": 2416,
							"name": "activeViewMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines active view for calendar."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'startView'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 32,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarViewMode",
								"id": 2067
							},
							"defaultValue": " NbCalendarViewMode.DATE"
						},
						{
							"id": 2415,
							"name": "boundingMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines if we should render previous and next months\nin the current month view."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 27,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 2428,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Value which will be rendered as selected."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 75,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 2429,
							"name": "dateChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits date when selected."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 80,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 2431,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 82,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2423,
							"name": "dayCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 52,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 2419,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predicate that decides which cells will be disabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 47,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2420,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2421,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2422,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar/base-calendar.component.ts",
											"line": 47,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2418,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 42,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2417,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Minimum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2424,
							"name": "monthCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom month cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 57,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 2426,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the calendar and entire components.\nCan be 'medium' which is default or 'large'."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 68,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM"
						},
						{
							"id": 2427,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 70,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2425,
							"name": "yearCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom year cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 62,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 2438,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large'"
									}
								}
							],
							"getSignature": {
								"id": 2439,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 97,
									"character": 13
								}
							]
						},
						{
							"id": 2436,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium'"
									}
								}
							],
							"getSignature": {
								"id": 2437,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 92,
									"character": 12
								}
							]
						},
						{
							"id": 2457,
							"name": "changeVisibleMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2458,
									"name": "changeVisibleMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2459,
											"name": "direction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 132,
									"character": 28
								}
							]
						},
						{
							"id": 2460,
							"name": "changeVisibleYear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2461,
									"name": "changeVisibleYear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2462,
											"name": "direction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 136,
									"character": 27
								}
							]
						},
						{
							"id": 2455,
							"name": "navigateToday",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2456,
									"name": "navigateToday",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 127,
									"character": 15
								}
							]
						},
						{
							"id": 2449,
							"name": "nextMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2450,
									"name": "nextMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 115,
									"character": 11
								}
							]
						},
						{
							"id": 2453,
							"name": "nextYears",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2454,
									"name": "nextYears",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 123,
									"character": 11
								}
							]
						},
						{
							"id": 2434,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2435,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 85,
									"character": 10
								}
							]
						},
						{
							"id": 2447,
							"name": "prevMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2448,
									"name": "prevMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 111,
									"character": 11
								}
							]
						},
						{
							"id": 2451,
							"name": "prevYears",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2452,
									"name": "prevYears",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 119,
									"character": 11
								}
							]
						},
						{
							"id": 2441,
							"name": "setViewMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2442,
									"name": "setViewMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2443,
											"name": "viewMode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbCalendarViewMode",
												"id": 2067
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 103,
									"character": 13
								}
							]
						},
						{
							"id": 2444,
							"name": "setVisibleDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2445,
									"name": "setVisibleDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2446,
											"name": "visibleDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/base-calendar.component.ts",
									"line": 107,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2430
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2440,
								2416,
								2415,
								2428,
								2429,
								2431,
								2423,
								2419,
								2418,
								2417,
								2424,
								2426,
								2427,
								2425
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2438,
								2436
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2457,
								2460,
								2455,
								2449,
								2453,
								2434,
								2447,
								2451,
								2441,
								2444
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/base-calendar.component.ts",
							"line": 21,
							"character": 36
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2412
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar/base-calendar.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2463,
			"name": "\"theme/components/calendar/base-calendar.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar/base-calendar.module.ts",
			"children": [
				{
					"id": 2464,
					"name": "NbBaseCalendarModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbCalendarKitModule, NbSharedModule, NbCardModule],\n  exports: [NbBaseCalendarComponent],\n  declarations: [NbBaseCalendarComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/base-calendar.module.ts",
							"line": 20,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2464
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar/base-calendar.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2467,
			"name": "\"theme/components/calendar/calendar-range-cells\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar/calendar-range-cells.ts",
			"children": [
				{
					"id": 2468,
					"name": "NbCalendarRangeDayCellComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-range-day-cell',\n  template: `\n    <div\n      class=\"day-cell\"\n      [class.today]=\"today\"\n      [class.selected]=\"selected\"\n      [class.bounding-month]=\"boundingMonth\"\n      [class.start]=\"start\"\n      [class.end]=\"end\"\n      [class.in-range]=\"inRange\"\n      [class.disabled]=\"disabled\">\n      {{ day }}\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { '(click)': 'onClick()', 'class': 'range-cell' },\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2469,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2480,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2482,
									"name": "new NbCalendarRangeDayCellComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2483,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarRangeDayCellComponent",
										"id": 2468
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 46,
									"character": 61
								}
							]
						},
						{
							"id": 2470,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 34,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.date",
								"id": 2077
							}
						},
						{
							"id": 2481,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 48,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2475,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 44,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2476,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2477,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2478,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar/calendar-range-cells.ts",
											"line": 44,
											"character": 18
										}
									]
								}
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.filter",
								"id": 2083
							}
						},
						{
							"id": 2474,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 42,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.max",
								"id": 2082
							}
						},
						{
							"id": 2473,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.min",
								"id": 2081
							}
						},
						{
							"id": 2479,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 46,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter(true)",
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.select",
								"id": 2078
							}
						},
						{
							"id": 2471,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 36,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarRange",
								"id": 2540,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.selectedValue",
								"id": 2079
							}
						},
						{
							"id": 2472,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 38,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.visibleDate",
								"id": 2080
							}
						},
						{
							"id": 2492,
							"name": "boundingMonth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2493,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 71,
									"character": 19
								}
							]
						},
						{
							"id": 2500,
							"name": "day",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2501,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 88,
									"character": 9
								}
							]
						},
						{
							"id": 2498,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2499,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 84,
									"character": 14
								}
							]
						},
						{
							"id": 2496,
							"name": "empty",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2497,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 80,
									"character": 11
								}
							]
						},
						{
							"id": 2488,
							"name": "end",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.end'"
									}
								}
							],
							"getSignature": {
								"id": 2489,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 62,
									"character": 35
								}
							]
						},
						{
							"id": 2484,
							"name": "inRange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.in-range'"
									}
								}
							],
							"getSignature": {
								"id": 2485,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 51,
									"character": 44
								}
							]
						},
						{
							"id": 2494,
							"name": "selected",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2495,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 75,
									"character": 14
								}
							]
						},
						{
							"id": 2486,
							"name": "start",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.start'"
									}
								}
							],
							"getSignature": {
								"id": 2487,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 57,
									"character": 39
								}
							]
						},
						{
							"id": 2490,
							"name": "today",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2491,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 67,
									"character": 11
								}
							]
						},
						{
							"id": 2508,
							"name": "dontFitFilter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2509,
									"name": "dontFitFilter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 108,
									"character": 23
								}
							]
						},
						{
							"id": 2506,
							"name": "greaterThanMax",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2507,
									"name": "greaterThanMax",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 104,
									"character": 24
								}
							]
						},
						{
							"id": 2502,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2503,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 92,
									"character": 9
								}
							]
						},
						{
							"id": 2504,
							"name": "smallerThanMin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2505,
									"name": "smallerThanMin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 100,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2480
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2470,
								2481,
								2475,
								2474,
								2473,
								2479,
								2471,
								2472
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2492,
								2500,
								2498,
								2496,
								2488,
								2484,
								2494,
								2486,
								2490
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2508,
								2506,
								2502,
								2504
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/calendar-range-cells.ts",
							"line": 33,
							"character": 44
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "NbCalendarCell",
							"id": 2074,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "reference",
									"name": "NbCalendarRange",
									"id": 2540,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								}
							]
						}
					]
				},
				{
					"id": 2510,
					"name": "NbCalendarRangeYearCellComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-range-year-cell',\n  template: `{{ year }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { 'class': 'year-cell' },\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2511,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2517,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2519,
									"name": "new NbCalendarRangeYearCellComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2520,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarRangeYearCellComponent",
										"id": 2510
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 128,
									"character": 61
								}
							]
						},
						{
							"id": 2512,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 120,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.date",
								"id": 2077
							}
						},
						{
							"id": 2518,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 130,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2514,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 124,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.max",
								"id": 2082
							}
						},
						{
							"id": 2513,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 122,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.min",
								"id": 2081
							}
						},
						{
							"id": 2516,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 128,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter(true)",
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.select",
								"id": 2078
							}
						},
						{
							"id": 2515,
							"name": "selectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 126,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarRange",
								"id": 2540,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "NbCalendarCell.selectedValue",
								"id": 2079
							}
						},
						{
							"id": 2525,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"getSignature": {
								"id": 2526,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 141,
									"character": 45
								}
							]
						},
						{
							"id": 2521,
							"name": "selected",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.selected'"
									}
								}
							],
							"getSignature": {
								"id": 2522,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 133,
									"character": 45
								}
							]
						},
						{
							"id": 2523,
							"name": "today",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.today'"
									}
								}
							],
							"getSignature": {
								"id": 2524,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 137,
									"character": 39
								}
							]
						},
						{
							"id": 2527,
							"name": "year",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 2528,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 145,
									"character": 10
								}
							]
						},
						{
							"id": 2533,
							"name": "greaterThanMax",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2534,
									"name": "greaterThanMax",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 162,
									"character": 24
								}
							]
						},
						{
							"id": 2529,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 2530,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 150,
									"character": 9
								}
							]
						},
						{
							"id": 2531,
							"name": "smallerThanMin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2532,
									"name": "smallerThanMin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 158,
									"character": 24
								}
							]
						},
						{
							"id": 2537,
							"name": "yearEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2538,
									"name": "yearEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 170,
									"character": 17
								}
							]
						},
						{
							"id": 2535,
							"name": "yearStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2536,
									"name": "yearStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range-cells.ts",
									"line": 166,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2517
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2512,
								2518,
								2514,
								2513,
								2516,
								2515
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2525,
								2521,
								2523,
								2527
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2533,
								2529,
								2531,
								2537,
								2535
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/calendar-range-cells.ts",
							"line": 119,
							"character": 45
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "NbCalendarCell",
							"id": 2074,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "reference",
									"name": "NbCalendarRange",
									"id": 2540,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								}
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2468,
						2510
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar/calendar-range-cells.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2539,
			"name": "\"theme/components/calendar/calendar-range.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar/calendar-range.component.ts",
			"children": [
				{
					"id": 2544,
					"name": "NbCalendarRangeComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Calendar component provides a capability to choose ranges.\nFor additional info check `NbBaseCalendarComponent`.",
						"text": "```html\n<nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n```\n"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar-range',\n  template: `\n    <nb-base-calendar\n      [date]=\"range\"\n      (dateChange)=\"onChange($event)\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [startView]=\"startView\"\n      [boundingMonth]=\"boundingMonth\"\n      [dayCellComponent]=\"dayCellComponent\"\n      [monthCellComponent]=\"monthCellComponent\"\n      [yearCellComponent]=\"yearCellComponent\"\n      [visibleDate]=\"visibleDate\"\n      [size]=\"size\"\n    ></nb-base-calendar>\n  `,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2545,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2567,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2569,
									"name": "new NbCalendarRangeComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2570,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarRangeComponent",
										"id": 2544
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 115,
									"character": 79
								}
							]
						},
						{
							"id": 2546,
							"name": "boundingMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines if we should render previous and next months\nin the current month view."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 50,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 2568,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 117,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2557,
							"name": "dayCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 81,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									}
								]
							},
							"defaultValue": " NbCalendarRangeDayCellComponent"
						},
						{
							"id": 2550,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A predicate that decides which cells will be disabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 70,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2551,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2552,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2553,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar/calendar-range.component.ts",
											"line": 70,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2549,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A maximum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 65,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2548,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A minimum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 60,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2558,
							"name": "monthCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom month cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 86,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									}
								]
							}
						},
						{
							"id": 2565,
							"name": "range",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Range which will be rendered as selected."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 110,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarRange",
								"id": 2540,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 2566,
							"name": "rangeChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits range when start selected and emits again when end selected."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 115,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarRange",
										"id": 2540,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 2563,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the calendar and entire components.\nCan be 'medium' which is default or 'large'."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 103,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM"
						},
						{
							"id": 2547,
							"name": "startView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines starting view for the calendar."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 55,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarViewMode",
								"id": 2067
							},
							"defaultValue": " NbCalendarViewMode.DATE"
						},
						{
							"id": 2564,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 105,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2562,
							"name": "yearCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 97,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									}
								]
							},
							"defaultValue": " NbCalendarRangeYearCellComponent"
						},
						{
							"id": 2554,
							"name": "_cellComponent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'dayCellComponent'"
									}
								}
							],
							"setSignature": {
								"id": 2555,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
								},
								"parameters": [
									{
										"id": 2556,
										"name": "cellComponent",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "Type",
											"typeArguments": [
												{
													"type": "reference",
													"name": "NbCalendarCell",
													"id": 2074,
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "D"
														},
														{
															"type": "reference",
															"name": "NbCalendarRange",
															"id": 2540,
															"typeArguments": [
																{
																	"type": "typeParameter",
																	"name": "D"
																}
															]
														}
													]
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 76,
									"character": 20
								}
							]
						},
						{
							"id": 2559,
							"name": "_yearCellComponent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom year cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'yearCellComponent'"
									}
								}
							],
							"setSignature": {
								"id": 2560,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Custom year cell component. Have to implement `NbCalendarCell` interface."
								},
								"parameters": [
									{
										"id": 2561,
										"name": "cellComponent",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "Type",
											"typeArguments": [
												{
													"type": "reference",
													"name": "NbCalendarCell",
													"id": 2074,
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "D"
														},
														{
															"type": "reference",
															"name": "NbCalendarRange",
															"id": 2540,
															"typeArguments": [
																{
																	"type": "typeParameter",
																	"name": "D"
																}
															]
														}
													]
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 92,
									"character": 24
								}
							]
						},
						{
							"id": 2576,
							"name": "handleSelected",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2577,
									"name": "handleSelected",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2578,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 131,
									"character": 24
								}
							]
						},
						{
							"id": 2574,
							"name": "initDateIfNull",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2575,
									"name": "initDateIfNull",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 125,
									"character": 24
								}
							]
						},
						{
							"id": 2571,
							"name": "onChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2572,
									"name": "onChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2573,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 120,
									"character": 10
								}
							]
						},
						{
							"id": 2584,
							"name": "selectEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2585,
									"name": "selectEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2586,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 148,
									"character": 19
								}
							]
						},
						{
							"id": 2587,
							"name": "selectRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2588,
									"name": "selectRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2589,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 158,
									"character": 21
								}
							]
						},
						{
							"id": 2581,
							"name": "selectStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2582,
									"name": "selectStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2583,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 144,
									"character": 21
								}
							]
						},
						{
							"id": 2579,
							"name": "selectionStarted",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2580,
									"name": "selectionStarted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 139,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2567
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2546,
								2568,
								2557,
								2550,
								2549,
								2548,
								2558,
								2565,
								2566,
								2563,
								2547,
								2564,
								2562
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2554,
								2559
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2576,
								2574,
								2571,
								2584,
								2587,
								2581,
								2579
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/calendar-range.component.ts",
							"line": 45,
							"character": 37
						}
					]
				},
				{
					"id": 2540,
					"name": "NbCalendarRange",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 2541,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2543,
							"name": "end",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 15,
									"character": 5
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2542,
							"name": "start",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar-range.component.ts",
									"line": 14,
									"character": 7
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2543,
								2542
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/calendar-range.component.ts",
							"line": 13,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2544
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2540
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar/calendar-range.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2590,
			"name": "\"theme/components/calendar/calendar-range.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar/calendar-range.module.ts",
			"children": [
				{
					"id": 2591,
					"name": "NbCalendarRangeModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbBaseCalendarModule],\n  exports: [NbCalendarRangeComponent],\n  declarations: [\n    NbCalendarRangeComponent,\n    NbCalendarRangeDayCellComponent,\n    NbCalendarRangeYearCellComponent,\n  ],\n  entryComponents: [NbCalendarRangeDayCellComponent, NbCalendarRangeYearCellComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/calendar-range.module.ts",
							"line": 24,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2591
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar/calendar-range.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2393,
			"name": "\"theme/components/calendar/calendar.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar/calendar.component.ts",
			"children": [
				{
					"id": 2394,
					"name": "NbCalendarComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Calendar component provides a capability to choose a date.",
						"text": "```html\n<nb-calendar [(date)]=\"date\"></nb-calendar>\n<nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n```\n\nBasic usage example",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "calendar/calendar-showcase.component)\n\nIf you want to select ranges you can use `NbCalendarRangeComponent`.\n\n```html\n<nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n<nb-calendar-range [range]=\"range\" (rangeChange)=\"handleRangeChange($event)\"></nb-calendar-range>\n```\n\nIn order to use it, you have to import `NbCalendarRangeModule`."
							},
							{
								"tag": "stacked-example(range,",
								"text": "calendar/calendar-range-showcase.component)\n\nAs you can see in the basic usage example calendar contains previous and next month days\nwhich can be disabled using `boundingMonth` property."
							},
							{
								"tag": "stacked-example(bounding",
								"text": "months, calendar/calendar-bounding-month.component)\n\nYou can define starting view of the calendar by setting `startView` property.\nAvailable values: year, month and date."
							},
							{
								"tag": "stacked-example(start",
								"text": "view, calendar/calendar-start-view.component)\n\nYou can use a larger version of the calendar by defining size property.\nAvailable values: medium(which is default) and large."
							},
							{
								"tag": "stacked-example(size,",
								"text": "calendar/calendar-size.component)\n\nCalendar supports min and max dates which disables values out of min-max range."
							},
							{
								"tag": "stacked-example(borders,",
								"text": "calendar/calendar-min-max.component)\n\nAlso, you can define custom filter property that should be predicate which receives\ndate and returns false if this date has to be disabled. In this example, we provide the filter\nwhich disables weekdays."
							},
							{
								"tag": "stacked-example(filter,",
								"text": "calendar/calendar-filter.component)\n\nIf you need create custom cells you can easily provide custom components for\ncalendar. For examples if you want to show any average price under each date you can\njust provide custom `dayCellComponent`. Custom cells for month and year can be provided\nthe same way, check API reference."
							},
							{
								"tag": "stacked-example(custom",
								"text": "day cell, calendar/calendar-custom-day-cell-showcase.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\ncalendar-width\ncalendar-height\ncalendar-header-title-font-size\ncalendar-header-title-font-weight\ncalendar-header-sub-title-font-size\ncalendar-header-sub-title-font-weight\ncalendar-navigation-button-width\ncalendar-selected-item-bg\ncalendar-hover-item-bg\ncalendar-today-item-bg\ncalendar-active-item-bg\ncalendar-fg\ncalendar-selected-fg\ncalendar-day-cell-width\ncalendar-day-cell-height\ncalendar-month-cell-width\ncalendar-month-cell-height\ncalendar-year-cell-width\ncalendar-year-cell-height\ncalendar-inactive-opacity\ncalendar-disabled-opacity\ncalendar-border-radius\ncalendar-weekday-width\ncalendar-weekday-height\ncalendar-weekday-font-size\ncalendar-weekday-font-weight\ncalendar-weekday-fg\ncalendar-weekday-holiday-fg\ncalendar-range-bg-in-range\ncalendar-large-width\ncalendar-large-height\ncalendar-day-cell-large-width\ncalendar-day-cell-large-height\ncalendar-month-cell-large-width\ncalendar-month-cell-large-height\ncalendar-year-cell-large-width\ncalendar-year-cell-large-height\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-calendar',\n  template: `\n    <nb-base-calendar\n      [boundingMonth]=\"boundingMonth\"\n      [startView]=\"startView\"\n      [date]=\"date\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [dayCellComponent]=\"dayCellComponent\"\n      [monthCellComponent]=\"monthCellComponent\"\n      [yearCellComponent]=\"yearCellComponent\"\n      [size]=\"size\"\n      [visibleDate]=\"visibleDate\"\n      (dateChange)=\"dateChange.emit($event)\"\n    ></nb-base-calendar>\n  `,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2395,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2396,
							"name": "boundingMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines if we should render previous and next months\nin the current month view."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 124,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 2409,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Date which will be rendered as selected."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 172,
									"character": 15
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2410,
							"name": "dateChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits date when selected."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 177,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 2404,
							"name": "dayCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 149,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							}
						},
						{
							"id": 2400,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predicate that decides which cells will be disabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 144,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2401,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2402,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2403,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/calendar/calendar.component.ts",
											"line": 144,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 2399,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 139,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2398,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Minimum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 134,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2405,
							"name": "monthCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom month cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 154,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							}
						},
						{
							"id": 2407,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the calendar and entire components.\nCan be 'medium' which is default or 'large'."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 165,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM"
						},
						{
							"id": 2397,
							"name": "startView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines starting view for calendar."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 129,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarViewMode",
								"id": 2067
							},
							"defaultValue": " NbCalendarViewMode.DATE"
						},
						{
							"id": 2408,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 167,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 2406,
							"name": "yearCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom year cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/calendar/calendar.component.ts",
									"line": 159,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2396,
								2409,
								2410,
								2404,
								2400,
								2399,
								2398,
								2405,
								2407,
								2397,
								2408,
								2406
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/calendar.component.ts",
							"line": 118,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2394
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar/calendar.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2465,
			"name": "\"theme/components/calendar/calendar.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/calendar/calendar.module.ts",
			"children": [
				{
					"id": 2466,
					"name": "NbCalendarModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbBaseCalendarModule],\n  exports: [NbCalendarComponent],\n  declarations: [NbCalendarComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/calendar/calendar.module.ts",
							"line": 18,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2466
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/calendar/calendar.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1646,
			"name": "\"theme/components/card/card.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/card/card.component.ts",
			"children": [
				{
					"id": 1648,
					"name": "NbCardBodyComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within  the `<nb-card>` component.\nAdds styles for a preset body section."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-card-body',\n  template: `<ng-content></ng-content>`,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/card.component.ts",
							"line": 44,
							"character": 32
						}
					]
				},
				{
					"id": 1650,
					"name": "NbCardComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Basic content container component.",
						"text": "Basic card example:",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "card/card-showcase.component)\n\nBasic card configuration:\n\n```html\n<nb-card>\n  <nb-card-body>\n    Card\n  </nb-card-body>\n</nb-card>\n```\nCard with header and footer:"
							},
							{
								"tag": "stacked-example(with",
								"text": "Header & Footer, card/card-full.component)\n\nMost of the time main card content goes to `nb-card-body`,\nso it is styled and aligned in accordance with the header and footer.\nIn case you need a higher level of control, you can pass contend directly to `nb-card`,\nso `nb-card-body` styling will not be applied.\n\nConsider an example with `nb-list` component:"
							},
							{
								"tag": "stacked-example(showcase,",
								"text": "card/card-without-body.component)\n\nColored cards could be simply configured by providing a `status` property:"
							},
							{
								"tag": "stacked-example(colored",
								"text": "Card, card/card-colors.component)\n\nIt is also possible to assign an `accent` property for a slight card highlight\nas well as combine it with `status`:"
							},
							{
								"tag": "stacked-example(accent",
								"text": "Card, card/card-accents.component)\n"
							},
							{
								"tag": "additional-example(multiple",
								"text": "Sizes, card/card-sizes.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\ncard-line-height:\ncard-font-weight:\ncard-fg-text:\ncard-bg:\ncard-height-xxsmall:\ncard-height-xsmall:\ncard-height-small:\ncard-height-medium:\ncard-height-large:\ncard-height-xlarge:\ncard-height-xxlarge:\ncard-shadow:\ncard-border-radius:\ncard-padding:\ncard-margin:\ncard-separator:\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-card',\n  styleUrls: ['./card.component.scss'],\n  template: `\n    <ng-content select=\"nb-card-header\"></ng-content>\n    <ng-content select=\"nb-card-body\"></ng-content>\n    <ng-content></ng-content>\n    <ng-content select=\"nb-card-footer\"></ng-content>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 1674,
							"name": "accent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 151,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1672,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 149,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1673,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 150,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1665,
							"name": "ACCENT_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 141,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 1671,
							"name": "ACCENT_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 147,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 1666,
							"name": "ACCENT_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 142,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 1668,
							"name": "ACCENT_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 144,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 1667,
							"name": "ACCENT_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 143,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 1669,
							"name": "ACCENT_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 145,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 1670,
							"name": "ACCENT_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 146,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 1655,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 129,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 1654,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 128,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 1653,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 127,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 1656,
							"name": "SIZE_XLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 130,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xlarge"
							},
							"defaultValue": "\"xlarge\""
						},
						{
							"id": 1652,
							"name": "SIZE_XSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 126,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xsmall"
							},
							"defaultValue": "\"xsmall\""
						},
						{
							"id": 1657,
							"name": "SIZE_XXLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 131,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxlarge"
							},
							"defaultValue": "\"xxlarge\""
						},
						{
							"id": 1651,
							"name": "SIZE_XXSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 125,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxsmall"
							},
							"defaultValue": "\"xxsmall\""
						},
						{
							"id": 1658,
							"name": "STATUS_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 133,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 1664,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 139,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 1659,
							"name": "STATUS_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 134,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 1661,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 136,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 1660,
							"name": "STATUS_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 135,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 1662,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 137,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 1663,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 138,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 1689,
							"name": "active",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.active-card'"
									}
								}
							],
							"getSignature": {
								"id": 1690,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 189,
									"character": 12
								}
							]
						},
						{
							"id": 1715,
							"name": "activeAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-active'"
									}
								}
							],
							"getSignature": {
								"id": 1716,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 254,
									"character": 18
								}
							]
						},
						{
							"id": 1701,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.danger-card'"
									}
								}
							],
							"getSignature": {
								"id": 1702,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 219,
									"character": 12
								}
							]
						},
						{
							"id": 1713,
							"name": "dangerAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-danger'"
									}
								}
							],
							"getSignature": {
								"id": 1714,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 249,
									"character": 18
								}
							]
						},
						{
							"id": 1691,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled-card'"
									}
								}
							],
							"getSignature": {
								"id": 1692,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 194,
									"character": 14
								}
							]
						},
						{
							"id": 1717,
							"name": "disabledAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-disabled'"
									}
								}
							],
							"getSignature": {
								"id": 1718,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 259,
									"character": 20
								}
							]
						},
						{
							"id": 1703,
							"name": "hasAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent'"
									}
								}
							],
							"getSignature": {
								"id": 1704,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 224,
									"character": 15
								}
							]
						},
						{
							"id": 1695,
							"name": "info",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.info-card'"
									}
								}
							],
							"getSignature": {
								"id": 1696,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 204,
									"character": 10
								}
							]
						},
						{
							"id": 1707,
							"name": "infoAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-info'"
									}
								}
							],
							"getSignature": {
								"id": 1708,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 234,
									"character": 16
								}
							]
						},
						{
							"id": 1683,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large-card'"
									}
								}
							],
							"getSignature": {
								"id": 1684,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 174,
									"character": 11
								}
							]
						},
						{
							"id": 1681,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium-card'"
									}
								}
							],
							"getSignature": {
								"id": 1682,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 169,
									"character": 12
								}
							]
						},
						{
							"id": 1693,
							"name": "primary",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.primary-card'"
									}
								}
							],
							"getSignature": {
								"id": 1694,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 199,
									"character": 13
								}
							]
						},
						{
							"id": 1705,
							"name": "primaryAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-primary'"
									}
								}
							],
							"getSignature": {
								"id": 1706,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 229,
									"character": 19
								}
							]
						},
						{
							"id": 1725,
							"name": "setAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Card accent (color of the top border):\nactive, disabled, primary, info, success, warning, danger"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'accent'"
									}
								}
							],
							"setSignature": {
								"id": 1726,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Card accent (color of the top border):\nactive, disabled, primary, info, success, warning, danger"
								},
								"parameters": [
									{
										"id": 1727,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 289,
									"character": 23
								}
							]
						},
						{
							"id": 1719,
							"name": "setSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Card size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'size'"
									}
								}
							],
							"setSignature": {
								"id": 1720,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Card size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
								},
								"parameters": [
									{
										"id": 1721,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 269,
									"character": 21
								}
							]
						},
						{
							"id": 1722,
							"name": "setStatus",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Card status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'status'"
									}
								}
							],
							"setSignature": {
								"id": 1723,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Card status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
								},
								"parameters": [
									{
										"id": 1724,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 279,
									"character": 23
								}
							]
						},
						{
							"id": 1679,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.small-card'"
									}
								}
							],
							"getSignature": {
								"id": 1680,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 164,
									"character": 11
								}
							]
						},
						{
							"id": 1697,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.success-card'"
									}
								}
							],
							"getSignature": {
								"id": 1698,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 209,
									"character": 13
								}
							]
						},
						{
							"id": 1709,
							"name": "successAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-success'"
									}
								}
							],
							"getSignature": {
								"id": 1710,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 239,
									"character": 19
								}
							]
						},
						{
							"id": 1699,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.warning-card'"
									}
								}
							],
							"getSignature": {
								"id": 1700,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 214,
									"character": 13
								}
							]
						},
						{
							"id": 1711,
							"name": "warningAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent-warning'"
									}
								}
							],
							"getSignature": {
								"id": 1712,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 244,
									"character": 19
								}
							]
						},
						{
							"id": 1685,
							"name": "xlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xlarge-card'"
									}
								}
							],
							"getSignature": {
								"id": 1686,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 179,
									"character": 12
								}
							]
						},
						{
							"id": 1677,
							"name": "xsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xsmall-card'"
									}
								}
							],
							"getSignature": {
								"id": 1678,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 159,
									"character": 12
								}
							]
						},
						{
							"id": 1687,
							"name": "xxlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxlarge-card'"
									}
								}
							],
							"getSignature": {
								"id": 1688,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 184,
									"character": 13
								}
							]
						},
						{
							"id": 1675,
							"name": "xxsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxsmall-card'"
									}
								}
							],
							"getSignature": {
								"id": 1676,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/card/card.component.ts",
									"line": 154,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1674,
								1672,
								1673,
								1665,
								1671,
								1666,
								1668,
								1667,
								1669,
								1670,
								1655,
								1654,
								1653,
								1656,
								1652,
								1657,
								1651,
								1658,
								1664,
								1659,
								1661,
								1660,
								1662,
								1663
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1689,
								1715,
								1701,
								1713,
								1691,
								1717,
								1703,
								1695,
								1707,
								1683,
								1681,
								1693,
								1705,
								1725,
								1719,
								1722,
								1679,
								1697,
								1709,
								1699,
								1711,
								1685,
								1677,
								1687,
								1675
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/card.component.ts",
							"line": 123,
							"character": 28
						}
					]
				},
				{
					"id": 1649,
					"name": "NbCardFooterComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within  the `<nb-card>` component.\nAdds styles for a preset footer section."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-card-footer',\n  template: `<ng-content></ng-content>`,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/card.component.ts",
							"line": 55,
							"character": 34
						}
					]
				},
				{
					"id": 1647,
					"name": "NbCardHeaderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within the `<nb-card>` component.\nIt adds styles for a preset header section.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\ncard-header-font-family:\ncard-header-font-size:\ncard-header-font-weight:\ncard-header-fg:\ncard-header-fg-heading:\ncard-header-active-bg:\ncard-header-active-fg:\ncard-header-disabled-bg:\ncard-header-primary-bg:\ncard-header-info-bg:\ncard-header-success-bg:\ncard-header-warning-bg:\ncard-header-danger-bg:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-card-header',\n  template: `<ng-content></ng-content>`,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/card.component.ts",
							"line": 33,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1648,
						1650,
						1649,
						1647
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/card/card.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1743,
			"name": "\"theme/components/card/card.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/card/card.module.ts",
			"children": [
				{
					"id": 1744,
					"name": "NbCardModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    ...NB_CARD_COMPONENTS,\n  ],\n  exports: [\n    ...NB_CARD_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/card.module.ts",
							"line": 44,
							"character": 25
						}
					]
				},
				{
					"id": 1745,
					"name": "NB_CARD_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/card/card.module.ts",
							"line": 22,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbCardComponent,\n  NbCardBodyComponent,\n  NbCardFooterComponent,\n  NbCardHeaderComponent,\n  NbRevealCardComponent,\n  NbFlipCardComponent,\n  NbCardFrontComponent,\n  NbCardBackComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1744
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1745
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/card/card.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1734,
			"name": "\"theme/components/card/flip-card/flip-card.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/card/flip-card/flip-card.component.ts",
			"children": [
				{
					"id": 1735,
					"name": "NbFlipCardComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Flip card example:",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "flip-card/flip-card-showcase.component)\n\nAs a content Flip card accepts two instances of `nb-card` - for front and back sides.\n\nBasic flip card configuration:\n\n```html\n<nb-flip-card>\n  <nb-card-front>\n    <nb-card>\n      <nb-card-body>\n        Front\n      </nb-card-body>\n    </nb-card>\n  </nb-card-front>\n  <nb-card-back>\n    <nb-card>\n      <nb-card-body>\n        Back\n      </nb-card-body>\n    </nb-card>\n  </nb-card-back>\n</nb-flip-card>\n```\n\nFlip Card with header and footer:"
							},
							{
								"tag": "stacked-example(with",
								"text": "Header & Footer, flip-card/flip-card-full.component.ts)\n\nColored flip-cards could be simply configured by providing a `status` property:"
							},
							{
								"tag": "stacked-example(colored",
								"text": "Card, flip-card/flip-card-colors.component)\n\nIt is also possible to assign an `accent` property for a slight card highlight\nas well as combine it with `status`:"
							},
							{
								"tag": "stacked-example(accent",
								"text": "Card, flip-card/flip-card-accents.component)\n"
							},
							{
								"tag": "additional-example(multiple",
								"text": "Sizes, flip-card/flip-card-sizes.component)\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-flip-card',\n  styleUrls: ['./flip-card.component.scss'],\n  template: `\n    <div class=\"flipcard-body\">\n      <div class=\"front-container\">\n        <ng-content select=\"nb-card-front\"></ng-content>\n        <a *ngIf=\"showToggleButton\" class=\"flip-button\" (click)=\"toggle()\">\n          <i class=\"nb-arrow-dropleft\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div class=\"back-container\">\n        <ng-content select=\"nb-card-back\"></ng-content>\n        <a *ngIf=\"showToggleButton\" class=\"flip-button\" (click)=\"toggle()\">\n          <i class=\"nb-arrow-dropleft\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 1736,
							"name": "flipped",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Flip state",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.flipped'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/card/flip-card/flip-card.component.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1737,
							"name": "showToggleButton",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Show/hide toggle button to be able to control toggle from your code",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/card/flip-card/flip-card.component.ts",
									"line": 77,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 1738,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1739,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/card/flip-card/flip-card.component.ts",
									"line": 79,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1736,
								1737
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1738
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/flip-card/flip-card.component.ts",
							"line": 64,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1735
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/card/flip-card/flip-card.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1728,
			"name": "\"theme/components/card/reveal-card/reveal-card.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/card/reveal-card/reveal-card.component.ts",
			"children": [
				{
					"id": 1729,
					"name": "NbRevealCardComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Reveal card example:",
						"tags": [
							{
								"tag": "stacked-example(my",
								"text": "example, reveal-card/reveal-card-showcase.component)\n\nAs a content Reveal card accepts two instances of `nb-card` - for front and back sides.\n\nBasic reveal card configuration:\n\n```html\n<nb-reveal-card>\n  <nb-card-front>\n    <nb-card>\n      <nb-card-body>\n        Front\n      </nb-card-body>\n    </nb-card>\n  </nb-card-front>\n  <nb-card-back>\n    <nb-card>\n      <nb-card-body>\n        Back\n      </nb-card-body>\n    </nb-card>\n  </nb-card-back>\n</nb-reveal-card>\n```\n\nReveal Card with header and footer:"
							},
							{
								"tag": "stacked-example(with",
								"text": "Header & Footer, reveal-card/reveal-card-full.component)\n\nColored reveal-cards could be simply configured by providing a `status` property:"
							},
							{
								"tag": "stacked-example(colored",
								"text": "Card, reveal-card/reveal-card-colors.component)\n\nIt is also possible to assign an `accent` property for a slight card highlight\nas well as combine it with `status`:"
							},
							{
								"tag": "stacked-example(accent",
								"text": "Card, reveal-card/reveal-card-accents.component)\n"
							},
							{
								"tag": "additional-example(multiple",
								"text": "Sizes, reveal-card/reveal-card-sizes.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-reveal-card',\n  styleUrls: ['./reveal-card.component.scss'],\n  template: `\n    <ng-content select=\"nb-card-front\"></ng-content>\n    <div class=\"second-card-container\">\n      <ng-content select=\"nb-card-back\"></ng-content>\n    </div>\n    <a *ngIf=\"showToggleButton\" class=\"reveal-button\" (click)=\"toggle()\">\n      <i class=\"nb-arrow-dropdown\" aria-hidden=\"true\"></i>\n    </a>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 1730,
							"name": "revealed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reveal state",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.revealed'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/card/reveal-card/reveal-card.component.ts",
									"line": 63,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 1731,
							"name": "showToggleButton",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Show/hide toggle button to be able to control toggle from your code",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/card/reveal-card/reveal-card.component.ts",
									"line": 69,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 1732,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1733,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/card/reveal-card/reveal-card.component.ts",
									"line": 71,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1730,
								1731
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1732
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/reveal-card/reveal-card.component.ts",
							"line": 56,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1729
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/card/reveal-card/reveal-card.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1740,
			"name": "\"theme/components/card/shared/shared.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/card/shared/shared.component.ts",
			"children": [
				{
					"id": 1742,
					"name": "NbCardBackComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within the `<nb-flip-card>` and `<nb-reveal-card>` components.",
						"text": "Use it as a container for the back card.\n"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-card-back',\n  template: '<ng-content select=\"nb-card\"></ng-content>',\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/shared/shared.component.ts",
							"line": 23,
							"character": 32
						}
					]
				},
				{
					"id": 1741,
					"name": "NbCardFrontComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within the `<nb-flip-card>` and `<nb-reveal-card>` components.",
						"text": "Use it as a container for the front card.\n"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-card-front',\n  template: '<ng-content select=\"nb-card\"></ng-content>',\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/card/shared/shared.component.ts",
							"line": 12,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1742,
						1741
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/card/shared/shared.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4086,
			"name": "\"theme/components/cdk/a11y/a11y.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/a11y/a11y.module.ts",
			"children": [
				{
					"id": 4087,
					"name": "NbA11yModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  providers: [\n    NbFocusTrapFactoryService,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/a11y/a11y.module.ts",
							"line": 11,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4087
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/a11y/a11y.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4036,
			"name": "\"theme/components/cdk/a11y/focus-trap\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/a11y/focus-trap.ts",
			"children": [
				{
					"id": 4037,
					"name": "NbFocusTrap",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Overrides angular cdk focus trap to keep restore functionality inside trap."
					},
					"children": [
						{
							"id": 4039,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4044,
									"name": "new NbFocusTrap",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4045,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 4046,
											"name": "checker",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "InteractivityChecker"
											}
										},
										{
											"id": 4047,
											"name": "ngZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NgZone"
											}
										},
										{
											"id": 4048,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 4049,
											"name": "deferAnchors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbFocusTrap",
										"id": 4037
									},
									"overwrites": {
										"type": "reference",
										"name": "FocusTrap.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 11,
									"character": 50
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FocusTrap.__constructor"
							}
						},
						{
							"id": 4041,
							"name": "checker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 15,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "InteractivityChecker"
							}
						},
						{
							"id": 4043,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 17,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							}
						},
						{
							"id": 4040,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 4056,
							"name": "enabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the focus trap is active."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.enabled"
							}
						},
						{
							"id": 4042,
							"name": "ngZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 16,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NgZone"
							}
						},
						{
							"id": 4038,
							"name": "previouslyFocusedElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 11,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 4059,
							"name": "attachAnchors",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4060,
									"name": "attachAnchors",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts the anchors into the DOM. This is usually done automatically\nin the constructor, but can be deferred for cases like directives with `*ngIf`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.attachAnchors"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 27,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.attachAnchors"
							}
						},
						{
							"id": 4052,
							"name": "blurPreviouslyFocusedElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4053,
									"name": "blurPreviouslyFocusedElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 28,
									"character": 30
								}
							]
						},
						{
							"id": 4057,
							"name": "destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4058,
									"name": "destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Destroys the focus trap by cleaning up the anchors."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.destroy"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 22,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.destroy"
							}
						},
						{
							"id": 4069,
							"name": "focusFirstTabbableElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4070,
									"name": "focusFirstTabbableElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Focuses the first tabbable element within the focus trap region.",
										"returns": "Whether focus was moved successfuly.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.focusFirstTabbableElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 64,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.focusFirstTabbableElement"
							}
						},
						{
							"id": 4063,
							"name": "focusFirstTabbableElementWhenReady",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4064,
									"name": "focusFirstTabbableElementWhenReady",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Waits for the zone to stabilize, then focuses\nthe first tabbable element within the focus trap region.",
										"returns": "Returns a promise that resolves with a boolean, depending\non whether focus was moved successfuly.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.focusFirstTabbableElementWhenReady"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 41,
									"character": 38
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.focusFirstTabbableElementWhenReady"
							}
						},
						{
							"id": 4067,
							"name": "focusInitialElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4068,
									"name": "focusInitialElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Focuses the element that should be focused when the focus trap is initialized.",
										"returns": "Whether focus was moved successfuly.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.focusInitialElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 59,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.focusInitialElement"
							}
						},
						{
							"id": 4061,
							"name": "focusInitialElementWhenReady",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4062,
									"name": "focusInitialElementWhenReady",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Waits for the zone to stabilize, then either focuses the first element that the\nuser specified, or the first tabbable element.",
										"returns": "Returns a promise that resolves with a boolean, depending\non whether focus was moved successfuly.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.focusInitialElementWhenReady"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 34,
									"character": 32
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.focusInitialElementWhenReady"
							}
						},
						{
							"id": 4071,
							"name": "focusLastTabbableElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4072,
									"name": "focusLastTabbableElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Focuses the last tabbable element within the focus trap region.",
										"returns": "Whether focus was moved successfuly.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.focusLastTabbableElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 69,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.focusLastTabbableElement"
							}
						},
						{
							"id": 4065,
							"name": "focusLastTabbableElementWhenReady",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4066,
									"name": "focusLastTabbableElementWhenReady",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Waits for the zone to stabilize, then focuses\nthe last tabbable element within the focus trap region.",
										"returns": "Returns a promise that resolves with a boolean, depending\non whether focus was moved successfuly.\n"
									},
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FocusTrap.focusLastTabbableElementWhenReady"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/a11y/typings/focus-trap/focus-trap.d.ts",
									"line": 48,
									"character": 37
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FocusTrap.focusLastTabbableElementWhenReady"
							}
						},
						{
							"id": 4050,
							"name": "restoreFocus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4051,
									"name": "restoreFocus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 23,
									"character": 14
								}
							]
						},
						{
							"id": 4054,
							"name": "savePreviouslyFocusedElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4055,
									"name": "savePreviouslyFocusedElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 32,
									"character": 40
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4039
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4041,
								4043,
								4040,
								4056,
								4042,
								4038
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4059,
								4052,
								4057,
								4069,
								4063,
								4067,
								4061,
								4071,
								4065,
								4050,
								4054
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/a11y/focus-trap.ts",
							"line": 10,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FocusTrap"
						}
					]
				},
				{
					"id": 4073,
					"name": "NbFocusTrapFactoryService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 4074,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4078,
									"name": "new NbFocusTrapFactoryService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4079,
											"name": "checker",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "InteractivityChecker"
											}
										},
										{
											"id": 4080,
											"name": "ngZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NgZone"
											}
										},
										{
											"id": 4081,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbFocusTrapFactoryService",
										"id": 4073
									},
									"overwrites": {
										"type": "reference",
										"name": "FocusTrapFactory.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 38,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FocusTrapFactory.__constructor"
							}
						},
						{
							"id": 4075,
							"name": "checker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 40,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "InteractivityChecker"
							}
						},
						{
							"id": 4077,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 42,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4076,
							"name": "ngZone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 41,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NgZone"
							}
						},
						{
							"id": 4082,
							"name": "create",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4083,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4084,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 4085,
											"name": "deferCaptureElements",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbFocusTrap",
										"id": 4037
									},
									"overwrites": {
										"type": "reference",
										"name": "FocusTrapFactory.create"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/a11y/focus-trap.ts",
									"line": 46,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FocusTrapFactory.create"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4074
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4075,
								4077,
								4076
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4082
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/a11y/focus-trap.ts",
							"line": 38,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FocusTrapFactory"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4037,
						4073
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/a11y/focus-trap.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3856,
			"name": "\"theme/components/cdk/adapter/adapter.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/adapter/adapter.module.ts",
			"children": [
				{
					"id": 3857,
					"name": "NbCdkAdapterModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{}"
							}
						}
					],
					"children": [
						{
							"id": 3858,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3859,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/adapter.module.ts",
									"line": 12,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3858
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/adapter/adapter.module.ts",
							"line": 11,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3857
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/adapter/adapter.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3844,
			"name": "\"theme/components/cdk/adapter/block-scroll-strategy-adapter\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/adapter/block-scroll-strategy-adapter.ts",
			"children": [
				{
					"id": 3845,
					"name": "NbBlockScrollStrategyAdapter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3846,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3847,
									"name": "new NbBlockScrollStrategyAdapter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3848,
											"name": "ruler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbViewportRulerAdapter",
												"id": 3535
											}
										},
										{
											"id": 3849,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbBlockScrollStrategyAdapter",
										"id": 3845
									},
									"overwrites": {
										"type": "reference",
										"name": "BlockScrollStrategy.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/block-scroll-strategy-adapter.ts",
									"line": 7,
									"character": 71
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BlockScrollStrategy.__constructor"
							}
						},
						{
							"id": 3850,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3851,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches this scroll strategy to an overlay."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BlockScrollStrategy.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/scroll/block-scroll-strategy.d.ts",
									"line": 21,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BlockScrollStrategy.attach"
							}
						},
						{
							"id": 3854,
							"name": "disable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3855,
									"name": "disable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Unblocks page-level scroll while the attached overlay is open."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BlockScrollStrategy.disable"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/scroll/block-scroll-strategy.d.ts",
									"line": 25,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BlockScrollStrategy.disable"
							}
						},
						{
							"id": 3852,
							"name": "enable",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3853,
									"name": "enable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Blocks page-level scroll while the attached overlay is open."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BlockScrollStrategy.enable"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/scroll/block-scroll-strategy.d.ts",
									"line": 23,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BlockScrollStrategy.enable"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3846
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3850,
								3854,
								3852
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/adapter/block-scroll-strategy-adapter.ts",
							"line": 7,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BlockScrollStrategy"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ScrollStrategy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3845
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/adapter/block-scroll-strategy-adapter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2859,
			"name": "\"theme/components/cdk/adapter/overlay-container-adapter\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/adapter/overlay-container-adapter.ts",
			"children": [
				{
					"id": 2860,
					"name": "NbOverlayContainerAdapter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Provides nb-layout as overlay container.\nContainer has to be cleared when layout destroys.\nAnother way previous version of the container will be used\nbut it isn't inserted in DOM and exists in memory only.\nThis case important only if you switch between multiple layouts."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 2871,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2872,
									"name": "new NbOverlayContainerAdapter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2873,
											"name": "_document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlayContainerAdapter",
										"id": 2860
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayContainer.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 5,
									"character": 45
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer.__constructor"
							}
						},
						{
							"id": 2870,
							"name": "_containerElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 5,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer._containerElement"
							}
						},
						{
							"id": 2869,
							"name": "_document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 4,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer._document"
							}
						},
						{
							"id": 2861,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/overlay-container-adapter.ts",
									"line": 15,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 2867,
							"name": "_createContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 2868,
									"name": "_createContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "OverlayContainer._createContainer"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/overlay-container-adapter.ts",
									"line": 26,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "OverlayContainer._createContainer"
							}
						},
						{
							"id": 2865,
							"name": "clearContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2866,
									"name": "clearContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/overlay-container-adapter.ts",
									"line": 21,
									"character": 16
								}
							]
						},
						{
							"id": 2876,
							"name": "getContainerElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2877,
									"name": "getContainerElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This method returns the overlay container element. It will lazily\ncreate the element the first time  it is called to facilitate using\nthe container in non-browser environments.",
										"returns": "the container element\n"
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayContainer.getContainerElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 14,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer.getContainerElement"
							}
						},
						{
							"id": 2874,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2875,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayContainer.ngOnDestroy"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 7,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer.ngOnDestroy"
							}
						},
						{
							"id": 2862,
							"name": "setContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2863,
									"name": "setContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2864,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/overlay-container-adapter.ts",
									"line": 17,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2871
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2870,
								2869,
								2861
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2867,
								2865,
								2876,
								2874,
								2862
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/adapter/overlay-container-adapter.ts",
							"line": 14,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbOverlayContainer",
							"id": 2772
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2860
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/adapter/overlay-container-adapter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3816,
			"name": "\"theme/components/cdk/adapter/scroll-dispatcher-adapter\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/adapter/scroll-dispatcher-adapter.ts",
			"children": [
				{
					"id": 3817,
					"name": "NbScrollDispatcherAdapter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3818,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3820,
									"name": "new NbScrollDispatcherAdapter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3821,
											"name": "ngZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NgZone"
											}
										},
										{
											"id": 3822,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPlatform",
												"id": 2703
											}
										},
										{
											"id": 3823,
											"name": "scrollService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutScrollService",
												"id": 1603
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbScrollDispatcherAdapter",
										"id": 3817
									},
									"overwrites": {
										"type": "reference",
										"name": "ScrollDispatcher.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/scroll-dispatcher-adapter.ts",
									"line": 9,
									"character": 65
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ScrollDispatcher.__constructor"
							}
						},
						{
							"id": 3827,
							"name": "_globalSubscription",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Keeps track of the global `scroll` and `resize` subscriptions."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/scroll-dispatcher.d.ts",
									"line": 25,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Subscription"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ScrollDispatcher._globalSubscription"
							}
						},
						{
							"id": 3828,
							"name": "scrollContainers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Map of all the scrollable references that are registered with the service and their\nscroll event subscriptions."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/scroll-dispatcher.d.ts",
									"line": 32,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "reference",
										"name": "CdkScrollable"
									},
									{
										"type": "reference",
										"name": "Subscription"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ScrollDispatcher.scrollContainers"
							}
						},
						{
							"id": 3819,
							"name": "scrollService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/scroll-dispatcher-adapter.ts",
									"line": 10,
									"character": 75
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutScrollService",
								"id": 1603
							}
						},
						{
							"id": 3837,
							"name": "ancestorScrolled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3838,
									"name": "ancestorScrolled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an observable that emits whenever any of the\nscrollable ancestors of an element are scrolled."
									},
									"parameters": [
										{
											"id": 3839,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Element whose ancestors to listen for."
											},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 3840,
											"name": "auditTimeInMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Time to throttle the scroll events.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CdkScrollable"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ScrollDispatcher.ancestorScrolled"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/scroll-dispatcher.d.ts",
									"line": 62,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ScrollDispatcher.ancestorScrolled"
							}
						},
						{
							"id": 3832,
							"name": "deregister",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3833,
									"name": "deregister",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deregisters a Scrollable reference and unsubscribes from its scroll event observable."
									},
									"parameters": [
										{
											"id": 3834,
											"name": "scrollable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Scrollable instance to be deregistered.\n"
											},
											"type": {
												"type": "reference",
												"name": "CdkScrollable"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ScrollDispatcher.deregister"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/scroll-dispatcher.d.ts",
									"line": 43,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ScrollDispatcher.deregister"
							}
						},
						{
							"id": 3841,
							"name": "getAncestorScrollContainers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3842,
									"name": "getAncestorScrollContainers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all registered Scrollables that contain the provided element."
									},
									"parameters": [
										{
											"id": 3843,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "CdkScrollable"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ScrollDispatcher.getAncestorScrollContainers"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/scroll-dispatcher.d.ts",
									"line": 64,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ScrollDispatcher.getAncestorScrollContainers"
							}
						},
						{
							"id": 3835,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3836,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ScrollDispatcher.ngOnDestroy"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/scroll-dispatcher.d.ts",
									"line": 55,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ScrollDispatcher.ngOnDestroy"
							}
						},
						{
							"id": 3829,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3830,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Registers a scrollable instance with the service and listens for its scrolled events. When the\nscrollable is scrolled, the service emits the event to its scrolled observable."
									},
									"parameters": [
										{
											"id": 3831,
											"name": "scrollable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Scrollable instance to be registered.\n"
											},
											"type": {
												"type": "reference",
												"name": "CdkScrollable"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ScrollDispatcher.register"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/scroll-dispatcher.d.ts",
									"line": 38,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ScrollDispatcher.register"
							}
						},
						{
							"id": 3824,
							"name": "scrolled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3825,
									"name": "scrolled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3826,
											"name": "auditTimeInMs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "CdkScrollable"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "ScrollDispatcher.scrolled"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/scroll-dispatcher-adapter.ts",
									"line": 14,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ScrollDispatcher.scrolled"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3818
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3827,
								3828,
								3819
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3837,
								3832,
								3841,
								3835,
								3829,
								3824
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/adapter/scroll-dispatcher-adapter.ts",
							"line": 9,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ScrollDispatcher"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3817
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/adapter/scroll-dispatcher-adapter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3534,
			"name": "\"theme/components/cdk/adapter/viewport-ruler-adapter\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/adapter/viewport-ruler-adapter.ts",
			"children": [
				{
					"id": 3535,
					"name": "NbViewportRulerAdapter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3536,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3539,
									"name": "new NbViewportRulerAdapter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3540,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPlatform",
												"id": 2703
											}
										},
										{
											"id": 3541,
											"name": "ngZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NgZone"
											}
										},
										{
											"id": 3542,
											"name": "ruler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutRulerService",
												"id": 1628
											}
										},
										{
											"id": 3543,
											"name": "scroll",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutScrollService",
												"id": 1603
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbViewportRulerAdapter",
										"id": 3535
									},
									"overwrites": {
										"type": "reference",
										"name": "ViewportRuler.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
									"line": 11,
									"character": 59
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ViewportRuler.__constructor"
							}
						},
						{
							"id": 3537,
							"name": "ruler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
									"line": 13,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutRulerService",
								"id": 1628
							}
						},
						{
							"id": 3538,
							"name": "scroll",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
									"line": 14,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutScrollService",
								"id": 1603
							}
						},
						{
							"id": 3558,
							"name": "change",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3559,
									"name": "change",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a stream that emits whenever the size of the viewport changes."
									},
									"parameters": [
										{
											"id": 3560,
											"name": "throttleTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Time in milliseconds to throttle the stream.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Event"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ViewportRuler.change"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/viewport-ruler.d.ts",
									"line": 43,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ViewportRuler.change"
							}
						},
						{
							"id": 3556,
							"name": "getViewportRect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3557,
									"name": "getViewportRect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a ClientRect for the viewport's bounds."
									},
									"type": {
										"type": "reference",
										"name": "ClientRect"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ViewportRuler.getViewportRect"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/viewport-ruler.d.ts",
									"line": 33,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ViewportRuler.getViewportRect"
							}
						},
						{
							"id": 3549,
							"name": "getViewportScrollPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3550,
									"name": "getViewportScrollPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3551,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3552,
													"name": "left",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
															"line": 30,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3553,
													"name": "top",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
															"line": 30,
															"character": 50
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3552,
														3553
													]
												}
											],
											"sources": [
												{
													"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
													"line": 30,
													"character": 30
												}
											]
										}
									},
									"overwrites": {
										"type": "reference",
										"name": "ViewportRuler.getViewportScrollPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
									"line": 30,
									"character": 27
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ViewportRuler.getViewportScrollPosition"
							}
						},
						{
							"id": 3544,
							"name": "getViewportSize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3545,
									"name": "getViewportSize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3546,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3548,
															"name": "height",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
																	"line": 18,
																	"character": 53
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 3547,
															"name": "width",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
																	"line": 18,
																	"character": 37
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3548,
																3547
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
															"line": 18,
															"character": 30
														}
													]
												}
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "ViewportRuler.getViewportSize"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
									"line": 18,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ViewportRuler.getViewportSize"
							}
						},
						{
							"id": 3554,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3555,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ViewportRuler.ngOnDestroy"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/scrolling/typings/viewport-ruler.d.ts",
									"line": 26,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ViewportRuler.ngOnDestroy"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3536
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3537,
								3538
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3558,
								3556,
								3549,
								3544,
								3554
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
							"line": 11,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ViewportRuler"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3535
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/adapter/viewport-ruler-adapter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4088,
			"name": "\"theme/components/cdk/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/index.ts",
			"sources": [
				{
					"fileName": "theme/components/cdk/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4035,
			"name": "\"theme/components/cdk/overlay/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/index.ts",
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2623,
			"name": "\"theme/components/cdk/overlay/mapping\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/mapping.ts",
			"children": [
				{
					"id": 2844,
					"name": "NbCdkMappingModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This module helps us to keep all angular/cdk deps inside our cdk module via providing aliases.\nApproach will help us move cdk in separate npm package and refactor nebular/theme code."
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [...CDK_MODULES],\n  exports: [\n    ...CDK_MODULES,\n    NbPortalDirective,\n    NbPortalOutletDirective,\n  ],\n  declarations: [NbPortalDirective, NbPortalOutletDirective],\n  providers: [...CDK_PROVIDERS],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 101,
							"character": 31
						}
					]
				},
				{
					"id": 2732,
					"name": "NbComponentPortal",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 2733,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2737,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2738,
									"name": "new NbComponentPortal",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2739,
											"name": "component",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentType",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 2740,
											"name": "viewContainerRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ViewContainerRef"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 2741,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Injector"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbComponentPortal",
										"id": 2732
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentPortal.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 44,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentPortal.__constructor"
							}
						},
						{
							"id": 2734,
							"name": "component",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The type of the component that will be instantiated for attachment."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentType",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentPortal.component"
							}
						},
						{
							"id": 2736,
							"name": "injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "[Optional] Injector used for the instantiation of the component."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Injector"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentPortal.injector"
							}
						},
						{
							"id": 2747,
							"name": "isAttached",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this portal is attached to a host."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 24,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.isAttached"
							}
						},
						{
							"id": 2735,
							"name": "viewContainerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "[Optional] Where the attached component should live in Angular's *logical* component tree.\nThis is different from where the component *renders*, which is determined by the PortalOutlet.\nThe origin is necessary when the host is outside of the Angular application context."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 42,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ViewContainerRef"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentPortal.viewContainerRef"
							}
						},
						{
							"id": 2742,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2743,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attach this portal to a host."
									},
									"parameters": [
										{
											"id": 2744,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PortalOutlet"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Portal.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 20,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.attach"
							}
						},
						{
							"id": 2745,
							"name": "detach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2746,
									"name": "detach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Detach this portal from its host"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Portal.detach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 22,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.detach"
							}
						},
						{
							"id": 2748,
							"name": "setAttachedHost",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2749,
									"name": "setAttachedHost",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the PortalOutlet reference without performing `attach()`. This is used directly by\nthe PortalOutlet when it is performing an `attach()` or `detach()`."
									},
									"parameters": [
										{
											"id": 2750,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "PortalOutlet"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Portal.setAttachedHost"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 29,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.setAttachedHost"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2737
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2734,
								2736,
								2747,
								2735
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2742,
								2745,
								2748
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 50,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ComponentPortal",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					]
				},
				{
					"id": 2784,
					"name": "NbFlexibleConnectedPositionStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2788,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2789,
									"name": "new NbFlexibleConnectedPositionStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2790,
											"name": "_connectedTo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 2791,
											"name": "_viewportRuler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ViewportRuler"
											}
										},
										{
											"id": 2792,
											"name": "_document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 2793,
											"name": "_platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Platform"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbFlexibleConnectedPositionStrategy",
										"id": 2784
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 79,
									"character": 49
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.__constructor"
							}
						},
						{
							"id": 2785,
							"name": "_preferredPositions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ordered list of preferred positions, from most to least desirable."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 54,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ConnectionPositionPair"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy._preferredPositions"
							}
						},
						{
							"id": 2786,
							"name": "positionChanges",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Observable sequence of position changes."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 77,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ConnectedOverlayPositionChange"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.positionChanges"
							}
						},
						{
							"id": 2787,
							"name": "positions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ordered list of preferred positions, from most to least desirable."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 79,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ConnectionPositionPair"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.positions"
							}
						},
						{
							"id": 2797,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2798,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates the position of the overlay element, using whichever preferred position relative\nto the origin best fits on-screen.",
										"text": "The selection of a position goes as follows:\n - If any positions fit completely within the viewport as-is,\n     choose the first position that does so.\n - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     choose the position with the greatest available size modified by the positions' weight.\n - If pushing is enabled, take the position that went off-screen the least and push it\n     on-screen.\n - If none of the previous criteria were met, use the position that goes off-screen the least.",
										"tags": [
											{
												"tag": "docs-private",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.apply"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 97,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.apply"
							}
						},
						{
							"id": 2794,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2795,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches this position strategy to an overlay."
									},
									"parameters": [
										{
											"id": 2796,
											"name": "overlayRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OverlayRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 82,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.attach"
							}
						},
						{
							"id": 2799,
							"name": "detach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2800,
									"name": "detach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.detach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 98,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.detach"
							}
						},
						{
							"id": 2801,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2802,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cleanup after the element gets destroyed."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.dispose"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 100,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.dispose"
							}
						},
						{
							"id": 2803,
							"name": "reapplyLastPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2804,
									"name": "reapplyLastPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This re-aligns the overlay element with the trigger in its last calculated position,\neven if a position higher in the \"preferred positions\" list would now fit. This\nallows one to re-align the panel without changing the orientation of the panel."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.reapplyLastPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 106,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.reapplyLastPosition"
							}
						},
						{
							"id": 2826,
							"name": "setOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2827,
									"name": "setOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the origin element, relative to which to position the overlay."
									},
									"parameters": [
										{
											"id": 2828,
											"name": "origin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Reference to the new origin element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.setOrigin"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 140,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.setOrigin"
							}
						},
						{
							"id": 2829,
							"name": "withDefaultOffsetX",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2830,
									"name": "withDefaultOffsetX",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the default offset for the overlay's connection point on the x-axis."
									},
									"parameters": [
										{
											"id": 2831,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New offset in the X axis.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetX"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 145,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetX"
							}
						},
						{
							"id": 2832,
							"name": "withDefaultOffsetY",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2833,
									"name": "withDefaultOffsetY",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the default offset for the overlay's connection point on the y-axis."
									},
									"parameters": [
										{
											"id": 2834,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New offset in the Y axis.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetY"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 150,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetY"
							}
						},
						{
							"id": 2814,
							"name": "withFlexibleDimensions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2815,
									"name": "withFlexibleDimensions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay's width and height can be constrained to fit within the viewport."
									},
									"parameters": [
										{
											"id": 2816,
											"name": "flexibleDimensions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withFlexibleDimensions"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 124,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withFlexibleDimensions"
							}
						},
						{
							"id": 2817,
							"name": "withGrowAfterOpen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2818,
									"name": "withGrowAfterOpen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay can grow after the initial open via flexible width/height."
									},
									"parameters": [
										{
											"id": 2819,
											"name": "growAfterOpen",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withGrowAfterOpen"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 126,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withGrowAfterOpen"
							}
						},
						{
							"id": 2823,
							"name": "withLockedPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2824,
									"name": "withLockedPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay's position should be locked in after it is positioned\ninitially. When an overlay is locked in, it won't attempt to reposition itself\nwhen the position is re-applied (e.g. when the user scrolls away)."
									},
									"parameters": [
										{
											"id": 2825,
											"name": "isLocked",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Whether the overlay should locked in.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withLockedPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 135,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withLockedPosition"
							}
						},
						{
							"id": 2808,
							"name": "withPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2809,
									"name": "withPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a new preferred fallback position."
									},
									"parameters": [
										{
											"id": 2810,
											"name": "positions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "List of positions options for this overlay.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ConnectedPosition"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withPositions"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 117,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withPositions"
							}
						},
						{
							"id": 2820,
							"name": "withPush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2821,
									"name": "withPush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay can be pushed on-screen if none of the provided positions fit."
									},
									"parameters": [
										{
											"id": 2822,
											"name": "canPush",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withPush"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 128,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withPush"
							}
						},
						{
							"id": 2805,
							"name": "withScrollableContainers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2806,
									"name": "withScrollableContainers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the list of Scrollable containers that host the origin element so that\non reposition we can evaluate if it or the overlay has been clipped or outside view. Every\nScrollable must be an ancestor element of the strategy's origin element."
									},
									"parameters": [
										{
											"id": 2807,
											"name": "scrollables",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "CdkScrollable"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withScrollableContainers"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 112,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withScrollableContainers"
							}
						},
						{
							"id": 2811,
							"name": "withViewportMargin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2812,
									"name": "withViewportMargin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a minimum distance the ovelray may be positioned to the edge of the viewport."
									},
									"parameters": [
										{
											"id": 2813,
											"name": "margin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Required margin between the overlay and the viewport edge in pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withViewportMargin"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 122,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withViewportMargin"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2788
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2785,
								2786,
								2787
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2797,
								2794,
								2799,
								2801,
								2803,
								2826,
								2829,
								2832,
								2814,
								2817,
								2823,
								2808,
								2820,
								2805,
								2811
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 62,
							"character": 48
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "FlexibleConnectedPositionStrategy"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbAdjustableConnectedPositionStrategy",
							"id": 3616
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "PositionStrategy"
						}
					]
				},
				{
					"id": 2685,
					"name": "NbOverlay",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 2687,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2688,
									"name": "new NbOverlay",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2689,
											"name": "scrollStrategies",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScrollStrategyOptions"
											}
										},
										{
											"id": 2690,
											"name": "_overlayContainer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OverlayContainer"
											}
										},
										{
											"id": 2691,
											"name": "_componentFactoryResolver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentFactoryResolver"
											}
										},
										{
											"id": 2692,
											"name": "_positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OverlayPositionBuilder"
											}
										},
										{
											"id": 2693,
											"name": "_keyboardDispatcher",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OverlayKeyboardDispatcher"
											}
										},
										{
											"id": 2694,
											"name": "_injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 2695,
											"name": "_ngZone",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NgZone"
											}
										},
										{
											"id": 2696,
											"name": "_document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2697,
											"name": "_directionality",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Directionality"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlay",
										"id": 2685
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Overlay.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay.d.ts",
									"line": 35,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Overlay.__constructor"
							}
						},
						{
							"id": 2686,
							"name": "scrollStrategies",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Scrolling strategies that can be used when creating an overlay."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay.d.ts",
									"line": 26,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "ScrollStrategyOptions"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Overlay.scrollStrategies"
							}
						},
						{
							"id": 2698,
							"name": "create",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2699,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates an overlay.",
										"returns": "Reference to the created overlay.\n"
									},
									"parameters": [
										{
											"id": 2700,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Configuration applied to the overlay."
											},
											"type": {
												"type": "reference",
												"name": "OverlayConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "OverlayRef"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Overlay.create"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay.d.ts",
									"line": 44,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Overlay.create"
							}
						},
						{
							"id": 2701,
							"name": "position",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2702,
									"name": "position",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets a position builder that can be used, via fluent API,\nto construct and configure a position strategy.",
										"returns": "An overlay position builder.\n"
									},
									"type": {
										"type": "reference",
										"name": "OverlayPositionBuilder"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Overlay.position"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay.d.ts",
									"line": 50,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Overlay.position"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2687
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2686
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2698,
								2701
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 39,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Overlay"
						}
					]
				},
				{
					"id": 2772,
					"name": "NbOverlayContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2775,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2776,
									"name": "new NbOverlayContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2777,
											"name": "_document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlayContainer",
										"id": 2772
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayContainer.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 5,
									"character": 45
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer.__constructor"
							}
						},
						{
							"id": 2774,
							"name": "_containerElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 5,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer._containerElement"
							}
						},
						{
							"id": 2773,
							"name": "_document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 4,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer._document"
							}
						},
						{
							"id": 2782,
							"name": "_createContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 2783,
									"name": "_createContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Create the overlay container element, which is simply a div\nwith the 'cdk-overlay-container' class on the document body."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayContainer._createContainer"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 19,
									"character": 30
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer._createContainer"
							}
						},
						{
							"id": 2780,
							"name": "getContainerElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2781,
									"name": "getContainerElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This method returns the overlay container element. It will lazily\ncreate the element the first time  it is called to facilitate using\nthe container in non-browser environments.",
										"returns": "the container element\n"
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayContainer.getContainerElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 14,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer.getContainerElement"
							}
						},
						{
							"id": 2778,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2779,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayContainer.ngOnDestroy"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts",
									"line": 7,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayContainer.ngOnDestroy"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2775
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2774,
								2773
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2782,
								2780,
								2778
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 59,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "OverlayContainer"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbOverlayContainerAdapter",
							"id": 2860
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 2716,
					"name": "NbOverlayPositionBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 2717,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2718,
									"name": "new NbOverlayPositionBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2719,
											"name": "_viewportRuler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ViewportRuler"
											}
										},
										{
											"id": 2720,
											"name": "_document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2721,
											"name": "_platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Platform"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlayPositionBuilder",
										"id": 2716
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayPositionBuilder.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/overlay-position-builder.d.ts",
									"line": 19,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayPositionBuilder.__constructor"
							}
						},
						{
							"id": 2724,
							"name": "connectedTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2725,
									"name": "connectedTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a relative position strategy.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "Use `flexibleConnectedTo` instead."
											},
											{
												"tag": "deletion-target",
												"text": "7.0.0\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2726,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 2727,
											"name": "originPos",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "OriginConnectionPosition"
											}
										},
										{
											"id": 2728,
											"name": "overlayPos",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "OverlayConnectionPosition"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ConnectedPositionStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayPositionBuilder.connectedTo"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/overlay-position-builder.d.ts",
									"line": 33,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayPositionBuilder.connectedTo"
							}
						},
						{
							"id": 2729,
							"name": "flexibleConnectedTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2730,
									"name": "flexibleConnectedTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a flexible position strategy."
									},
									"parameters": [
										{
											"id": 2731,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayPositionBuilder.flexibleConnectedTo"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/overlay-position-builder.d.ts",
									"line": 38,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayPositionBuilder.flexibleConnectedTo"
							}
						},
						{
							"id": 2722,
							"name": "global",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2723,
									"name": "global",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a global position strategy."
									},
									"type": {
										"type": "reference",
										"name": "GlobalPositionStrategy"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "OverlayPositionBuilder.global"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/overlay-position-builder.d.ts",
									"line": 24,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "OverlayPositionBuilder.global"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2717
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2724,
								2729,
								2722
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 47,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "OverlayPositionBuilder"
						}
					]
				},
				{
					"id": 2703,
					"name": "NbPlatform",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 2713,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deletion-target",
										"text": "v7.0.0 remove optional decorator\n"
									}
								]
							},
							"signatures": [
								{
									"id": 2714,
									"name": "new NbPlatform",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "deletion-target",
												"text": "v7.0.0 remove optional decorator\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2715,
											"name": "_platformId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Object"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPlatform",
										"id": 2703
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Platform.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 29,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.__constructor"
							}
						},
						{
							"id": 2711,
							"name": "ANDROID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current platform is Android."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 27,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.ANDROID"
							}
						},
						{
							"id": 2707,
							"name": "BLINK",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current rendering engine is Blink."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 19,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.BLINK"
							}
						},
						{
							"id": 2705,
							"name": "EDGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current browser is Microsoft Edge."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 15,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.EDGE"
							}
						},
						{
							"id": 2710,
							"name": "FIREFOX",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current browser is Firefox."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 25,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.FIREFOX"
							}
						},
						{
							"id": 2709,
							"name": "IOS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current platform is Apple iOS."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 23,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.IOS"
							}
						},
						{
							"id": 2712,
							"name": "SAFARI",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current browser is Safari."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 29,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.SAFARI"
							}
						},
						{
							"id": 2706,
							"name": "TRIDENT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current rendering engine is Microsoft Trident."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 17,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.TRIDENT"
							}
						},
						{
							"id": 2708,
							"name": "WEBKIT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the current rendering engine is WebKit."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.WEBKIT"
							}
						},
						{
							"id": 2704,
							"name": "isBrowser",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the Angular application is being rendered in the browser.\nWe want to use the Angular platform check because if the Document is shimmed\nwithout the navigator, the following checks will fail. This is preferred because\nsometimes the Document may be shimmed without the user's knowledge or intention"
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/platform/typings/platform.d.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Platform.isBrowser"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2713
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2711,
								2707,
								2705,
								2710,
								2709,
								2712,
								2706,
								2708,
								2704
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 43,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Platform"
						}
					]
				},
				{
					"id": 2624,
					"name": "NbPortalDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{ selector: '[nbPortal]' }"
							}
						}
					],
					"typeParameter": [
						{
							"id": 2629,
							"name": "C",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2625,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2626,
									"name": "new NbPortalDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2627,
											"name": "templateRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TemplateRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 2628,
											"name": "viewContainerRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ViewContainerRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPortalDirective",
										"id": 2624
									},
									"overwrites": {
										"type": "reference",
										"name": "TemplatePortal.__constructor"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CdkPortal.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 14,
									"character": 55
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "TemplatePortal.__constructor"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortal.__constructor"
							}
						},
						{
							"id": 2632,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Contextual data to be passed in to the embedded view."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 56,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "C"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.context"
							}
						},
						{
							"id": 2640,
							"name": "isAttached",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this portal is attached to a host."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 24,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.isAttached"
							}
						},
						{
							"id": 2633,
							"name": "origin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 58,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.origin"
							}
						},
						{
							"id": 2630,
							"name": "templateRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The embedded template that will be used to instantiate an embedded View in the host."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 52,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "TemplateRef",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "C"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.templateRef"
							}
						},
						{
							"id": 2631,
							"name": "viewContainerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reference to the ViewContainer into which the template will be stamped out."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 54,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.viewContainerRef"
							}
						},
						{
							"id": 2634,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2635,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attach the the portal to the provided `PortalOutlet`.\nWhen a context is provided it will override the `context` property of the `TemplatePortal`\ninstance."
									},
									"parameters": [
										{
											"id": 2636,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PortalOutlet"
											}
										},
										{
											"id": 2637,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "C"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "C"
									},
									"overwrites": {
										"type": "reference",
										"name": "Portal.attach"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TemplatePortal.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 64,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Portal.attach"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.attach"
							}
						},
						{
							"id": 2638,
							"name": "detach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2639,
									"name": "detach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Portal.detach"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TemplatePortal.detach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 65,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Portal.detach"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.detach"
							}
						},
						{
							"id": 2641,
							"name": "setAttachedHost",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2642,
									"name": "setAttachedHost",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the PortalOutlet reference without performing `attach()`. This is used directly by\nthe PortalOutlet when it is performing an `attach()` or `detach()`."
									},
									"parameters": [
										{
											"id": 2643,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "PortalOutlet"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Portal.setAttachedHost"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 29,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.setAttachedHost"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2625
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2632,
								2640,
								2633,
								2630,
								2631
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2634,
								2638,
								2641
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 31,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CdkPortal"
						}
					]
				},
				{
					"id": 2835,
					"name": "NbPortalInjector",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2836,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2837,
									"name": "new NbPortalInjector",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2838,
											"name": "_parentInjector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										},
										{
											"id": 2839,
											"name": "_customTokens",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "WeakMap",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPortalInjector",
										"id": 2835
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "PortalInjector.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-injector.d.ts",
									"line": 16,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "PortalInjector.__constructor"
							}
						},
						{
							"id": 2840,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2841,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2842,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2843,
											"name": "notFoundValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "PortalInjector.get"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-injector.d.ts",
									"line": 18,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "PortalInjector.get"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2836
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2840
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 65,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "PortalInjector"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "Injector"
						}
					]
				},
				{
					"id": 2644,
					"name": "NbPortalOutletDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{ selector: '[nbPortalOutlet]' }"
							}
						}
					],
					"children": [
						{
							"id": 2645,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2646,
									"name": "new NbPortalOutletDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2647,
											"name": "_componentFactoryResolver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentFactoryResolver"
											}
										},
										{
											"id": 2648,
											"name": "_viewContainerRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ViewContainerRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPortalOutletDirective",
										"id": 2644
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CdkPortalOutlet.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 34,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.__constructor"
							}
						},
						{
							"id": 2664,
							"name": "_attachedPortal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "The portal currently attached to the host."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 84,
									"character": 29
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Portal",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePortalOutlet._attachedPortal"
							}
						},
						{
							"id": 2650,
							"name": "attached",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 38,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "reference",
										"name": "CdkPortalOutletAttachedRef"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.attached"
							}
						},
						{
							"id": 2651,
							"name": "attachedRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Component or view reference that is attached to the portal."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 40,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "CdkPortalOutletAttachedRef"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.attachedRef"
							}
						},
						{
							"id": 2649,
							"name": "portal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Portal associated with the Portal outlet."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 37,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Portal",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.portal"
							}
						},
						{
							"id": 2667,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2668,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2669,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2670,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentPortal",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BasePortalOutlet.attach"
									}
								},
								{
									"id": 2671,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2672,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2673,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TemplatePortal",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EmbeddedViewRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BasePortalOutlet.attach"
									}
								},
								{
									"id": 2674,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2675,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BasePortalOutlet.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 91,
									"character": 10
								},
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 92,
									"character": 10
								},
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 93,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePortalOutlet.attach"
							}
						},
						{
							"id": 2656,
							"name": "attachComponentPortal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2657,
									"name": "attachComponentPortal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.",
										"returns": "Reference to the created component.\n"
									},
									"typeParameter": [
										{
											"id": 2658,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2659,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Portal to be attached to the portal outlet."
											},
											"type": {
												"type": "reference",
												"name": "ComponentPortal",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "BasePortalOutlet.attachComponentPortal"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CdkPortalOutlet.attachComponentPortal"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 49,
									"character": 25
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BasePortalOutlet.attachComponentPortal"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.attachComponentPortal"
							}
						},
						{
							"id": 2660,
							"name": "attachTemplatePortal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2661,
									"name": "attachTemplatePortal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attach the given TemplatePortal to this PortlHost as an embedded View.",
										"returns": "Reference to the created embedded view.\n"
									},
									"typeParameter": [
										{
											"id": 2662,
											"name": "C",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2663,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Portal to be attached."
											},
											"type": {
												"type": "reference",
												"name": "TemplatePortal",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "C"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EmbeddedViewRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "BasePortalOutlet.attachTemplatePortal"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CdkPortalOutlet.attachTemplatePortal"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 55,
									"character": 24
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BasePortalOutlet.attachTemplatePortal"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.attachTemplatePortal"
							}
						},
						{
							"id": 2676,
							"name": "detach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2677,
									"name": "detach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Detaches a previously attached portal."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BasePortalOutlet.detach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 97,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePortalOutlet.detach"
							}
						},
						{
							"id": 2678,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2679,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Permanently dispose of this portal host."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BasePortalOutlet.dispose"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 99,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePortalOutlet.dispose"
							}
						},
						{
							"id": 2665,
							"name": "hasAttached",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2666,
									"name": "hasAttached",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Whether this host has an attached portal."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BasePortalOutlet.hasAttached"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 90,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePortalOutlet.hasAttached"
							}
						},
						{
							"id": 2654,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2655,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CdkPortalOutlet.ngOnDestroy"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 42,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.ngOnDestroy"
							}
						},
						{
							"id": 2652,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2653,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CdkPortalOutlet.ngOnInit"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal-directives.d.ts",
									"line": 41,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CdkPortalOutlet.ngOnInit"
							}
						},
						{
							"id": 2680,
							"name": "setDisposeFn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2681,
									"name": "setDisposeFn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "docs-private",
												"text": ""
											}
										]
									},
									"parameters": [
										{
											"id": 2682,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2683,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2684,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
															"line": 101,
															"character": 20
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BasePortalOutlet.setDisposeFn"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 101,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BasePortalOutlet.setDisposeFn"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2645
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2664,
								2650,
								2651,
								2649
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2667,
								2656,
								2660,
								2676,
								2678,
								2665,
								2654,
								2652,
								2680
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 35,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CdkPortalOutlet"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "PortalOutlet"
						},
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 2751,
					"name": "NbTemplatePortal",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 2752,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2753,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2754,
									"name": "new NbTemplatePortal",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2755,
											"name": "template",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TemplateRef",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 2756,
											"name": "viewContainerRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "ViewContainerRef"
											}
										},
										{
											"id": 2757,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTemplatePortal",
										"id": 2751
									},
									"overwrites": {
										"type": "reference",
										"name": "TemplatePortal.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/mapping.ts",
									"line": 53,
									"character": 66
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "TemplatePortal.__constructor"
							}
						},
						{
							"id": 2760,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Contextual data to be passed in to the embedded view."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 56,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.context"
							}
						},
						{
							"id": 2768,
							"name": "isAttached",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this portal is attached to a host."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 24,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.isAttached"
							}
						},
						{
							"id": 2761,
							"name": "origin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 58,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.origin"
							}
						},
						{
							"id": 2758,
							"name": "templateRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The embedded template that will be used to instantiate an embedded View in the host."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 52,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "TemplateRef",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.templateRef"
							}
						},
						{
							"id": 2759,
							"name": "viewContainerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reference to the ViewContainer into which the template will be stamped out."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 54,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.viewContainerRef"
							}
						},
						{
							"id": 2762,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2763,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attach the the portal to the provided `PortalOutlet`.\nWhen a context is provided it will override the `context` property of the `TemplatePortal`\ninstance."
									},
									"parameters": [
										{
											"id": 2764,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PortalOutlet"
											}
										},
										{
											"id": 2765,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									},
									"overwrites": {
										"type": "reference",
										"name": "Portal.attach"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TemplatePortal.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 64,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Portal.attach"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.attach"
							}
						},
						{
							"id": 2766,
							"name": "detach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2767,
									"name": "detach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Portal.detach"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "TemplatePortal.detach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 65,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Portal.detach"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "TemplatePortal.detach"
							}
						},
						{
							"id": 2769,
							"name": "setAttachedHost",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2770,
									"name": "setAttachedHost",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the PortalOutlet reference without performing `attach()`. This is used directly by\nthe PortalOutlet when it is performing an `attach()` or `detach()`."
									},
									"parameters": [
										{
											"id": 2771,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "PortalOutlet"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Portal.setAttachedHost"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/portal/typings/portal.d.ts",
									"line": 29,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Portal.setAttachedHost"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2753
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2760,
								2768,
								2761,
								2758,
								2759
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2762,
								2766,
								2769
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 53,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "TemplatePortal",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					]
				},
				{
					"id": 2848,
					"name": "NbComponentType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 2849,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 70,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "ComponentType",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						]
					}
				},
				{
					"id": 2852,
					"name": "NbConnectedOverlayPositionChange",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 73,
							"character": 44
						}
					],
					"type": {
						"type": "reference",
						"name": "ConnectedOverlayPositionChange"
					}
				},
				{
					"id": 2851,
					"name": "NbConnectedPosition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 72,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "ConnectedPosition"
					}
				},
				{
					"id": 2853,
					"name": "NbConnectionPositionPair",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 74,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"name": "ConnectionPositionPair"
					}
				},
				{
					"id": 2854,
					"name": "NbOverlayConfig",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 75,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "OverlayConfig"
					}
				},
				{
					"id": 2847,
					"name": "NbOverlayRef",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 69,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "OverlayRef"
					}
				},
				{
					"id": 2845,
					"name": "NbPortal",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 2846,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 68,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Portal",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						]
					}
				},
				{
					"id": 2850,
					"name": "NbPositionStrategy",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 71,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "PositionStrategy"
					}
				},
				{
					"id": 2856,
					"name": "NbScrollStrategy",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 77,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "ScrollStrategy"
					}
				},
				{
					"id": 2855,
					"name": "NbScrollStrategyOptions",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 76,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"name": "ScrollStrategyOptions"
					}
				},
				{
					"id": 2857,
					"name": "CDK_MODULES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 79,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [OverlayModule, PortalModule]"
				},
				{
					"id": 2858,
					"name": "CDK_PROVIDERS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/mapping.ts",
							"line": 81,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbOverlay,\n  NbPlatform,\n  NbOverlayPositionBuilder,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2844,
						2732,
						2784,
						2685,
						2772,
						2716,
						2703,
						2624,
						2835,
						2644,
						2751
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2848,
						2852,
						2851,
						2853,
						2854,
						2847,
						2845,
						2850,
						2856,
						2855
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2857,
						2858
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/mapping.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3791,
			"name": "\"theme/components/cdk/overlay/overlay\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/overlay.ts",
			"children": [
				{
					"id": 3792,
					"name": "NbOverlayService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3793,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3796,
									"name": "new NbOverlayService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3797,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlay",
												"id": 2685
											}
										},
										{
											"id": 3798,
											"name": "layoutDirection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirectionService",
												"id": 1581
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlayService",
										"id": 3792
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay.ts",
									"line": 29,
									"character": 31
								}
							]
						},
						{
							"id": 3795,
							"name": "layoutDirection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay.ts",
									"line": 30,
									"character": 69
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirectionService",
								"id": 1581
							}
						},
						{
							"id": 3794,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay.ts",
									"line": 30,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlay",
								"id": 2685
							}
						},
						{
							"id": 3799,
							"name": "scrollStrategies",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 3800,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "NbScrollStrategyOptions",
									"id": 2855
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay.ts",
									"line": 33,
									"character": 22
								}
							]
						},
						{
							"id": 3801,
							"name": "create",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3802,
									"name": "create",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3803,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "NbOverlayConfig",
												"id": 2854
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlayRef",
										"id": 2847
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay.ts",
									"line": 37,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3793
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3795,
								3794
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3799
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3801
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay.ts",
							"line": 29,
							"character": 29
						}
					]
				},
				{
					"id": 3804,
					"name": "NbOverlayContent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay.ts",
							"line": 14,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "reference",
								"name": "TemplateRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3810,
					"name": "createContainer",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3811,
							"name": "createContainer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3812,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3813,
									"name": "ref",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbOverlayRef",
										"id": 2847
									}
								},
								{
									"id": 3814,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbComponentType",
										"id": 2848,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 3815,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay.ts",
							"line": 22,
							"character": 31
						}
					]
				},
				{
					"id": 3805,
					"name": "patch",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3806,
							"name": "patch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3807,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3808,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 3809,
									"name": "containerContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay.ts",
							"line": 16,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3792
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3804
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3810,
						3805
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/overlay.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3764,
			"name": "\"theme/components/cdk/overlay/overlay-container\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/overlay-container.ts",
			"children": [
				{
					"id": 3775,
					"name": "NbOverlayContainerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-overlay-container',\n  template: `\n    <ng-container *ngIf=\"isTemplate\">\n      <ng-container *ngTemplateOutlet=\"content; context: context\"></ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"isComponent\" [ngComponentOutlet]=\"content\"></ng-container>\n    <ng-container *ngIf=\"isPrimitive\">\n      <div class=\"primitive-overlay\">{{content}}</div>\n    </ng-container>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3778,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3780,
									"name": "new NbOverlayContainerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3781,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlayContainerComponent",
										"id": 3775
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 47,
									"character": 18
								}
							]
						},
						{
							"id": 3779,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 49,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 3776,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 44,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3777,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 3782,
							"name": "componentOutlet",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "NgComponentOutlet"
									}
								}
							],
							"setSignature": {
								"id": 3783,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 3784,
										"name": "el",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 53,
									"character": 21
								}
							]
						},
						{
							"id": 3787,
							"name": "isComponent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check that content is an angular component.",
								"returns": "boolean\n"
							},
							"getSignature": {
								"id": 3788,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Check that content is an angular component.",
									"returns": "boolean\n"
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 80,
									"character": 17
								}
							]
						},
						{
							"id": 3789,
							"name": "isPrimitive",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check that if content is not a TemplateRef or an angular component it means a primitive."
							},
							"getSignature": {
								"id": 3790,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Check that if content is not a TemplateRef or an angular component it means a primitive."
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 87,
									"character": 17
								}
							]
						},
						{
							"id": 3785,
							"name": "isTemplate",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check that content is a TemplateRef.",
								"returns": "boolean\n"
							},
							"getSignature": {
								"id": 3786,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Check that content is a TemplateRef.",
									"returns": "boolean\n"
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 71,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3778
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3779,
								3776,
								3777
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3782,
								3787,
								3789,
								3785
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-container.ts",
							"line": 42,
							"character": 40
						}
					]
				},
				{
					"id": 3765,
					"name": "NbPositionedContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 3766,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 7,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							}
						},
						{
							"id": 3771,
							"name": "bottom",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-bottom'"
									}
								}
							],
							"getSignature": {
								"id": 3772,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 20,
									"character": 12
								}
							]
						},
						{
							"id": 3773,
							"name": "left",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-left'"
									}
								}
							],
							"getSignature": {
								"id": 3774,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 25,
									"character": 10
								}
							]
						},
						{
							"id": 3769,
							"name": "right",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-right'"
									}
								}
							],
							"getSignature": {
								"id": 3770,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 15,
									"character": 11
								}
							]
						},
						{
							"id": 3767,
							"name": "top",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-top'"
									}
								}
							],
							"getSignature": {
								"id": 3768,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 10,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3766
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3771,
								3773,
								3769,
								3767
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-container.ts",
							"line": 6,
							"character": 43
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbPopoverComponent",
							"id": 4217
						},
						{
							"type": "reference",
							"name": "NbContextMenuComponent",
							"id": 4272
						},
						{
							"type": "reference",
							"name": "NbDatepickerContainerComponent",
							"id": 5881
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3775,
						3765
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/overlay-container.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3602,
			"name": "\"theme/components/cdk/overlay/overlay-position\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/overlay-position.ts",
			"children": [
				{
					"id": 3603,
					"name": "NbAdjustment",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3605,
							"name": "CLOCKWISE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 24,
									"character": 11
								}
							],
							"defaultValue": "\"clockwise\""
						},
						{
							"id": 3606,
							"name": "COUNTERCLOCKWISE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 25,
									"character": 18
								}
							],
							"defaultValue": "\"counterclockwise\""
						},
						{
							"id": 3608,
							"name": "HORIZONTAL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 27,
									"character": 12
								}
							],
							"defaultValue": "\"horizontal\""
						},
						{
							"id": 3604,
							"name": "NOOP",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 23,
									"character": 6
								}
							],
							"defaultValue": "\"noop\""
						},
						{
							"id": 3607,
							"name": "VERTICAL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 26,
									"character": 10
								}
							],
							"defaultValue": "\"vertical\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3605,
								3606,
								3608,
								3604,
								3607
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 22,
							"character": 24
						}
					]
				},
				{
					"id": 3609,
					"name": "NbPosition",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3611,
							"name": "BOTTOM",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 32,
									"character": 8
								}
							],
							"defaultValue": "\"bottom\""
						},
						{
							"id": 3615,
							"name": "END",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 36,
									"character": 5
								}
							],
							"defaultValue": "\"end\""
						},
						{
							"id": 3612,
							"name": "LEFT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 33,
									"character": 6
								}
							],
							"defaultValue": "\"left\""
						},
						{
							"id": 3613,
							"name": "RIGHT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 34,
									"character": 7
								}
							],
							"defaultValue": "\"right\""
						},
						{
							"id": 3614,
							"name": "START",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 35,
									"character": 7
								}
							],
							"defaultValue": "\"start\""
						},
						{
							"id": 3610,
							"name": "TOP",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 31,
									"character": 5
								}
							],
							"defaultValue": "\"top\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3611,
								3615,
								3612,
								3613,
								3614,
								3610
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 30,
							"character": 22
						}
					]
				},
				{
					"id": 3616,
					"name": "NbAdjustableConnectedPositionStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The main idea of the adjustable connected strategy is to provide predefined set of positions for your overlay.\nYou have to provide adjustment and appropriate strategy will be chosen in runtime."
					},
					"children": [
						{
							"id": 3652,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3653,
									"name": "new NbAdjustableConnectedPositionStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3654,
											"name": "_connectedTo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 3655,
											"name": "_viewportRuler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ViewportRuler"
											}
										},
										{
											"id": 3656,
											"name": "_document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 3657,
											"name": "_platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Platform"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 79,
									"character": 49
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.__constructor"
							}
						},
						{
							"id": 3619,
							"name": "_adjustment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 77,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustment",
								"id": 3603
							}
						},
						{
							"id": 3618,
							"name": "_offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 76,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "15"
						},
						{
							"id": 3617,
							"name": "_position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 75,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							}
						},
						{
							"id": 3649,
							"name": "_preferredPositions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ordered list of preferred positions, from most to least desirable."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 54,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ConnectionPositionPair"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy._preferredPositions"
							}
						},
						{
							"id": 3620,
							"name": "appliedPositions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 79,
									"character": 28
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3621,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3623,
												"name": "connectedPosition",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "theme/components/cdk/overlay/overlay-position.ts",
														"line": 79,
														"character": 66
													}
												],
												"type": {
													"type": "reference",
													"name": "NbConnectedPosition",
													"id": 2851
												}
											},
											{
												"id": 3622,
												"name": "key",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "theme/components/cdk/overlay/overlay-position.ts",
														"line": 79,
														"character": 35
													}
												],
												"type": {
													"type": "reference",
													"name": "NbPosition",
													"id": 3609
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													3623,
													3622
												]
											}
										],
										"sources": [
											{
												"fileName": "theme/components/cdk/overlay/overlay-position.ts",
												"line": 79,
												"character": 29
											}
										]
									}
								}
							}
						},
						{
							"id": 3624,
							"name": "positionChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 81,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbPosition",
										"id": 3609
									}
								]
							},
							"defaultValue": " this.positionChanges.pipe(\n    map((positionChange: NbConnectedOverlayPositionChange) => positionChange.connectionPair),\n    map((connectionPair: NbConnectionPositionPair) => {\n      return this.appliedPositions.find(({ connectedPosition }) => {\n        return comparePositions(connectedPosition, connectionPair);\n      }).key;\n    }),\n  )"
						},
						{
							"id": 3650,
							"name": "positionChanges",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Observable sequence of position changes."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 77,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ConnectedOverlayPositionChange"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.positionChanges"
							}
						},
						{
							"id": 3651,
							"name": "positions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ordered list of preferred positions, from most to least desirable."
							},
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 79,
									"character": 22
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ConnectionPositionPair"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.positions"
							}
						},
						{
							"id": 3633,
							"name": "adjustment",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3634,
									"name": "adjustment",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3635,
											"name": "adjustment",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbAdjustment",
												"id": 3603
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 109,
									"character": 12
								}
							]
						},
						{
							"id": 3628,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3629,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.apply"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 99,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.apply"
							}
						},
						{
							"id": 3639,
							"name": "applyPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3640,
									"name": "applyPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 119,
									"character": 26
								}
							]
						},
						{
							"id": 3625,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3626,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3627,
											"name": "overlayRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayRef",
												"id": 2847
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 90,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.attach"
							}
						},
						{
							"id": 3641,
							"name": "createPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3642,
									"name": "createPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbPosition",
											"id": 3609
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 125,
									"character": 27
								}
							]
						},
						{
							"id": 3658,
							"name": "detach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3659,
									"name": "detach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.detach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 98,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.detach"
							}
						},
						{
							"id": 3660,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3661,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Cleanup after the element gets destroyed."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.dispose"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 100,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.dispose"
							}
						},
						{
							"id": 3636,
							"name": "offset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3637,
									"name": "offset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3638,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 114,
									"character": 8
								}
							]
						},
						{
							"id": 3643,
							"name": "persistChosenPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3644,
									"name": "persistChosenPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3645,
											"name": "positions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbPosition",
													"id": 3609
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 140,
									"character": 34
								}
							]
						},
						{
							"id": 3630,
							"name": "position",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3631,
									"name": "position",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3632,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPosition",
												"id": 3609
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 104,
									"character": 10
								}
							]
						},
						{
							"id": 3662,
							"name": "reapplyLastPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3663,
									"name": "reapplyLastPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This re-aligns the overlay element with the trigger in its last calculated position,\neven if a position higher in the \"preferred positions\" list would now fit. This\nallows one to re-align the panel without changing the orientation of the panel."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.reapplyLastPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 106,
									"character": 23
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.reapplyLastPosition"
							}
						},
						{
							"id": 3646,
							"name": "reorderPreferredPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3647,
									"name": "reorderPreferredPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3648,
											"name": "positions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbPosition",
													"id": 3609
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbPosition",
											"id": 3609
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 147,
									"character": 37
								}
							]
						},
						{
							"id": 3685,
							"name": "setOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3686,
									"name": "setOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the origin element, relative to which to position the overlay."
									},
									"parameters": [
										{
											"id": 3687,
											"name": "origin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Reference to the new origin element.\n"
											},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.setOrigin"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 140,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.setOrigin"
							}
						},
						{
							"id": 3688,
							"name": "withDefaultOffsetX",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3689,
									"name": "withDefaultOffsetX",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the default offset for the overlay's connection point on the x-axis."
									},
									"parameters": [
										{
											"id": 3690,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New offset in the X axis.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetX"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 145,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetX"
							}
						},
						{
							"id": 3691,
							"name": "withDefaultOffsetY",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3692,
									"name": "withDefaultOffsetY",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the default offset for the overlay's connection point on the y-axis."
									},
									"parameters": [
										{
											"id": 3693,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New offset in the Y axis.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetY"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 150,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withDefaultOffsetY"
							}
						},
						{
							"id": 3673,
							"name": "withFlexibleDimensions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3674,
									"name": "withFlexibleDimensions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay's width and height can be constrained to fit within the viewport."
									},
									"parameters": [
										{
											"id": 3675,
											"name": "flexibleDimensions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withFlexibleDimensions"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 124,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withFlexibleDimensions"
							}
						},
						{
							"id": 3676,
							"name": "withGrowAfterOpen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3677,
									"name": "withGrowAfterOpen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay can grow after the initial open via flexible width/height."
									},
									"parameters": [
										{
											"id": 3678,
											"name": "growAfterOpen",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withGrowAfterOpen"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 126,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withGrowAfterOpen"
							}
						},
						{
							"id": 3682,
							"name": "withLockedPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3683,
									"name": "withLockedPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay's position should be locked in after it is positioned\ninitially. When an overlay is locked in, it won't attempt to reposition itself\nwhen the position is re-applied (e.g. when the user scrolls away)."
									},
									"parameters": [
										{
											"id": 3684,
											"name": "isLocked",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Whether the overlay should locked in.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withLockedPosition"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 135,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withLockedPosition"
							}
						},
						{
							"id": 3667,
							"name": "withPositions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3668,
									"name": "withPositions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adds a new preferred fallback position."
									},
									"parameters": [
										{
											"id": 3669,
											"name": "positions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "List of positions options for this overlay.\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ConnectedPosition"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withPositions"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 117,
									"character": 17
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withPositions"
							}
						},
						{
							"id": 3679,
							"name": "withPush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3680,
									"name": "withPush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets whether the overlay can be pushed on-screen if none of the provided positions fit."
									},
									"parameters": [
										{
											"id": 3681,
											"name": "canPush",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withPush"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 128,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withPush"
							}
						},
						{
							"id": 3664,
							"name": "withScrollableContainers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3665,
									"name": "withScrollableContainers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the list of Scrollable containers that host the origin element so that\non reposition we can evaluate if it or the overlay has been clipped or outside view. Every\nScrollable must be an ancestor element of the strategy's origin element."
									},
									"parameters": [
										{
											"id": 3666,
											"name": "scrollables",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "CdkScrollable"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withScrollableContainers"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 112,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withScrollableContainers"
							}
						},
						{
							"id": 3670,
							"name": "withViewportMargin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3671,
									"name": "withViewportMargin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets a minimum distance the ovelray may be positioned to the edge of the viewport."
									},
									"parameters": [
										{
											"id": 3672,
											"name": "margin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Required margin between the overlay and the viewport edge in pixels.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "FlexibleConnectedPositionStrategy.withViewportMargin"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/flexible-connected-position-strategy.d.ts",
									"line": 122,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "FlexibleConnectedPositionStrategy.withViewportMargin"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3652
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3619,
								3618,
								3617,
								3649,
								3620,
								3624,
								3650,
								3651
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3633,
								3628,
								3639,
								3625,
								3641,
								3658,
								3660,
								3636,
								3643,
								3630,
								3662,
								3646,
								3685,
								3688,
								3691,
								3673,
								3676,
								3682,
								3667,
								3679,
								3664,
								3670
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 72,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbFlexibleConnectedPositionStrategy",
							"id": 2784
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "PositionStrategy"
						},
						{
							"type": "reference",
							"name": "PositionStrategy"
						}
					]
				},
				{
					"id": 3694,
					"name": "NbGlobalPositionStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3725,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3726,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Apply the position to the element.",
										"tags": [
											{
												"tag": "docs-private",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.apply"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 81,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.apply"
							}
						},
						{
							"id": 3698,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3699,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3700,
											"name": "overlayRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "OverlayRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.attach"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 28,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.attach"
							}
						},
						{
							"id": 3707,
							"name": "bottom",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3708,
									"name": "bottom",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the bottom position of the overlay. Clears any previously set vertical position."
									},
									"parameters": [
										{
											"id": 3709,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "New bottom offset.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.bottom"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 43,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.bottom"
							}
						},
						{
							"id": 3719,
							"name": "centerHorizontally",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3720,
									"name": "centerHorizontally",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Centers the overlay horizontally with an optional offset.\nClears any previously set horizontal position."
									},
									"parameters": [
										{
											"id": 3721,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Overlay offset from the horizontal center.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.centerHorizontally"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 69,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.centerHorizontally"
							}
						},
						{
							"id": 3722,
							"name": "centerVertically",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3723,
									"name": "centerVertically",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Centers the overlay vertically with an optional offset.\nClears any previously set vertical position."
									},
									"parameters": [
										{
											"id": 3724,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Overlay offset from the vertical center.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.centerVertically"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 76,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.centerVertically"
							}
						},
						{
							"id": 3727,
							"name": "dispose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3728,
									"name": "dispose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Noop implemented as a part of the PositionStrategy interface.",
										"tags": [
											{
												"tag": "docs-private",
												"text": "\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.dispose"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 86,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.dispose"
							}
						},
						{
							"id": 3716,
							"name": "height",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3717,
									"name": "height",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the overlay height and clears any previously set height.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "Pass the `height` through the `OverlayConfig`."
											},
											{
												"tag": "deletion-target",
												"text": "7.0.0\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3718,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "New height for the overlay"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.height"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 62,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.height"
							}
						},
						{
							"id": 3704,
							"name": "left",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3705,
									"name": "left",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the left position of the overlay. Clears any previously set horizontal position."
									},
									"parameters": [
										{
											"id": 3706,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "New left offset.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.left"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 38,
									"character": 8
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.left"
							}
						},
						{
							"id": 3695,
							"name": "position",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3696,
									"name": "position",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3697,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalLogicalPosition",
												"id": 3562
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 157,
									"character": 10
								}
							]
						},
						{
							"id": 3710,
							"name": "right",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3711,
									"name": "right",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the right position of the overlay. Clears any previously set horizontal position."
									},
									"parameters": [
										{
											"id": 3712,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "New right offset.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.right"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 48,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.right"
							}
						},
						{
							"id": 3701,
							"name": "top",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3702,
									"name": "top",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the top position of the overlay. Clears any previously set vertical position."
									},
									"parameters": [
										{
											"id": 3703,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "New top offset.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.top"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 33,
									"character": 7
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.top"
							}
						},
						{
							"id": 3713,
							"name": "width",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3714,
									"name": "width",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets the overlay width and clears any previously set width.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "Pass the `width` through the `OverlayConfig`."
											},
											{
												"tag": "deletion-target",
												"text": "7.0.0\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3715,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "New width for the overlay"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "GlobalPositionStrategy.width"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/nixa/Development/Projects/Akveo/nebular/node_modules/@angular/cdk/overlay/typings/position/global-position-strategy.d.ts",
									"line": 55,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "GlobalPositionStrategy.width"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3725,
								3698,
								3707,
								3719,
								3722,
								3727,
								3716,
								3704,
								3695,
								3710,
								3701,
								3713
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 155,
							"character": 37
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "GlobalPositionStrategy"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "PositionStrategy"
						}
					]
				},
				{
					"id": 3729,
					"name": "NbPositionBuilderService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3730,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3735,
									"name": "new NbPositionBuilderService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3736,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3737,
											"name": "viewportRuler",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbViewportRulerAdapter",
												"id": 3535
											}
										},
										{
											"id": 3738,
											"name": "platform",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPlatform",
												"id": 2703
											}
										},
										{
											"id": 3739,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayPositionBuilder",
												"id": 2716
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPositionBuilderService",
										"id": 3729
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 175,
									"character": 39
								}
							]
						},
						{
							"id": 3731,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 176,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3733,
							"name": "platform",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 178,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPlatform",
								"id": 2703
							}
						},
						{
							"id": 3734,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 179,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayPositionBuilder",
								"id": 2716
							}
						},
						{
							"id": 3732,
							"name": "viewportRuler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 177,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "NbViewportRulerAdapter",
								"id": 3535
							}
						},
						{
							"id": 3742,
							"name": "connectedTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3743,
									"name": "connectedTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3744,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 186,
									"character": 13
								}
							]
						},
						{
							"id": 3740,
							"name": "global",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3741,
									"name": "global",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbGlobalPositionStrategy",
										"id": 3694
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 182,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3730
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3731,
								3733,
								3734,
								3732
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3742,
								3740
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 175,
							"character": 37
						}
					]
				},
				{
					"id": 3757,
					"name": "CLOCKWISE_POSITIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 56,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [NbPosition.TOP, NbPosition.RIGHT, NbPosition.BOTTOM, NbPosition.LEFT]"
				},
				{
					"id": 3755,
					"name": "COUNTER_CLOCKWISE_POSITIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 54,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [NbPosition.TOP, NbPosition.LEFT, NbPosition.BOTTOM, NbPosition.RIGHT]"
				},
				{
					"id": 3759,
					"name": "HORIZONTAL_POSITIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 58,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [NbPosition.START, NbPosition.END]"
				},
				{
					"id": 3756,
					"name": "NOOP_POSITIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 55,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [NbPosition.TOP, NbPosition.BOTTOM, NbPosition.LEFT, NbPosition.RIGHT]"
				},
				{
					"id": 3758,
					"name": "VERTICAL_POSITIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 57,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [NbPosition.BOTTOM, NbPosition.TOP]"
				},
				{
					"id": 3760,
					"name": "comparePositions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 3761,
							"name": "comparePositions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3762,
									"name": "p1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbConnectedPosition",
										"id": 2851
									}
								},
								{
									"id": 3763,
									"name": "p2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbConnectedPosition",
										"id": 2851
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 61,
							"character": 25
						}
					]
				},
				{
					"id": 3745,
					"name": "POSITIONS",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 3746,
							"name": "__computed",
							"kind": 64,
							"kindString": "Function",
							"flags": {},
							"signatures": [
								{
									"id": 3747,
									"name": "__computed",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3748,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3749,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3754,
													"name": "offsetX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-position.ts",
															"line": 41,
															"character": 94
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " offset"
												},
												{
													"id": 3750,
													"name": "originX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-position.ts",
															"line": 41,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"end\""
												},
												{
													"id": 3751,
													"name": "originY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-position.ts",
															"line": 41,
															"character": 36
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"center\""
												},
												{
													"id": 3752,
													"name": "overlayX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-position.ts",
															"line": 41,
															"character": 56
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"start\""
												},
												{
													"id": 3753,
													"name": "overlayY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-position.ts",
															"line": 41,
															"character": 75
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"center\""
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3754,
														3750,
														3751,
														3752,
														3753
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 40,
									"character": 20
								},
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 43,
									"character": 21
								},
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 46,
									"character": 19
								},
								{
									"fileName": "theme/components/cdk/overlay/overlay-position.ts",
									"line": 49,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								3746
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-position.ts",
							"line": 39,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						3603,
						3609
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3616,
						3694,
						3729
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3757,
						3755,
						3759,
						3756,
						3758
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3760
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						3745
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/overlay-position.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3905,
			"name": "\"theme/components/cdk/overlay/overlay-trigger\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/overlay-trigger.ts",
			"children": [
				{
					"id": 3906,
					"name": "NbTrigger",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3907,
							"name": "CLICK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 7,
									"character": 7
								}
							],
							"defaultValue": "\"click\""
						},
						{
							"id": 3910,
							"name": "FOCUS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 10,
									"character": 7
								}
							],
							"defaultValue": "\"focus\""
						},
						{
							"id": 3909,
							"name": "HINT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 9,
									"character": 6
								}
							],
							"defaultValue": "\"hint\""
						},
						{
							"id": 3908,
							"name": "HOVER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 8,
									"character": 7
								}
							],
							"defaultValue": "\"hover\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3907,
								3910,
								3909,
								3908
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
							"line": 6,
							"character": 21
						}
					]
				},
				{
					"id": 3926,
					"name": "NbClickTriggerStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates show and hide event streams.\nFires toggle event when the click was performed on the host element.\nFires close event when the click was performed on the document but\nnot on the host or container."
					},
					"children": [
						{
							"id": 3931,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3937,
									"name": "new NbClickTriggerStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3938,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 3939,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 3940,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3941,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3942,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ComponentRef",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 47,
															"character": 93
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbClickTriggerStrategy",
										"id": 3926
									},
									"overwrites": {
										"type": "reference",
										"name": "NbTriggerStrategy.__constructor",
										"id": 3914
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 45,
									"character": 4
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.__constructor",
								"id": 3914
							}
						},
						{
							"id": 3934,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 47,
									"character": 92
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3935,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3936,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
											"line": 47,
											"character": 93
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.container",
								"id": 3917
							}
						},
						{
							"id": 3932,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 47,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.document",
								"id": 3915
							}
						},
						{
							"id": 3929,
							"name": "hide",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 40,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 3930,
							"name": "hide$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 41,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableMerge(\n    this.hide.asObservable(),\n    observableFromEvent<Event>(this.document, 'click')\n      .pipe(filter((event: Event) => this.isNotHostOrContainer(event))),\n  )",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.hide$",
								"id": 3913
							}
						},
						{
							"id": 3933,
							"name": "host",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 47,
									"character": 58
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.host",
								"id": 3916
							}
						},
						{
							"id": 3927,
							"name": "show",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 37,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 3928,
							"name": "show$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 38,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " this.show.asObservable()",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.show$",
								"id": 3912
							}
						},
						{
							"id": 3945,
							"name": "isContainerExists",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3946,
									"name": "isContainerExists",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 63,
									"character": 29
								}
							]
						},
						{
							"id": 3947,
							"name": "isNotHostOrContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3948,
									"name": "isNotHostOrContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3949,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 67,
									"character": 32
								}
							]
						},
						{
							"id": 3943,
							"name": "subscribeOnHostClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3944,
									"name": "subscribeOnHostClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 52,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3931
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3934,
								3932,
								3929,
								3930,
								3933,
								3927,
								3928
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3945,
								3947,
								3943
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
							"line": 36,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbTriggerStrategy",
							"id": 3911
						}
					]
				},
				{
					"id": 3980,
					"name": "NbFocusTriggerStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates show and hide event streams.\nFires open event when a focus is on the host element and stay over at least 100 milliseconds.\nFires close event when the focus leaves the host element."
					},
					"children": [
						{
							"id": 4000,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4006,
									"name": "new NbFocusTriggerStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4007,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 4008,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 4009,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4010,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 4011,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ComponentRef",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 26,
															"character": 93
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbFocusTriggerStrategy",
										"id": 3980
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbTriggerStrategy.__constructor",
										"id": 3914
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 24,
									"character": 36
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.__constructor",
								"id": 3914
							}
						},
						{
							"id": 3995,
							"name": "clickIn$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 148,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent<Event>(this.host, 'click')\n    .pipe(\n      filter(() => !this.container()),\n    )"
						},
						{
							"id": 3996,
							"name": "clickOut$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 153,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent<Event>(this.document, 'click')\n    .pipe(\n      filter(() => !!this.container()),\n      filter(event => this.isNotOnHostOrContainer(event)),\n    )"
						},
						{
							"id": 4003,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 92
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4004,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 4005,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
											"line": 26,
											"character": 93
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.container",
								"id": 3917
							}
						},
						{
							"id": 4001,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.document",
								"id": 3915
							}
						},
						{
							"id": 3994,
							"name": "focusOut$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 138,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent<Event>(this.host, 'focusout')\n    .pipe(\n      switchMap(() => observableFromEvent<Event>(this.document, 'focusin')\n        .pipe(\n          takeWhile(() => !!this.container()),\n          filter(event => this.isNotOnHostOrContainer(event)),\n        ),\n      ),\n    )"
						},
						{
							"id": 3999,
							"name": "hide$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 173,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " observableMerge(this.focusOut$, this.tabKeyPress$, this.clickOut$)",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.hide$",
								"id": 3913
							}
						},
						{
							"id": 4002,
							"name": "host",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 58
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.host",
								"id": 3916
							}
						},
						{
							"id": 3998,
							"name": "show$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 165,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableMerge(observableFromEvent<Event>(this.host, 'focusin'), this.clickIn$)\n    .pipe(\n      filter(() => !this.container()),\n      debounceTime(100),\n      takeUntil(observableFromEvent(this.host, 'focusout')),\n      repeat(),\n    )",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.show$",
								"id": 3912
							}
						},
						{
							"id": 3997,
							"name": "tabKeyPress$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 159,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent<Event>(this.document, 'keydown')\n    .pipe(\n      filter((event: KeyboardEvent) => event.keyCode === 9),\n      filter(() => !!this.container()),\n    )"
						},
						{
							"id": 3981,
							"name": "isNotOnHostOrContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3982,
									"name": "isNotOnHostOrContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3983,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 126,
									"character": 34
								}
							]
						},
						{
							"id": 3989,
							"name": "isOnContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3990,
									"name": "isOnContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3991,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3992,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3993,
															"name": "target",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
																	"line": 134,
																	"character": 34
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3993
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 134,
															"character": 26
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 134,
									"character": 25
								}
							]
						},
						{
							"id": 3984,
							"name": "isOnHost",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3985,
									"name": "isOnHost",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3986,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3987,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3988,
															"name": "target",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
																	"line": 130,
																	"character": 29
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3988
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 130,
															"character": 21
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 130,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4000
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3995,
								3996,
								4003,
								4001,
								3994,
								3999,
								4002,
								3998,
								3997
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3981,
								3989,
								3984
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
							"line": 124,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbTriggerStrategy",
							"id": 3911
						}
					]
				},
				{
					"id": 3965,
					"name": "NbHintTriggerStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates show and hide event streams.\nFires open event when a mouse hovers over the host element and stay over at least 100 milliseconds.\nFires close event when the mouse leaves the host element."
					},
					"children": [
						{
							"id": 3968,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3974,
									"name": "new NbHintTriggerStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3975,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 3976,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 3977,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3978,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3979,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ComponentRef",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 26,
															"character": 93
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbHintTriggerStrategy",
										"id": 3965
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbTriggerStrategy.__constructor",
										"id": 3914
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 24,
									"character": 36
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.__constructor",
								"id": 3914
							}
						},
						{
							"id": 3971,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 92
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3972,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3973,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
											"line": 26,
											"character": 93
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.container",
								"id": 3917
							}
						},
						{
							"id": 3969,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.document",
								"id": 3915
							}
						},
						{
							"id": 3967,
							"name": "hide$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 115,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent(this.host, 'mouseleave')",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.hide$",
								"id": 3913
							}
						},
						{
							"id": 3970,
							"name": "host",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 58
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.host",
								"id": 3916
							}
						},
						{
							"id": 3966,
							"name": "show$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 108,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent<Event>(this.host, 'mouseenter')\n    .pipe(\n      delay(100),\n      takeUntil(observableFromEvent(this.host, 'mouseleave')),\n      repeat(),\n    )",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.show$",
								"id": 3912
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3968
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3971,
								3969,
								3967,
								3970,
								3966
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
							"line": 107,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbTriggerStrategy",
							"id": 3911
						}
					]
				},
				{
					"id": 3950,
					"name": "NbHoverTriggerStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates show and hide event streams.\nFires open event when a mouse hovers over the host element and stay over at least 100 milliseconds.\nFires close event when the mouse leaves the host element and stops out of the host and popover container."
					},
					"children": [
						{
							"id": 3953,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3959,
									"name": "new NbHoverTriggerStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3960,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 3961,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 3962,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3963,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3964,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ComponentRef",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 26,
															"character": 93
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbHoverTriggerStrategy",
										"id": 3950
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbTriggerStrategy.__constructor",
										"id": 3914
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 24,
									"character": 36
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.__constructor",
								"id": 3914
							}
						},
						{
							"id": 3956,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 92
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3957,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3958,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
											"line": 26,
											"character": 93
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.container",
								"id": 3917
							}
						},
						{
							"id": 3954,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.document",
								"id": 3915
							}
						},
						{
							"id": 3952,
							"name": "hide$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 88,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent<Event>(this.host, 'mouseleave')\n    .pipe(\n      switchMap(() => observableFromEvent<Event>(this.document, 'mousemove')\n        .pipe(\n          debounceTime(100),\n          takeWhile(() => !!this.container()),\n          filter(event => !this.host.contains(event.target as Node)\n            && !this.container().location.nativeElement.contains(event.target as Node),\n          ),\n        ),\n      ),\n    )",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.hide$",
								"id": 3913
							}
						},
						{
							"id": 3955,
							"name": "host",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 58
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbTriggerStrategy.host",
								"id": 3916
							}
						},
						{
							"id": 3951,
							"name": "show$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 81,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							},
							"defaultValue": " observableFromEvent<Event>(this.host, 'mouseenter')\n    .pipe(\n      delay(100),\n      takeUntil(observableFromEvent(this.host, 'mouseleave')),\n      repeat(),\n    )",
							"overwrites": {
								"type": "reference",
								"name": "NbTriggerStrategy.show$",
								"id": 3912
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3953
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3956,
								3954,
								3952,
								3955,
								3951
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
							"line": 79,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbTriggerStrategy",
							"id": 3911
						}
					]
				},
				{
					"id": 3911,
					"name": "NbTriggerStrategy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "TODO maybe we have to use renderer.listen instead of observableFromEvent?\nRenderer provides capability use it in service worker, ssr and so on."
					},
					"children": [
						{
							"id": 3914,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3920,
									"name": "new NbTriggerStrategy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3921,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										},
										{
											"id": 3922,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										},
										{
											"id": 3923,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3924,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3925,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ComponentRef",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 26,
															"character": 93
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 24,
									"character": 36
								}
							]
						},
						{
							"id": 3917,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 92
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3918,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 3919,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
											"line": 26,
											"character": 93
										}
									]
								}
							}
						},
						{
							"id": 3915,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							}
						},
						{
							"id": 3913,
							"name": "hide$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 24,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							}
						},
						{
							"id": 3916,
							"name": "host",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 26,
									"character": 58
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 3912,
							"name": "show$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 23,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Event"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3914
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3917,
								3915,
								3913,
								3916,
								3912
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
							"line": 22,
							"character": 39
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbClickTriggerStrategy",
							"id": 3926
						},
						{
							"type": "reference",
							"name": "NbHoverTriggerStrategy",
							"id": 3950
						},
						{
							"type": "reference",
							"name": "NbHintTriggerStrategy",
							"id": 3965
						},
						{
							"type": "reference",
							"name": "NbFocusTriggerStrategy",
							"id": 3980
						}
					]
				},
				{
					"id": 4012,
					"name": "NbTriggerStrategyBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4014,
							"name": "_container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 178,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4015,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 4016,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentRef",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
											"line": 178,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 4018,
							"name": "_document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 180,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Document"
							}
						},
						{
							"id": 4013,
							"name": "_host",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 177,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 4017,
							"name": "_trigger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 179,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbTrigger",
								"id": 3906
							}
						},
						{
							"id": 4033,
							"name": "build",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4034,
									"name": "build",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 202,
									"character": 7
								}
							]
						},
						{
							"id": 4028,
							"name": "container",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4029,
									"name": "container",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4030,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4031,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 4032,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ComponentRef",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
															"line": 197,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 197,
									"character": 11
								}
							]
						},
						{
							"id": 4019,
							"name": "document",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4020,
									"name": "document",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4021,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Document"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 182,
									"character": 10
								}
							]
						},
						{
							"id": 4025,
							"name": "host",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4026,
									"name": "host",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4027,
											"name": "host",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 192,
									"character": 6
								}
							]
						},
						{
							"id": 4022,
							"name": "trigger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4023,
									"name": "trigger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4024,
											"name": "trigger",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbTrigger",
												"id": 3906
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
									"line": 187,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4014,
								4018,
								4013,
								4017
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4033,
								4028,
								4019,
								4025,
								4022
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
							"line": 176,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						3906
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3926,
						3980,
						3965,
						3950,
						3911,
						4012
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/overlay-trigger.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3860,
			"name": "\"theme/components/cdk/overlay/overlay.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/overlay.module.ts",
			"children": [
				{
					"id": 3861,
					"name": "NbOverlayModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbCdkMappingModule,\n    NbSharedModule,\n  ],\n  declarations: [NbOverlayContainerComponent],\n  exports: [\n    NbCdkMappingModule,\n    NbCdkAdapterModule,\n    NbOverlayContainerComponent,\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 3862,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3863,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay.module.ts",
									"line": 25,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3862
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/overlay.module.ts",
							"line": 24,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3861
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/overlay.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3561,
			"name": "\"theme/components/cdk/overlay/position-helper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/cdk/overlay/position-helper.ts",
			"children": [
				{
					"id": 3562,
					"name": "NbGlobalLogicalPosition",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3566,
							"name": "BOTTOM_END",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 10,
									"character": 12
								}
							],
							"defaultValue": "\"bottom-end\""
						},
						{
							"id": 3565,
							"name": "BOTTOM_START",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 9,
									"character": 14
								}
							],
							"defaultValue": "\"bottom-start\""
						},
						{
							"id": 3564,
							"name": "TOP_END",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 8,
									"character": 9
								}
							],
							"defaultValue": "\"top-end\""
						},
						{
							"id": 3563,
							"name": "TOP_START",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 7,
									"character": 11
								}
							],
							"defaultValue": "\"top-start\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3566,
								3565,
								3564,
								3563
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/position-helper.ts",
							"line": 6,
							"character": 35
						}
					]
				},
				{
					"id": 3567,
					"name": "NbGlobalPhysicalPosition",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3571,
							"name": "BOTTOM_LEFT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 17,
									"character": 13
								}
							],
							"defaultValue": "\"bottom-left\""
						},
						{
							"id": 3570,
							"name": "BOTTOM_RIGHT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 16,
									"character": 14
								}
							],
							"defaultValue": "\"bottom-right\""
						},
						{
							"id": 3569,
							"name": "TOP_LEFT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 15,
									"character": 10
								}
							],
							"defaultValue": "\"top-left\""
						},
						{
							"id": 3568,
							"name": "TOP_RIGHT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 14,
									"character": 11
								}
							],
							"defaultValue": "\"top-right\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3571,
								3570,
								3569,
								3568
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/position-helper.ts",
							"line": 13,
							"character": 36
						}
					]
				},
				{
					"id": 3572,
					"name": "NbPositionHelper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3573,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3575,
									"name": "new NbPositionHelper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3576,
											"name": "layoutDirection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirectionService",
												"id": 1581
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPositionHelper",
										"id": 3572
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 23,
									"character": 31
								}
							]
						},
						{
							"id": 3574,
							"name": "layoutDirection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 24,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirectionService",
								"id": 1581
							}
						},
						{
							"id": 3586,
							"name": "isRightPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3587,
									"name": "isRightPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3588,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPosition",
												"id": 3601
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 58,
									"character": 17
								}
							]
						},
						{
							"id": 3583,
							"name": "isTopPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3584,
									"name": "isTopPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3585,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPosition",
												"id": 3601
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 51,
									"character": 15
								}
							]
						},
						{
							"id": 3577,
							"name": "toLogicalPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3578,
									"name": "toLogicalPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3579,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPosition",
												"id": 3601
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbGlobalLogicalPosition",
										"id": 3562
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 27,
									"character": 19
								}
							]
						},
						{
							"id": 3589,
							"name": "toLogicalPositionWhenLtr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3590,
									"name": "toLogicalPositionWhenLtr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3591,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPhysicalPosition",
												"id": 3567
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbGlobalLogicalPosition",
										"id": 3562
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 65,
									"character": 36
								}
							]
						},
						{
							"id": 3592,
							"name": "toLogicalPositionWhenRtl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3593,
									"name": "toLogicalPositionWhenRtl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3594,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPhysicalPosition",
												"id": 3567
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbGlobalLogicalPosition",
										"id": 3562
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 78,
									"character": 36
								}
							]
						},
						{
							"id": 3580,
							"name": "toPhysicalPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3581,
									"name": "toPhysicalPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3582,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPosition",
												"id": 3601
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbGlobalPhysicalPosition",
										"id": 3567
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 39,
									"character": 20
								}
							]
						},
						{
							"id": 3595,
							"name": "toPhysicalPositionWhenLtr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3596,
									"name": "toPhysicalPositionWhenLtr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3597,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalLogicalPosition",
												"id": 3562
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbGlobalPhysicalPosition",
										"id": 3567
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 91,
									"character": 37
								}
							]
						},
						{
							"id": 3598,
							"name": "toPhysicalPositionWhenRtl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3599,
									"name": "toPhysicalPositionWhenRtl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3600,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalLogicalPosition",
												"id": 3562
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbGlobalPhysicalPosition",
										"id": 3567
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/position-helper.ts",
									"line": 104,
									"character": 37
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3573
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3574
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3586,
								3583,
								3577,
								3589,
								3592,
								3580,
								3595,
								3598
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/position-helper.ts",
							"line": 23,
							"character": 29
						}
					]
				},
				{
					"id": 3601,
					"name": "NbGlobalPosition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "theme/components/cdk/overlay/position-helper.ts",
							"line": 20,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "NbGlobalPhysicalPosition",
								"id": 3567
							},
							{
								"type": "reference",
								"name": "NbGlobalLogicalPosition",
								"id": 3562
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						3562,
						3567
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3572
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3601
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/cdk/overlay/position-helper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4602,
			"name": "\"theme/components/chat/chat-form.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat-form.component.ts",
			"children": [
				{
					"id": 4603,
					"name": "NbChatFormComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Chat form component.",
						"text": "Show a message form with a send message button.\n\n```ts\n<nb-chat-form showButton=\"true\" buttonIcon=\"nb-send\">\n</nb-chat-form>\n```\n\nWhen `[dropFiles]=\"true\"` handles files drag&drop with a file preview.\n\nDrag & drop available for files and images:",
						"tags": [
							{
								"tag": "stacked-example(drag",
								"text": "& Drop Chat, chat/chat-drop.component)\n\nNew message could be tracked outside by using `(send)` output.\n\n```ts\n<nb-chat-form (send)=\"onNewMessage($event)\">\n</nb-chat-form>\n\n// ...\n\nonNewMessage({ message: string, files: any[] }) {\n  this.service.sendToServer(message, files);\n}\n```\n"
							},
							{
								"tag": "styles",
								"text": "\n\nchat-form-bg:\nchat-form-fg:\nchat-form-border:\nchat-form-active-border:\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-chat-form',\n  template: `\n    <div class=\"dropped-files\" *ngIf=\"droppedFiles?.length\">\n      <ng-container *ngFor=\"let file of droppedFiles\">\n        <div *ngIf=\"file.urlStyle\" [style.background-image]=\"file.urlStyle\">\n          <span class=\"remove\" (click)=\"removeFile(file)\">&times;</span>\n        </div>\n        <div *ngIf=\"!file.urlStyle\" class=\"nb-compose\">\n          <span class=\"remove\" (click)=\"removeFile(file)\">&times;</span>\n        </div>\n      </ng-container>\n    </div>\n    <div class=\"message-row\">\n      <input [(ngModel)]=\"message\"\n             [class.with-button]=\"showButton\"\n             type=\"text\"\n             placeholder=\"{{ fileOver ? 'Drop file to send' : 'Type a message' }}\"\n             (keyup.enter)=\"sendMessage()\">\n      <button *ngIf=\"showButton\" class=\"btn\" [class.with-icon]=\"!buttonTitle\" (click)=\"sendMessage()\">\n        {{ buttonTitle }}<span *ngIf=\"!buttonTitle\" [class]=\"buttonIcon\"></span>\n      </button>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4616,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4619,
									"name": "new NbChatFormComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4620,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										},
										{
											"id": 4621,
											"name": "domSanitizer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DomSanitizer"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbChatFormComponent",
										"id": 4603
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 122,
									"character": 51
								}
							]
						},
						{
							"id": 4608,
							"name": "buttonIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Send button icon, shown if `buttonTitle` is empty",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 102,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"nb-paper-plane\""
						},
						{
							"id": 4607,
							"name": "buttonTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Send button title",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 96,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 4617,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 124,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 4618,
							"name": "domSanitizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 124,
									"character": 65
								}
							],
							"type": {
								"type": "reference",
								"name": "DomSanitizer"
							}
						},
						{
							"id": 4610,
							"name": "dropFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Show send button",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 114,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4604,
							"name": "droppedFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 83,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 4615,
							"name": "fileOver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.file-over'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 122,
									"character": 42
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4605,
							"name": "imgDropTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 84,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "Object"
							},
							"defaultValue": " ['image/png', 'image/jpeg', 'image/gif']"
						},
						{
							"id": 4606,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predefined message text",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 90,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 4611,
							"name": "send",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "type",
										"text": "{EventEmitter<{ message: string, files: File[] }>}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 120,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 4612,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 4614,
													"name": "files",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/chat/chat-form.component.ts",
															"line": 120,
															"character": 60
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "File"
														}
													}
												},
												{
													"id": 4613,
													"name": "message",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/chat/chat-form.component.ts",
															"line": 120,
															"character": 45
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														4614,
														4613
													]
												}
											]
										}
									}
								]
							},
							"defaultValue": " new EventEmitter<{ message: string, files: File[] }>()"
						},
						{
							"id": 4609,
							"name": "showButton",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Show send button",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 108,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4630,
							"name": "onDragLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'dragleave'"
									}
								}
							],
							"signatures": [
								{
									"id": 4631,
									"name": "onDragLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 171,
									"character": 13
								}
							]
						},
						{
							"id": 4628,
							"name": "onDragOver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'dragover'"
									}
								}
							],
							"signatures": [
								{
									"id": 4629,
									"name": "onDragOver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 164,
									"character": 12
								}
							]
						},
						{
							"id": 4622,
							"name": "onDrop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'drop'",
										"args": "['$event']"
									}
								}
							],
							"signatures": [
								{
									"id": 4623,
									"name": "onDrop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4624,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 128,
									"character": 8
								}
							]
						},
						{
							"id": 4625,
							"name": "removeFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4626,
									"name": "removeFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4627,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 156,
									"character": 12
								}
							]
						},
						{
							"id": 4632,
							"name": "sendMessage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4633,
									"name": "sendMessage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-form.component.ts",
									"line": 177,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4616
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4608,
								4607,
								4617,
								4618,
								4610,
								4604,
								4615,
								4605,
								4606,
								4611,
								4609
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4630,
								4628,
								4622,
								4625,
								4632
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat-form.component.ts",
							"line": 81,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4603
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat-form.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4573,
			"name": "\"theme/components/chat/chat-message-file.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat-message-file.component.ts",
			"children": [
				{
					"id": 4574,
					"name": "NbChatMessageFileComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Chat message component.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-chat-message-file',\n  template: `\n    <nb-chat-message-text [sender]=\"sender\" [date]=\"date\" [message]=\"message\">\n      {{ message }}\n    </nb-chat-message-text>\n\n    <ng-container *ngIf=\"readyFiles?.length > 1\">\n      <div class=\"message-content-group\">\n        <a *ngFor=\"let file of readyFiles\" [href]=\"file.url\" target=\"_blank\">\n          <span [class]=\"file.icon\" *ngIf=\"!file.urlStyle\"></span>\n          <div *ngIf=\"file.isImage\" [style.background-image]=\"file.urlStyle\"></div>\n        </a>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"readyFiles?.length === 1\">\n      <a [href]=\"readyFiles[0].url\" target=\"_blank\">\n        <span [class]=\"readyFiles[0].icon\"  *ngIf=\"!readyFiles[0].urlStyle\"></span>\n        <div *ngIf=\"readyFiles[0].isImage\" [style.background-image]=\"readyFiles[0].urlStyle\"></div>\n      </a>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4582,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4585,
									"name": "new NbChatMessageFileComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4586,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										},
										{
											"id": 4587,
											"name": "domSanitizer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DomSanitizer"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbChatMessageFileComponent",
										"id": 4574
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 78,
									"character": 3
								}
							]
						},
						{
							"id": 4583,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 80,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 4578,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message send date",
								"tags": [
									{
										"tag": "type",
										"text": "{Date}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 61,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 4584,
							"name": "domSanitizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 80,
									"character": 65
								}
							],
							"type": {
								"type": "reference",
								"name": "DomSanitizer"
							}
						},
						{
							"id": 4576,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 49,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4575,
							"name": "readyFiles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 43,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 4577,
							"name": "sender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 55,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4579,
							"name": "files",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message file path",
								"tags": [
									{
										"tag": "type",
										"text": "{Date}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 4580,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Message file path",
									"tags": [
										{
											"tag": "type",
											"text": "{Date}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 4581,
										"name": "files",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 68,
									"character": 11
								}
							]
						},
						{
							"id": 4588,
							"name": "isImage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4589,
									"name": "isImage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4590,
											"name": "file",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-file.component.ts",
									"line": 84,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4582
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4583,
								4578,
								4584,
								4576,
								4575,
								4577
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4579
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4588
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat-message-file.component.ts",
							"line": 41,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4574
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat-message-file.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4556,
			"name": "\"theme/components/chat/chat-message-map.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat-message-map.component.ts",
			"children": [
				{
					"id": 4557,
					"name": "NbChatMessageMapComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Chat message component.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-chat-message-map',\n  template: `\n    <nb-chat-message-file [files]=\"[file]\" [message]=\"message\" [sender]=\"sender\" [date]=\"date\"></nb-chat-message-file>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4570,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4571,
									"name": "new NbChatMessageMapComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4572,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbChatOptions",
												"id": 4554
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbChatMessageMapComponent",
										"id": 4557
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 64,
									"character": 17
								}
							]
						},
						{
							"id": 4560,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message send date",
								"tags": [
									{
										"tag": "type",
										"text": "{Date}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 41,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 4561,
							"name": "latitude",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Map latitude",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 47,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4562,
							"name": "longitude",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Map longitude",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 53,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4569,
							"name": "mapKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4558,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 29,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4559,
							"name": "sender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 35,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4563,
							"name": "file",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 4564,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 4565,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 4568,
												"name": "icon",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "theme/components/chat/chat-message-map.component.ts",
														"line": 60,
														"character": 10
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"nb-location\""
											},
											{
												"id": 4567,
												"name": "type",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "theme/components/chat/chat-message-map.component.ts",
														"line": 59,
														"character": 10
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": "\"image/png\""
											},
											{
												"id": 4566,
												"name": "url",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "theme/components/chat/chat-message-map.component.ts",
														"line": 58,
														"character": 9
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												},
												"defaultValue": " `https://maps.googleapis.com/maps/api/staticmap?center=${this.latitude},${this.longitude}&zoom=12&size=400x400&key=${this.mapKey}`"
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													4568,
													4567,
													4566
												]
											}
										]
									}
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-map.component.ts",
									"line": 55,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4570
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4560,
								4561,
								4562,
								4569,
								4558,
								4559
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4563
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat-message-map.component.ts",
							"line": 23,
							"character": 38
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4557
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat-message-map.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4591,
			"name": "\"theme/components/chat/chat-message-quote.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat-message-quote.component.ts",
			"children": [
				{
					"id": 4592,
					"name": "NbChatMessageQuoteComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Chat message component.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-chat-message-quote',\n  template: `\n    <p class=\"sender\" *ngIf=\"sender || date\">{{ sender }} <time>{{ date  | date:'shortTime' }}</time></p>\n    <p class=\"quote\">\n      {{ quote }}\n    </p>\n    <nb-chat-message-text [message]=\"message\">\n      {{ message }}\n    </nb-chat-message-text>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4595,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message send date",
								"tags": [
									{
										"tag": "type",
										"text": "{Date}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-quote.component.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 4593,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-quote.component.ts",
									"line": 34,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4596,
							"name": "quote",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Quoted message",
								"tags": [
									{
										"tag": "type",
										"text": "{Date}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-quote.component.ts",
									"line": 52,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4594,
							"name": "sender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-quote.component.ts",
									"line": 40,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4595,
								4593,
								4596,
								4594
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat-message-quote.component.ts",
							"line": 28,
							"character": 40
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4592
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat-message-quote.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4597,
			"name": "\"theme/components/chat/chat-message-text.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat-message-text.component.ts",
			"children": [
				{
					"id": 4598,
					"name": "NbChatMessageTextComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Chat message component.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-chat-message-text',\n  template: `\n    <p class=\"sender\" *ngIf=\"sender || date\">{{ sender }} <time>{{ date  | date:'shortTime' }}</time></p>\n    <p class=\"text\" *ngIf=\"message\">{{ message }}</p>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4601,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message send date",
								"tags": [
									{
										"tag": "type",
										"text": "{Date}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-text.component.ts",
									"line": 41,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 4600,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-text.component.ts",
									"line": 35,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4599,
							"name": "sender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message-text.component.ts",
									"line": 29,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4601,
								4600,
								4599
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat-message-text.component.ts",
							"line": 23,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4598
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat-message-text.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4460,
			"name": "\"theme/components/chat/chat-message.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat-message.component.ts",
			"children": [
				{
					"id": 4461,
					"name": "NbChatMessageComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Chat message component.",
						"text": "Multiple message types are available through a `type` property, such as\n- text - simple text message\n- file - could be a file preview or a file icon\nif multiple files are provided grouped files are shown\n- quote - quotes a message with specific quote styles\n- map - shows a google map picture by provided [latitude] and [longitude] properties\n",
						"tags": [
							{
								"tag": "stacked-example(available",
								"text": "Types, chat/chat-message-types-showcase.component)\n\nMessage with attached files:\n```html\n<nb-chat-message\n  type=\"file\"\n  [files]=\"[ { url: '...' } ]\"\n  message=\"Hello world!\">\n</nb-chat-message>\n```\n\nMap message:\n```html\n<nb-chat-message\n  type=\"map\"\n  [latitude]=\"53.914\"\n  [longitude]=\"27.59\"\n  message=\"Here I am\">\n</nb-chat-message>\n```\n"
							},
							{
								"tag": "styles",
								"text": "\n\nchat-message-fg:\nchat-message-bg:\nchat-message-reply-bg:\nchat-message-reply-fg:\nchat-message-avatar-bg:\nchat-message-sender-fg:\nchat-message-quote-fg:\nchat-message-quote-bg:\nchat-message-file-fg:\nchat-message-file-bg:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-chat-message',\n  template: `\n    <div class=\"avatar\" [style.background-image]=\"avatarStyle\" *ngIf=\"!replyValue\">\n      <ng-container *ngIf=\"!avatarStyle\">\n        {{ getInitials() }}\n      </ng-container>\n    </div>\n    <div class=\"message\">\n      <ng-container [ngSwitch]=\"type\">\n\n        <nb-chat-message-file *ngSwitchCase=\"'file'\"\n                              [sender]=\"sender\" [date]=\"date\" [message]=\"message\" [files]=\"files\">\n        </nb-chat-message-file>\n\n        <nb-chat-message-quote *ngSwitchCase=\"'quote'\"\n                              [sender]=\"sender\" [date]=\"date\" [message]=\"message\" [quote]=\"quote\">\n        </nb-chat-message-quote>\n\n        <nb-chat-message-map *ngSwitchCase=\"'map'\"\n                              [sender]=\"sender\" [date]=\"date\"\n                              [message]=\"message\" [latitude]=\"latitude\" [longitude]=\"longitude\">\n        </nb-chat-message-map>\n\n        <nb-chat-message-text *ngSwitchDefault\n                              [sender]=\"sender\" [date]=\"date\" [message]=\"message\">\n        </nb-chat-message-text>\n      </ng-container>\n    </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('in', style({ transform: 'translateX(0)' })),\n      transition('void => *', [\n        style({ transform: 'translateX(-100%)' }),\n        animate(80),\n      ]),\n      transition('* => void', [\n        animate(80, style({ transform: 'translateX(100%)' })),\n      ]),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4485,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4487,
									"name": "new NbChatMessageComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4488,
											"name": "domSanitizer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DomSanitizer"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbChatMessageComponent",
										"id": 4461
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 181,
									"character": 24
								}
							]
						},
						{
							"id": 4467,
							"name": "avatarStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 116,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "SafeStyle"
							}
						},
						{
							"id": 4473,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message send date",
								"tags": [
									{
										"tag": "type",
										"text": "{Date}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 142,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 4486,
							"name": "domSanitizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 183,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"name": "DomSanitizer"
							}
						},
						{
							"id": 4474,
							"name": "files",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Array of files `{ url: 'file url', icon: 'file icon class' }`",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 148,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 4475,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 4477,
												"name": "icon",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "theme/components/chat/chat-message.component.ts",
														"line": 148,
														"character": 37
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 4476,
												"name": "url",
												"kind": 32,
												"kindString": "Variable",
												"flags": {},
												"sources": [
													{
														"fileName": "theme/components/chat/chat-message.component.ts",
														"line": 148,
														"character": 23
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													4477,
													4476
												]
											}
										],
										"sources": [
											{
												"fileName": "theme/components/chat/chat-message.component.ts",
												"line": 148,
												"character": 17
											}
										]
									}
								}
							}
						},
						{
							"id": 4479,
							"name": "latitude",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Map latitude",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 160,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4480,
							"name": "longitude",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Map longitude",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 166,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4471,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 130,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4478,
							"name": "quote",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Quoted message text",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 154,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4464,
							"name": "replyValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.reply'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 109,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4472,
							"name": "sender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message sender",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 136,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4484,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message type, available options `text|file|map|quote`",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 181,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4481,
							"name": "avatar",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Message send avatar",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 4482,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Message send avatar",
									"tags": [
										{
											"tag": "type",
											"text": "{string}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 4483,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 173,
									"character": 12
								}
							]
						},
						{
							"id": 4462,
							"name": "flyInOut",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'@flyInOut'"
									}
								}
							],
							"getSignature": {
								"id": 4463,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 104,
									"character": 14
								}
							]
						},
						{
							"id": 4465,
							"name": "notReply",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.not-reply'"
									}
								}
							],
							"getSignature": {
								"id": 4466,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 112,
									"character": 14
								}
							]
						},
						{
							"id": 4468,
							"name": "reply",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines if a message is a reply"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 4469,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Determines if a message is a reply"
								},
								"parameters": [
									{
										"id": 4470,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 122,
									"character": 11
								}
							]
						},
						{
							"id": 4489,
							"name": "getInitials",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4490,
									"name": "getInitials",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat-message.component.ts",
									"line": 185,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4485
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4467,
								4473,
								4486,
								4474,
								4479,
								4480,
								4471,
								4478,
								4464,
								4472,
								4484
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4481,
								4462,
								4465,
								4468
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4489
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat-message.component.ts",
							"line": 100,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4461
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat-message.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4491,
			"name": "\"theme/components/chat/chat.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat.component.ts",
			"children": [
				{
					"id": 4492,
					"name": "NbChatComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Conversational UI collection - a set of components for chat-like UI construction.",
						"text": "Main features:\n- different message types support (text, image, file, file group, map, etc)\n- drag & drop for images and files with preview\n- different UI styles\n- custom action buttons (coming soon)\n\nHere's a complete example build in a bot-like app. Type `help` to be able to receive different message types.\nEnjoy the conversation and the beautiful UI.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "chat/chat-showcase.component)\n\nBasic chat configuration and usage:\n```ts\n<nb-chat title=\"Nebular Conversational UI\">\n      <nb-chat-message *ngFor=\"let msg of messages\"\n                       [type]=\"msg.type\"\n                       [message]=\"msg.text\"\n                       [reply]=\"msg.reply\"\n                       [sender]=\"msg.user.name\"\n                       [date]=\"msg.date\"\n                       [files]=\"msg.files\"\n                       [quote]=\"msg.quote\"\n                       [latitude]=\"msg.latitude\"\n                       [longitude]=\"msg.longitude\"\n                       [avatar]=\"msg.user.avatar\">\n  </nb-chat-message>\n\n  <nb-chat-form (send)=\"sendMessage($event)\" [dropFiles]=\"true\">\n  </nb-chat-form>\n</nb-chat>\n```\n\nThere are three main components:\n```ts\n<nb-chat>\n</nb-chat> // chat container\n\n<nb-chat-form>\n</nb-chat-form> // chat form with drag&drop files feature\n\n<nb-chat-message>\n</nb-chat-message> // chat message, available multiple types\n```\n\nTwo users conversation showcase:"
							},
							{
								"tag": "stacked-example(conversation,",
								"text": "chat/chat-conversation-showcase.component)\n\nChat UI is also available in different colors by specifying a `[status]` input:\n"
							},
							{
								"tag": "stacked-example(colored",
								"text": "Chat, chat/chat-colors.component)\n\nAlso it is possible to configure sizes through `[size]` input:\n"
							},
							{
								"tag": "stacked-example(chat",
								"text": "Sizes, chat/chat-sizes.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nchat-font-size:\nchat-fg:\nchat-bg:\nchat-border-radius:\nchat-fg-text:\nchat-height-xxsmall:\nchat-height-xsmall:\nchat-height-small:\nchat-height-medium:\nchat-height-large:\nchat-height-xlarge:\nchat-height-xxlarge:\nchat-border:\nchat-padding:\nchat-shadow:\nchat-separator:\nchat-active-bg:\nchat-disabled-bg:\nchat-disabled-fg:\nchat-primary-bg:\nchat-info-bg:\nchat-success-bg:\nchat-warning-bg:\nchat-danger-bg:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-chat',\n  styleUrls: ['./chat.component.scss'],\n  template: `\n    <div class=\"header\">{{ title }}</div>\n    <div class=\"scrollable\" #scrollable>\n      <div class=\"messages\">\n        <ng-content select=\"nb-chat-message\"></ng-content>\n        <p class=\"no-messages\" *ngIf=\"!messages?.length\">No messages yet.</p>\n      </div>\n    </div>\n    <div class=\"form\">\n      <ng-content select=\"nb-chat-form\"></ng-content>\n    </div>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4509,
							"name": "accent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 139,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4548,
							"name": "messages",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ContentChildren",
									"type": {
										"type": "reference",
										"name": "ContentChildren"
									},
									"arguments": {
										"selector": "NbChatMessageComponent"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 239,
									"character": 51
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryList",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbChatMessageComponent",
										"id": 4461
									}
								]
							}
						},
						{
							"id": 4547,
							"name": "scrollable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "'scrollable'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 238,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 4507,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 137,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4508,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 138,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4510,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 141,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4497,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 125,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 4496,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 124,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 4495,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 123,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 4498,
							"name": "SIZE_XLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 126,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xlarge"
							},
							"defaultValue": "\"xlarge\""
						},
						{
							"id": 4494,
							"name": "SIZE_XSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 122,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xsmall"
							},
							"defaultValue": "\"xsmall\""
						},
						{
							"id": 4499,
							"name": "SIZE_XXLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 127,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxlarge"
							},
							"defaultValue": "\"xxlarge\""
						},
						{
							"id": 4493,
							"name": "SIZE_XXSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 121,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxsmall"
							},
							"defaultValue": "\"xxsmall\""
						},
						{
							"id": 4500,
							"name": "STATUS_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 129,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 4506,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 135,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 4501,
							"name": "STATUS_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 130,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 4503,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 132,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 4502,
							"name": "STATUS_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 131,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 4504,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 133,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 4505,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 134,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 4525,
							"name": "active",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.active-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4526,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 179,
									"character": 12
								}
							]
						},
						{
							"id": 4537,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.danger-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4538,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 209,
									"character": 12
								}
							]
						},
						{
							"id": 4527,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4528,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 184,
									"character": 14
								}
							]
						},
						{
							"id": 4539,
							"name": "hasAccent",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.accent'"
									}
								}
							],
							"getSignature": {
								"id": 4540,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 214,
									"character": 15
								}
							]
						},
						{
							"id": 4531,
							"name": "info",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.info-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4532,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 194,
									"character": 10
								}
							]
						},
						{
							"id": 4519,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4520,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 164,
									"character": 11
								}
							]
						},
						{
							"id": 4517,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4518,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 159,
									"character": 12
								}
							]
						},
						{
							"id": 4529,
							"name": "primary",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.primary-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4530,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 189,
									"character": 13
								}
							]
						},
						{
							"id": 4541,
							"name": "setSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Chat size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'size'"
									}
								}
							],
							"setSignature": {
								"id": 4542,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Chat size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
								},
								"parameters": [
									{
										"id": 4543,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 224,
									"character": 21
								}
							]
						},
						{
							"id": 4544,
							"name": "setStatus",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Chat status color (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'status'"
									}
								}
							],
							"setSignature": {
								"id": 4545,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Chat status color (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
								},
								"parameters": [
									{
										"id": 4546,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 234,
									"character": 23
								}
							]
						},
						{
							"id": 4515,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.small-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4516,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 154,
									"character": 11
								}
							]
						},
						{
							"id": 4533,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.success-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4534,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 199,
									"character": 13
								}
							]
						},
						{
							"id": 4535,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.warning-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4536,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 204,
									"character": 13
								}
							]
						},
						{
							"id": 4521,
							"name": "xlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xlarge-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4522,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 169,
									"character": 12
								}
							]
						},
						{
							"id": 4513,
							"name": "xsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xsmall-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4514,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 149,
									"character": 12
								}
							]
						},
						{
							"id": 4523,
							"name": "xxlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxlarge-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4524,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 174,
									"character": 13
								}
							]
						},
						{
							"id": 4511,
							"name": "xxsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxsmall-chat'"
									}
								}
							],
							"getSignature": {
								"id": 4512,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 144,
									"character": 13
								}
							]
						},
						{
							"id": 4549,
							"name": "ngAfterViewChecked",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4550,
									"name": "ngAfterViewChecked",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 241,
									"character": 20
								}
							]
						},
						{
							"id": 4551,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4552,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat.component.ts",
									"line": 245,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4509,
								4548,
								4547,
								4507,
								4508,
								4510,
								4497,
								4496,
								4495,
								4498,
								4494,
								4499,
								4493,
								4500,
								4506,
								4501,
								4503,
								4502,
								4504,
								4505
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4525,
								4537,
								4527,
								4539,
								4531,
								4519,
								4517,
								4529,
								4541,
								4544,
								4515,
								4533,
								4535,
								4521,
								4513,
								4523,
								4511
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4549,
								4551
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat.component.ts",
							"line": 119,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterViewChecked"
						},
						{
							"type": "reference",
							"name": "AfterViewInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4492
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4634,
			"name": "\"theme/components/chat/chat.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat.module.ts",
			"children": [
				{
					"id": 4635,
					"name": "NbChatModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    ...NB_CHAT_COMPONENTS,\n  ],\n  exports: [\n    ...NB_CHAT_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 4639,
							"name": "forChild",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4640,
									"name": "forChild",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4641,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "NbChatOptions",
												"id": 4554
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat.module.ts",
									"line": 52,
									"character": 17
								}
							]
						},
						{
							"id": 4636,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4637,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4638,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "NbChatOptions",
												"id": 4554
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/chat/chat.module.ts",
									"line": 43,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4639,
								4636
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat.module.ts",
							"line": 41,
							"character": 25
						}
					]
				},
				{
					"id": 4642,
					"name": "NB_CHAT_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/chat/chat.module.ts",
							"line": 20,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbChatComponent,\n  NbChatMessageComponent,\n  NbChatFormComponent,\n  NbChatMessageTextComponent,\n  NbChatMessageFileComponent,\n  NbChatMessageQuoteComponent,\n  NbChatMessageMapComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4635
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						4642
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4553,
			"name": "\"theme/components/chat/chat.options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/chat/chat.options.ts",
			"children": [
				{
					"id": 4554,
					"name": "NbChatOptions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "license",
								"text": "\nCopyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.\n"
							}
						]
					},
					"children": [
						{
							"id": 4555,
							"name": "messageGoogleMapKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/chat/chat.options.ts",
									"line": 8,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4555
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/chat/chat.options.ts",
							"line": 7,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4554
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/chat/chat.options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4172,
			"name": "\"theme/components/checkbox/checkbox.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/checkbox/checkbox.component.ts",
			"children": [
				{
					"id": 4173,
					"name": "NbCheckboxComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Styled checkbox component",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "checkbox/checkbox-showcase.component)\n\nCan have one of the following statuses: danger, success or warning\n"
							},
							{
								"tag": "stacked-example(colored",
								"text": "Checkboxes, checkbox/checkbox-status.component)\n"
							},
							{
								"tag": "additional-example(disabled",
								"text": "Checkbox, checkbox/checkbox-disabled.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\ncheckbox-bg:\ncheckbox-size:\ncheckbox-border-size:\ncheckbox-border-color:\ncheckbox-checkmark:\ncheckbox-checked-bg:\ncheckbox-checked-size:\ncheckbox-checked-border-size:\ncheckbox-checked-border-color:\ncheckbox-checked-checkmark:\ncheckbox-disabled-bg:\ncheckbox-disabled-size:\ncheckbox-disabled-border-size:\ncheckbox-disabled-border-color:\ncheckbox-disabled-checkmark:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-checkbox',\n  template: `\n    <label class=\"customised-control customised-checkbox\">\n      <input type=\"checkbox\" class=\"customised-control-input\"\n             [disabled]=\"disabled\"\n             [checked]=\"value\"\n             (change)=\"value = !value\"\n             (focus)=\"setFocus()\"\n             (blur)=\"removeFocus()\">\n      <span class=\"customised-control-indicator\"></span>\n      <span class=\"customised-control-description\">\n        <ng-content></ng-content>\n      </span>\n    </label>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NbCheckboxComponent),\n    multi: true,\n  }],\n}"
							}
						}
					],
					"children": [
						{
							"id": 4175,
							"name": "_value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Checkbox value",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'value'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 71,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4176,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 73,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4189,
							"name": "focus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.focus'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 104,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4174,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4187,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.danger'"
									}
								}
							],
							"getSignature": {
								"id": 4188,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 99,
									"character": 12
								}
							]
						},
						{
							"id": 4177,
							"name": "setDisabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'disabled'"
									}
								}
							],
							"setSignature": {
								"id": 4178,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 4179,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 75,
									"character": 17
								}
							]
						},
						{
							"id": 4180,
							"name": "setStatus",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Checkbox status (success, warning, danger)"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'status'"
									}
								}
							],
							"setSignature": {
								"id": 4181,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Checkbox status (success, warning, danger)"
								},
								"parameters": [
									{
										"id": 4182,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 84,
									"character": 15
								}
							]
						},
						{
							"id": 4183,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.success'"
									}
								}
							],
							"getSignature": {
								"id": 4184,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 89,
									"character": 13
								}
							]
						},
						{
							"id": 4194,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 4195,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 4196,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 4197,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 109,
									"character": 11
								},
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 113,
									"character": 11
								}
							]
						},
						{
							"id": 4185,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.warning'"
									}
								}
							],
							"getSignature": {
								"id": 4186,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 94,
									"character": 13
								}
							]
						},
						{
							"id": 4190,
							"name": "onChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4191,
									"name": "onChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 106,
									"character": 10
								}
							]
						},
						{
							"id": 4192,
							"name": "onTouched",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4193,
									"name": "onTouched",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 107,
									"character": 11
								}
							]
						},
						{
							"id": 4198,
							"name": "registerOnChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4199,
									"name": "registerOnChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4200,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 119,
									"character": 18
								}
							]
						},
						{
							"id": 4201,
							"name": "registerOnTouched",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4202,
									"name": "registerOnTouched",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4203,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 123,
									"character": 19
								}
							]
						},
						{
							"id": 4212,
							"name": "removeFocus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4213,
									"name": "removeFocus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 139,
									"character": 13
								}
							]
						},
						{
							"id": 4207,
							"name": "setDisabledState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4208,
									"name": "setDisabledState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4209,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 131,
									"character": 18
								}
							]
						},
						{
							"id": 4210,
							"name": "setFocus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4211,
									"name": "setFocus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 135,
									"character": 10
								}
							]
						},
						{
							"id": 4204,
							"name": "writeValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4205,
									"name": "writeValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4206,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/checkbox/checkbox.component.ts",
									"line": 127,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4175,
								4176,
								4189,
								4174
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4187,
								4177,
								4180,
								4183,
								4194,
								4185
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4190,
								4192,
								4198,
								4201,
								4212,
								4207,
								4210,
								4204
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/checkbox/checkbox.component.ts",
							"line": 62,
							"character": 32
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ControlValueAccessor"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4173
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/checkbox/checkbox.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4214,
			"name": "\"theme/components/checkbox/checkbox.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/checkbox/checkbox.module.ts",
			"children": [
				{
					"id": 4215,
					"name": "NbCheckboxModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [NbCheckboxComponent],\n  exports: [NbCheckboxComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/checkbox/checkbox.module.ts",
							"line": 19,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4215
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/checkbox/checkbox.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4271,
			"name": "\"theme/components/context-menu/context-menu.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/context-menu/context-menu.component.ts",
			"children": [
				{
					"id": 4272,
					"name": "NbContextMenuComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Context menu component used as content within NbContextMenuDirective.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\ncontext-menu-fg\ncontext-menu-active-fg\ncontext-menu-active-bg\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-context-menu',\n  styleUrls: ['./context-menu.component.scss'],\n  template: `\n    <span class=\"arrow\"></span>\n    <nb-menu class=\"context-menu\" [items]=\"items\" [tag]=\"tag\"></nb-menu>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4273,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.component.ts",
									"line": 30,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbMenuItem",
									"id": 2983
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 4275,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 7,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.position",
								"id": 3766
							}
						},
						{
							"id": 4274,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.component.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4280,
							"name": "bottom",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-bottom'"
									}
								}
							],
							"getSignature": {
								"id": 4281,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.bottom",
									"id": 3771
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 20,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.bottom",
								"id": 3771
							}
						},
						{
							"id": 4282,
							"name": "left",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-left'"
									}
								}
							],
							"getSignature": {
								"id": 4283,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.left",
									"id": 3773
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 25,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.left",
								"id": 3773
							}
						},
						{
							"id": 4278,
							"name": "right",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-right'"
									}
								}
							],
							"getSignature": {
								"id": 4279,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.right",
									"id": 3769
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 15,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.right",
								"id": 3769
							}
						},
						{
							"id": 4276,
							"name": "top",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-top'"
									}
								}
							],
							"getSignature": {
								"id": 4277,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.top",
									"id": 3767
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 10,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.top",
								"id": 3767
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4273,
								4275,
								4274
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4280,
								4282,
								4278,
								4276
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/context-menu/context-menu.component.ts",
							"line": 29,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbPositionedContainer",
							"id": 3765
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4272
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/context-menu/context-menu.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4284,
			"name": "\"theme/components/context-menu/context-menu.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/context-menu/context-menu.directive.ts",
			"children": [
				{
					"id": 4285,
					"name": "NbContextMenuDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Full featured context menu directive.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "context-menu/context-menu-showcase.component)\n\nJust pass menu items array:\n\n```html\n<button [nbContextMenu]=\"items\"></button>\n...\nitems = [{ title: 'Profile' }, { title: 'Log out' }];\n```\n\nIf you want to handle context menu clicks you have to pass `nbContextMenuTag`\nparam and register to events using NbMenuService.\n`NbContextMenu` renders plain `NbMenu` inside, so\nyou have to work with it just like with `NbMenu` component:\n"
							},
							{
								"tag": "stacked-example(menu",
								"text": "item click, context-menu/context-menu-click.component)\n\nContext menu has different placements, such as: top, bottom, left and right\nwhich can be used as following:\n\n```html\n<button [nbContextMenu]=\"items\" nbContextMenuPlacement=\"right\"></button>\n```\n\n```ts\nitems = [{ title: 'Profile' }, { title: 'Log out' }];\n```\n\nBy default context menu will try to adjust itself to maximally fit viewport\nand provide the best user experience. It will try to change position of the context menu.\nIf you wanna disable this behaviour just set it falsy value.\n\n```html\n<button [nbContextMenu]=\"items\" nbContextMenuAdjustment=\"counterclockwise\"></button>\n```\n\n```ts\nitems = [{ title: 'Profile' }, { title: 'Log out' }];\n```\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{ selector: '[nbContextMenu]' }"
							}
						}
					],
					"children": [
						{
							"id": 4298,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4304,
									"name": "new NbContextMenuDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4305,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4306,
											"name": "menuService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuService",
												"id": 3008
											}
										},
										{
											"id": 4307,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 4308,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 4309,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbContextMenuDirective",
										"id": 4285
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 108,
									"character": 35
								}
							]
						},
						{
							"id": 4287,
							"name": "adjustment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Container position will be changes automatically based on this strategy if container can't fit view port.\nSet this property to any falsy value if you want to disable automatically adjustment.\nAvailable values: clockwise, counterclockwise."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbContextMenuAdjustment'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 86,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustment",
								"id": 3603
							},
							"defaultValue": " NbAdjustment.CLOCKWISE"
						},
						{
							"id": 4296,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 107,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4293,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 104,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 4299,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 110,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4301,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 112,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 4297,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 108,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbMenuItem",
									"id": 2983
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 4300,
							"name": "menuService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 111,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "NbMenuService",
								"id": 3008
							}
						},
						{
							"id": 4303,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 114,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 4286,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Position will be calculated relatively host element based on the position.\nCan be top, right, bottom and left."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbContextMenuPlacement'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 78,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"defaultValue": " NbPosition.BOTTOM"
						},
						{
							"id": 4302,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 113,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							}
						},
						{
							"id": 4294,
							"name": "positionStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 105,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustableConnectedPositionStrategy",
								"id": 3616
							}
						},
						{
							"id": 4292,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 103,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 4288,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Set NbMenu tag, which helps identify menu when working with NbMenuService."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbContextMenuTag'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 92,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4295,
							"name": "triggerStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 106,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "NbTriggerStrategy",
								"id": 3911
							}
						},
						{
							"id": 4289,
							"name": "setItems",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Basic menu items, will be passed to the internal NbMenuComponent."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbContextMenu'"
									}
								}
							],
							"setSignature": {
								"id": 4290,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Basic menu items, will be passed to the internal NbMenuComponent."
								},
								"parameters": [
									{
										"id": 4291,
										"name": "items",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 98,
									"character": 14
								}
							]
						},
						{
							"id": 4320,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4321,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 156,
									"character": 34
								}
							]
						},
						{
							"id": 4322,
							"name": "createTriggerStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4323,
									"name": "createTriggerStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 163,
									"character": 33
								}
							]
						},
						{
							"id": 4316,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4317,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 143,
									"character": 6
								}
							]
						},
						{
							"id": 4310,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4311,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 117,
									"character": 17
								}
							]
						},
						{
							"id": 4312,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4313,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 130,
									"character": 13
								}
							]
						},
						{
							"id": 4314,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4315,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 135,
									"character": 6
								}
							]
						},
						{
							"id": 4331,
							"name": "subscribeOnItemClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4332,
									"name": "subscribeOnItemClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 193,
									"character": 30
								}
							]
						},
						{
							"id": 4324,
							"name": "subscribeOnPositionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4325,
									"name": "subscribeOnPositionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 172,
									"character": 37
								}
							]
						},
						{
							"id": 4326,
							"name": "subscribeOnTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4327,
									"name": "subscribeOnTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 178,
									"character": 31
								}
							]
						},
						{
							"id": 4318,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4319,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 148,
									"character": 8
								}
							]
						},
						{
							"id": 4328,
							"name": "validateItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4329,
									"name": "validateItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4330,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/context-menu/context-menu.directive.ts",
									"line": 187,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4298
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4287,
								4296,
								4293,
								4299,
								4301,
								4297,
								4300,
								4303,
								4286,
								4302,
								4294,
								4292,
								4288,
								4295
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4289
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4320,
								4322,
								4316,
								4310,
								4312,
								4314,
								4331,
								4324,
								4326,
								4318,
								4328
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/context-menu/context-menu.directive.ts",
							"line": 71,
							"character": 35
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4285
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/context-menu/context-menu.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4333,
			"name": "\"theme/components/context-menu/context-menu.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/context-menu/context-menu.module.ts",
			"children": [
				{
					"id": 4334,
					"name": "NbContextMenuModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [CommonModule, NbOverlayModule, NbMenuModule],\n  exports: [NbContextMenuDirective],\n  declarations: [NbContextMenuDirective, NbContextMenuComponent],\n  entryComponents: [NbContextMenuComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/context-menu/context-menu.module.ts",
							"line": 22,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4334
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/context-menu/context-menu.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 6128,
			"name": "\"theme/components/datepicker/datepicker-adapter\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/datepicker/datepicker-adapter.ts",
			"children": [
				{
					"id": 6129,
					"name": "NbDateAdapterService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"typeParameter": [
						{
							"id": 6130,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 6132,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6134,
									"name": "new NbDateAdapterService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6135,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDateAdapterService",
										"id": 6129
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 17,
									"character": 65
								}
							]
						},
						{
							"id": 6133,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 19,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 6131,
							"name": "picker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 17,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbDatepickerComponent",
										"id": 5972,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"defaultValue": " NbDatepickerComponent",
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.picker",
								"id": 5767
							}
						},
						{
							"id": 6140,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6141,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 6142,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 6143,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepickerAdapter.format",
										"id": 5772
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 27,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.format",
								"id": 5772
							}
						},
						{
							"id": 6144,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6145,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 6146,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6147,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepickerAdapter.isValid",
										"id": 5776
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 31,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.isValid",
								"id": 5776
							}
						},
						{
							"id": 6136,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6137,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 6138,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6139,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepickerAdapter.parse",
										"id": 5768
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 23,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.parse",
								"id": 5768
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								6132
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6133,
								6131
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								6140,
								6144,
								6136
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker-adapter.ts",
							"line": 16,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbDatepickerAdapter",
							"id": 5765,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								}
							]
						}
					]
				},
				{
					"id": 6148,
					"name": "NbRangeAdapterService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"typeParameter": [
						{
							"id": 6149,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 6151,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6153,
									"name": "new NbRangeAdapterService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6154,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbRangeAdapterService",
										"id": 6148
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 38,
									"character": 67
								}
							]
						},
						{
							"id": 6152,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 40,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 6150,
							"name": "picker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 38,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbRangepickerComponent",
										"id": 6050,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"defaultValue": " NbRangepickerComponent",
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.picker",
								"id": 5767
							}
						},
						{
							"id": 6159,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6160,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 6161,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										},
										{
											"id": 6162,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepickerAdapter.format",
										"id": 5772
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 52,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.format",
								"id": 5772
							}
						},
						{
							"id": 6163,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6164,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 6165,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6166,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepickerAdapter.isValid",
										"id": 5776
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 67,
									"character": 9
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.isValid",
								"id": 5776
							}
						},
						{
							"id": 6155,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6156,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 6157,
											"name": "range",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6158,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbCalendarRange",
										"id": 2540,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepickerAdapter.parse",
										"id": 5768
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-adapter.ts",
									"line": 44,
									"character": 7
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepickerAdapter.parse",
								"id": 5768
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								6151
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6152,
								6150
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								6159,
								6163,
								6155
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker-adapter.ts",
							"line": 37,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbDatepickerAdapter",
							"id": 5765,
							"typeArguments": [
								{
									"type": "reference",
									"name": "NbCalendarRange",
									"id": 2540,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								}
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						6129,
						6148
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/datepicker/datepicker-adapter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5880,
			"name": "\"theme/components/datepicker/datepicker-container.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/datepicker/datepicker-container.component.ts",
			"children": [
				{
					"id": 5881,
					"name": "NbDatepickerContainerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-datepicker-container',\n  styleUrls: ['./datepicker-container.component.scss'],\n  template: `\n    <span class=\"arrow\"></span>\n    <ng-template nbPortalOutlet></ng-template>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 5882,
							"name": "portalOutlet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "NbPortalOutletDirective"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-container.component.ts",
									"line": 21,
									"character": 50
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPortalOutletDirective",
								"id": 2644
							}
						},
						{
							"id": 5887,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 7,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.position",
								"id": 3766
							}
						},
						{
							"id": 5892,
							"name": "bottom",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-bottom'"
									}
								}
							],
							"getSignature": {
								"id": 5893,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.bottom",
									"id": 3771
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 20,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.bottom",
								"id": 3771
							}
						},
						{
							"id": 5894,
							"name": "left",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-left'"
									}
								}
							],
							"getSignature": {
								"id": 5895,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.left",
									"id": 3773
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 25,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.left",
								"id": 3773
							}
						},
						{
							"id": 5890,
							"name": "right",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-right'"
									}
								}
							],
							"getSignature": {
								"id": 5891,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.right",
									"id": 3769
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 15,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.right",
								"id": 3769
							}
						},
						{
							"id": 5888,
							"name": "top",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-top'"
									}
								}
							],
							"getSignature": {
								"id": 5889,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.top",
									"id": 3767
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 10,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.top",
								"id": 3767
							}
						},
						{
							"id": 5883,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5884,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5885,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5886,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbComponentPortal",
												"id": 2732,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker-container.component.ts",
									"line": 23,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5882,
								5887
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5892,
								5894,
								5890,
								5888
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5883
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker-container.component.ts",
							"line": 20,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbPositionedContainer",
							"id": 3765
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5881
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/datepicker/datepicker-container.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5896,
			"name": "\"theme/components/datepicker/datepicker.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/datepicker/datepicker.component.ts",
			"children": [
				{
					"id": 5897,
					"name": "NbBasePicker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "The `NbBasePicker` component concentrates overlay manipulation logic."
					},
					"typeParameter": [
						{
							"id": 5898,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 5899,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 5900,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5925,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5929,
									"name": "new NbBasePicker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5930,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5931,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 5932,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbBasePicker",
										"id": 5897
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 151,
									"character": 21
								}
							]
						},
						{
							"id": 5923,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 145,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5902,
							"name": "boundingMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines if we should render previous and next months\nin the current month view."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 55,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5918,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Datepicker container that contains instantiated picker."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 122,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbDatepickerContainerComponent",
										"id": 5881
									}
								]
							}
						},
						{
							"id": 5910,
							"name": "dayCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 80,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 5926,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 153,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5906,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predicate that decides which cells will be disabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 75,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5907,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 5908,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5909,
													"name": "T",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/datepicker/datepicker.component.ts",
											"line": 75,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 5901,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Datepicker date format."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 49,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.format",
								"id": 5790
							}
						},
						{
							"id": 5915,
							"name": "hideOnSelect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hide picker when a date or a range is selected, `true` by default",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 107,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5920,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "HTML input reference to which datepicker connected."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 132,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5905,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 5904,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Minimum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 65,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 5911,
							"name": "monthCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom month cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 85,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 5921,
							"name": "onChange$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Stream of picker changes. Required to be the subject because picker hides and shows and picker\nchange stream becomes recreated."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 138,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 5928,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 155,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 5916,
							"name": "pickerClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true,
								"isAbstract": true
							},
							"comment": {
								"shortText": "Calendar component class that has to be instantiated inside overlay."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 112,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "P"
									}
								]
							}
						},
						{
							"id": 5922,
							"name": "pickerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Reference to the picker instance itself."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 143,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 5927,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 154,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							}
						},
						{
							"id": 5919,
							"name": "positionStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Positioning strategy used by overlay."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 127,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustableConnectedPositionStrategy",
								"id": 3616
							}
						},
						{
							"id": 5924,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Queue contains the last value that was applied to the picker when it was hidden.\nThis value will be passed to the picker as soon as it shown."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 151,
									"character": 17
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 5917,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Overlay reference object."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 117,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 5913,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the calendar and entire components.\nCan be 'medium' which is default or 'large'."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 96,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM"
						},
						{
							"id": 5903,
							"name": "startView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines starting view for calendar."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 60,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarViewMode",
								"id": 2067
							},
							"defaultValue": " NbCalendarViewMode.DATE"
						},
						{
							"id": 5914,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Depending on this date a particular month is selected in the calendar"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 101,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 5912,
							"name": "yearCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom year cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 90,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 5933,
							"name": "picker",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns picker instance."
							},
							"getSignature": {
								"id": 5934,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Returns picker instance."
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 162,
									"character": 12
								}
							]
						},
						{
							"id": 5937,
							"name": "pickerValueChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"getSignature": {
								"id": 5938,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "T"
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 173,
									"character": 42
								}
							]
						},
						{
							"id": 5968,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 5969,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "typeParameter",
									"name": "T"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbDatepicker.value",
									"id": 5791
								}
							},
							"setSignature": {
								"id": 5970,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 5971,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbDatepicker.value",
									"id": 5791
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 81,
									"character": 20
								},
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 83,
									"character": 20
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbDatepicker.value",
								"id": 5791
							}
						},
						{
							"id": 5935,
							"name": "valueChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Stream of picker value changes."
							},
							"getSignature": {
								"id": 5936,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Stream of picker value changes."
								},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "T"
										}
									]
								},
								"overwrites": {
									"type": "reference",
									"name": "NbDatepicker.valueChange",
									"id": 5795
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 169,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.valueChange",
								"id": 5795
							}
						},
						{
							"id": 5941,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5942,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Datepicker knows nothing about host html input element.\nSo, attach method attaches datepicker to the host input element."
									},
									"parameters": [
										{
											"id": 5943,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.attach",
										"id": 5797
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 185,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.attach",
								"id": 5797
							}
						},
						{
							"id": 5954,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5955,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 226,
									"character": 34
								}
							]
						},
						{
							"id": 5958,
							"name": "createTriggerStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5959,
									"name": "createTriggerStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 239,
									"character": 33
								}
							]
						},
						{
							"id": 5944,
							"name": "getValidatorConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5945,
									"name": "getValidatorConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbPickerValidatorConfig",
										"id": 5780,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.getValidatorConfig",
										"id": 5800
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 197,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.getValidatorConfig",
								"id": 5800
							}
						},
						{
							"id": 5950,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5951,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.hide",
										"id": 5804
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 213,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.hide",
								"id": 5804
							}
						},
						{
							"id": 5962,
							"name": "instantiatePicker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5963,
									"name": "instantiatePicker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 254,
									"character": 29
								}
							]
						},
						{
							"id": 5939,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5940,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 175,
									"character": 13
								}
							]
						},
						{
							"id": 5966,
							"name": "patchWithInputs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5967,
									"name": "patchWithInputs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 267,
									"character": 27
								}
							]
						},
						{
							"id": 5948,
							"name": "shouldHide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5949,
									"name": "shouldHide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.shouldHide",
										"id": 5806
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 209,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.shouldHide",
								"id": 5806
							}
						},
						{
							"id": 5946,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5947,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.show",
										"id": 5802
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 201,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.show",
								"id": 5802
							}
						},
						{
							"id": 5956,
							"name": "subscribeOnPositionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5957,
									"name": "subscribeOnPositionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 233,
									"character": 37
								}
							]
						},
						{
							"id": 5960,
							"name": "subscribeOnTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5961,
									"name": "subscribeOnTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 248,
									"character": 31
								}
							]
						},
						{
							"id": 5964,
							"name": "subscribeOnValueChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5965,
									"name": "subscribeOnValueChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribes on picker value changes and emit data through this.onChange$ subject."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 261,
									"character": 34
								}
							]
						},
						{
							"id": 5952,
							"name": "writeQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5953,
									"name": "writeQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 224,
									"character": 31
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5925
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5923,
								5902,
								5918,
								5910,
								5926,
								5906,
								5901,
								5915,
								5920,
								5905,
								5904,
								5911,
								5921,
								5928,
								5916,
								5922,
								5927,
								5919,
								5924,
								5917,
								5913,
								5903,
								5914,
								5912
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5933,
								5937,
								5968,
								5935
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5941,
								5954,
								5958,
								5944,
								5950,
								5962,
								5939,
								5966,
								5948,
								5946,
								5956,
								5960,
								5964,
								5952
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.component.ts",
							"line": 45,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbDatepicker",
							"id": 5788,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbDatepickerComponent",
							"id": 5972
						},
						{
							"type": "reference",
							"name": "NbRangepickerComponent",
							"id": 6050
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 5972,
					"name": "NbDatepickerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The DatePicker components itself.\nProvides a proxy to `NbCalendar` options as well as custom picker options."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-datepicker',\n  template: '',\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 5973,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 6011,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6015,
									"name": "new NbDatepickerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6016,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 6017,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 6018,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDatepickerComponent",
										"id": 5972
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.__constructor",
										"id": 5925
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 151,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.__constructor",
								"id": 5925
							}
						},
						{
							"id": 6009,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 145,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.alive",
								"id": 5923
							}
						},
						{
							"id": 5989,
							"name": "boundingMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines if we should render previous and next months\nin the current month view."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 55,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.boundingMonth",
								"id": 5902
							}
						},
						{
							"id": 6004,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Datepicker container that contains instantiated picker."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 122,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbDatepickerContainerComponent",
										"id": 5881
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.container",
								"id": 5918
							}
						},
						{
							"id": 5997,
							"name": "dayCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 80,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.dayCellComponent",
								"id": 5910
							}
						},
						{
							"id": 6012,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 153,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.document",
								"id": 5926
							}
						},
						{
							"id": 5993,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predicate that decides which cells will be disabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 75,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5994,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 5995,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5996,
													"name": "T",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/datepicker/datepicker.component.ts",
											"line": 75,
											"character": 18
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.filter",
								"id": 5906
							}
						},
						{
							"id": 5988,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Datepicker date format."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 49,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.format",
								"id": 5790
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.format",
								"id": 5901
							}
						},
						{
							"id": 6002,
							"name": "hideOnSelect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hide picker when a date or a range is selected, `true` by default",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 107,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.hideOnSelect",
								"id": 5915
							}
						},
						{
							"id": 6006,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "HTML input reference to which datepicker connected."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 132,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.hostRef",
								"id": 5920
							}
						},
						{
							"id": 5992,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.max",
								"id": 5905
							}
						},
						{
							"id": 5991,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Minimum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 65,
									"character": 14
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.min",
								"id": 5904
							}
						},
						{
							"id": 5998,
							"name": "monthCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom month cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 85,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.monthCellComponent",
								"id": 5911
							}
						},
						{
							"id": 6007,
							"name": "onChange$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Stream of picker changes. Required to be the subject because picker hides and shows and picker\nchange stream becomes recreated."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 138,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"defaultValue": " new Subject()",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.onChange$",
								"id": 5921
							}
						},
						{
							"id": 6014,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 155,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.overlay",
								"id": 5928
							}
						},
						{
							"id": 5974,
							"name": "pickerClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 290,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarComponent",
										"id": 2394,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"defaultValue": " NbCalendarComponent",
							"overwrites": {
								"type": "reference",
								"name": "NbBasePicker.pickerClass",
								"id": 5916
							}
						},
						{
							"id": 6008,
							"name": "pickerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Reference to the picker instance itself."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 143,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.pickerRef",
								"id": 5922
							}
						},
						{
							"id": 6013,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 154,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.positionBuilder",
								"id": 5927
							}
						},
						{
							"id": 6005,
							"name": "positionStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Positioning strategy used by overlay."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 127,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustableConnectedPositionStrategy",
								"id": 3616
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.positionStrategy",
								"id": 5919
							}
						},
						{
							"id": 6010,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Queue contains the last value that was applied to the picker when it was hidden.\nThis value will be passed to the picker as soon as it shown."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 151,
									"character": 17
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.queue",
								"id": 5924
							}
						},
						{
							"id": 6003,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Overlay reference object."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 117,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.ref",
								"id": 5917
							}
						},
						{
							"id": 6000,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the calendar and entire components.\nCan be 'medium' which is default or 'large'."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 96,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.size",
								"id": 5913
							}
						},
						{
							"id": 5990,
							"name": "startView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines starting view for calendar."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 60,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarViewMode",
								"id": 2067
							},
							"defaultValue": " NbCalendarViewMode.DATE",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.startView",
								"id": 5903
							}
						},
						{
							"id": 6001,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Depending on this date a particular month is selected in the calendar"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 101,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.visibleDate",
								"id": 5914
							}
						},
						{
							"id": 5999,
							"name": "yearCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom year cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 90,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.yearCellComponent",
								"id": 5912
							}
						},
						{
							"id": 5975,
							"name": "date",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Date which will be rendered as selected."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 5976,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Date which will be rendered as selected."
								},
								"parameters": [
									{
										"id": 5977,
										"name": "date",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "typeParameter",
											"name": "D"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 295,
									"character": 19
								}
							]
						},
						{
							"id": 5978,
							"name": "dateChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits date when selected."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"getSignature": {
								"id": 5979,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Emits date when selected."
								},
								"type": {
									"type": "reference",
									"name": "EventEmitter",
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 302,
									"character": 26
								}
							]
						},
						{
							"id": 6019,
							"name": "picker",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns picker instance."
							},
							"getSignature": {
								"id": 6020,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Returns picker instance."
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbBasePicker.picker",
									"id": 5933
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 162,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.picker",
								"id": 5933
							}
						},
						{
							"id": 5984,
							"name": "pickerValueChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"getSignature": {
								"id": 5985,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								},
								"overwrites": {
									"type": "reference",
									"name": "NbBasePicker.pickerValueChange",
									"id": 5937
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 322,
									"character": 33
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbBasePicker.pickerValueChange",
								"id": 5937
							}
						},
						{
							"id": 5980,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 5981,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "typeParameter",
									"name": "D"
								},
								"overwrites": {
									"type": "reference",
									"name": "NbDatepicker.value",
									"id": 5791
								}
							},
							"setSignature": {
								"id": 5982,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 5983,
										"name": "date",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "typeParameter",
											"name": "D"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								},
								"overwrites": {
									"type": "reference",
									"name": "NbDatepicker.value",
									"id": 5791
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 306,
									"character": 11
								},
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 310,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.value",
								"id": 5791
							}
						},
						{
							"id": 6021,
							"name": "valueChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Stream of picker value changes."
							},
							"getSignature": {
								"id": 6022,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Stream of picker value changes."
								},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								},
								"overwrites": {
									"type": "reference",
									"name": "NbDatepicker.valueChange",
									"id": 5795
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbBasePicker.valueChange",
									"id": 5935
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 169,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.valueChange",
								"id": 5795
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.valueChange",
								"id": 5935
							}
						},
						{
							"id": 6025,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6026,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Datepicker knows nothing about host html input element.\nSo, attach method attaches datepicker to the host input element."
									},
									"parameters": [
										{
											"id": 6027,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.attach",
										"id": 5797
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.attach",
										"id": 5941
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 185,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.attach",
								"id": 5797
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.attach",
								"id": 5941
							}
						},
						{
							"id": 6036,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6037,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.createPositionStrategy",
										"id": 5954
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 226,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.createPositionStrategy",
								"id": 5954
							}
						},
						{
							"id": 6040,
							"name": "createTriggerStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6041,
									"name": "createTriggerStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.createTriggerStrategy",
										"id": 5958
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 239,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.createTriggerStrategy",
								"id": 5958
							}
						},
						{
							"id": 6028,
							"name": "getValidatorConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6029,
									"name": "getValidatorConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbPickerValidatorConfig",
										"id": 5780,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.getValidatorConfig",
										"id": 5800
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.getValidatorConfig",
										"id": 5944
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 197,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.getValidatorConfig",
								"id": 5800
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.getValidatorConfig",
								"id": 5944
							}
						},
						{
							"id": 6034,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6035,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.hide",
										"id": 5804
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.hide",
										"id": 5950
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 213,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.hide",
								"id": 5804
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.hide",
								"id": 5950
							}
						},
						{
							"id": 6044,
							"name": "instantiatePicker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6045,
									"name": "instantiatePicker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.instantiatePicker",
										"id": 5962
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 254,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.instantiatePicker",
								"id": 5962
							}
						},
						{
							"id": 6023,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6024,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.ngOnDestroy",
										"id": 5939
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 175,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.ngOnDestroy",
								"id": 5939
							}
						},
						{
							"id": 6048,
							"name": "patchWithInputs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6049,
									"name": "patchWithInputs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.patchWithInputs",
										"id": 5966
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 267,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.patchWithInputs",
								"id": 5966
							}
						},
						{
							"id": 6032,
							"name": "shouldHide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6033,
									"name": "shouldHide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.shouldHide",
										"id": 5806
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.shouldHide",
										"id": 5948
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 209,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.shouldHide",
								"id": 5806
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.shouldHide",
								"id": 5948
							}
						},
						{
							"id": 6030,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6031,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.show",
										"id": 5802
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.show",
										"id": 5946
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 201,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.show",
								"id": 5802
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.show",
								"id": 5946
							}
						},
						{
							"id": 6038,
							"name": "subscribeOnPositionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6039,
									"name": "subscribeOnPositionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.subscribeOnPositionChange",
										"id": 5956
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 233,
									"character": 37
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.subscribeOnPositionChange",
								"id": 5956
							}
						},
						{
							"id": 6042,
							"name": "subscribeOnTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6043,
									"name": "subscribeOnTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.subscribeOnTriggers",
										"id": 5960
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 248,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.subscribeOnTriggers",
								"id": 5960
							}
						},
						{
							"id": 6046,
							"name": "subscribeOnValueChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6047,
									"name": "subscribeOnValueChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribes on picker value changes and emit data through this.onChange$ subject."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.subscribeOnValueChange",
										"id": 5964
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 261,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.subscribeOnValueChange",
								"id": 5964
							}
						},
						{
							"id": 5986,
							"name": "writeQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5987,
									"name": "writeQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbBasePicker.writeQueue",
										"id": 5952
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 326,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbBasePicker.writeQueue",
								"id": 5952
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								6011
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6009,
								5989,
								6004,
								5997,
								6012,
								5993,
								5988,
								6002,
								6006,
								5992,
								5991,
								5998,
								6007,
								6014,
								5974,
								6008,
								6013,
								6005,
								6010,
								6003,
								6000,
								5990,
								6001,
								5999
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5975,
								5978,
								6019,
								5984,
								5980,
								6021
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								6025,
								6036,
								6040,
								6028,
								6034,
								6044,
								6023,
								6048,
								6032,
								6030,
								6038,
								6042,
								6046,
								5986
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.component.ts",
							"line": 289,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbBasePicker",
							"id": 5897,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "reference",
									"name": "NbCalendarComponent",
									"id": 2394,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								}
							]
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 6050,
					"name": "NbRangepickerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The RangeDatePicker components itself.\nProvides a proxy to `NbCalendarRange` options as well as custom picker options."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-rangepicker',\n  template: '',\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 6051,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 6091,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6095,
									"name": "new NbRangepickerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6096,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 6097,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 6098,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbRangepickerComponent",
										"id": 6050
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.__constructor",
										"id": 5925
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 151,
									"character": 21
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.__constructor",
								"id": 5925
							}
						},
						{
							"id": 6089,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 145,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.alive",
								"id": 5923
							}
						},
						{
							"id": 6069,
							"name": "boundingMonth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines if we should render previous and next months\nin the current month view."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 55,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.boundingMonth",
								"id": 5902
							}
						},
						{
							"id": 6084,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Datepicker container that contains instantiated picker."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 122,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbDatepickerContainerComponent",
										"id": 5881
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.container",
								"id": 5918
							}
						},
						{
							"id": 6077,
							"name": "dayCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom day cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 80,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.dayCellComponent",
								"id": 5910
							}
						},
						{
							"id": 6092,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 153,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.document",
								"id": 5926
							}
						},
						{
							"id": 6073,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predicate that decides which cells will be disabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 75,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6074,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 6075,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 6076,
													"name": "T",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/datepicker/datepicker.component.ts",
											"line": 75,
											"character": 18
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.filter",
								"id": 5906
							}
						},
						{
							"id": 6068,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Datepicker date format."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 49,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.format",
								"id": 5790
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.format",
								"id": 5901
							}
						},
						{
							"id": 6082,
							"name": "hideOnSelect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hide picker when a date or a range is selected, `true` by default",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 107,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.hideOnSelect",
								"id": 5915
							}
						},
						{
							"id": 6086,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "HTML input reference to which datepicker connected."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 132,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.hostRef",
								"id": 5920
							}
						},
						{
							"id": 6072,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarRange",
								"id": 2540,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.max",
								"id": 5905
							}
						},
						{
							"id": 6071,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Minimum available date for selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 65,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarRange",
								"id": 2540,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.min",
								"id": 5904
							}
						},
						{
							"id": 6078,
							"name": "monthCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom month cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 85,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.monthCellComponent",
								"id": 5911
							}
						},
						{
							"id": 6087,
							"name": "onChange$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Stream of picker changes. Required to be the subject because picker hides and shows and picker\nchange stream becomes recreated."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 138,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarRange",
										"id": 2540,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"defaultValue": " new Subject()",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.onChange$",
								"id": 5921
							}
						},
						{
							"id": 6094,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 155,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.overlay",
								"id": 5928
							}
						},
						{
							"id": 6052,
							"name": "pickerClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 340,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarRangeComponent",
										"id": 2544,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											}
										]
									}
								]
							},
							"defaultValue": " NbCalendarRangeComponent",
							"overwrites": {
								"type": "reference",
								"name": "NbBasePicker.pickerClass",
								"id": 5916
							}
						},
						{
							"id": 6088,
							"name": "pickerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Reference to the picker instance itself."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 143,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.pickerRef",
								"id": 5922
							}
						},
						{
							"id": 6093,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 154,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.positionBuilder",
								"id": 5927
							}
						},
						{
							"id": 6085,
							"name": "positionStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Positioning strategy used by overlay."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 127,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustableConnectedPositionStrategy",
								"id": 3616
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.positionStrategy",
								"id": 5919
							}
						},
						{
							"id": 6090,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Queue contains the last value that was applied to the picker when it was hidden.\nThis value will be passed to the picker as soon as it shown."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 151,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarRange",
								"id": 2540,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.queue",
								"id": 5924
							}
						},
						{
							"id": 6083,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Overlay reference object."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 117,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.ref",
								"id": 5917
							}
						},
						{
							"id": 6080,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the calendar and entire components.\nCan be 'medium' which is default or 'large'."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 96,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarSize",
								"id": 2071
							},
							"defaultValue": " NbCalendarSize.MEDIUM",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.size",
								"id": 5913
							}
						},
						{
							"id": 6070,
							"name": "startView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines starting view for calendar."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 60,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbCalendarViewMode",
								"id": 2067
							},
							"defaultValue": " NbCalendarViewMode.DATE",
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.startView",
								"id": 5903
							}
						},
						{
							"id": 6081,
							"name": "visibleDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Depending on this date a particular month is selected in the calendar"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 101,
									"character": 22
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.visibleDate",
								"id": 5914
							}
						},
						{
							"id": 6079,
							"name": "yearCellComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom year cell component. Have to implement `NbCalendarCell` interface."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 90,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbCalendarCell",
										"id": 2074,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.yearCellComponent",
								"id": 5912
							}
						},
						{
							"id": 6099,
							"name": "picker",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns picker instance."
							},
							"getSignature": {
								"id": 6100,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Returns picker instance."
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbBasePicker.picker",
									"id": 5933
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 162,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.picker",
								"id": 5933
							}
						},
						{
							"id": 6064,
							"name": "pickerValueChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"getSignature": {
								"id": 6065,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "reference",
											"name": "NbCalendarRange",
											"id": 2540,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "D"
												}
											]
										}
									]
								},
								"overwrites": {
									"type": "reference",
									"name": "NbBasePicker.pickerValueChange",
									"id": 5937
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 376,
									"character": 33
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbBasePicker.pickerValueChange",
								"id": 5937
							}
						},
						{
							"id": 6053,
							"name": "range",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Range which will be rendered as selected."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 6054,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Range which will be rendered as selected."
								},
								"parameters": [
									{
										"id": 6055,
										"name": "range",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "NbCalendarRange",
											"id": 2540,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "D"
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 345,
									"character": 20
								}
							]
						},
						{
							"id": 6056,
							"name": "rangeChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits range when start selected and emits again when end selected."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"getSignature": {
								"id": 6057,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Emits range when start selected and emits again when end selected."
								},
								"type": {
									"type": "reference",
									"name": "EventEmitter",
									"typeArguments": [
										{
											"type": "reference",
											"name": "NbCalendarRange",
											"id": 2540,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "D"
												}
											]
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 352,
									"character": 27
								}
							]
						},
						{
							"id": 6058,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 6059,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "NbCalendarRange",
									"id": 2540,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								},
								"overwrites": {
									"type": "reference",
									"name": "NbDatepicker.value",
									"id": 5791
								}
							},
							"setSignature": {
								"id": 6060,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 6061,
										"name": "range",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "NbCalendarRange",
											"id": 2540,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "D"
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								},
								"overwrites": {
									"type": "reference",
									"name": "NbDatepicker.value",
									"id": 5791
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 356,
									"character": 11
								},
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 360,
									"character": 11
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.value",
								"id": 5791
							}
						},
						{
							"id": 6101,
							"name": "valueChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Stream of picker value changes."
							},
							"getSignature": {
								"id": 6102,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Stream of picker value changes."
								},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "reference",
											"name": "NbCalendarRange",
											"id": 2540,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "D"
												}
											]
										}
									]
								},
								"overwrites": {
									"type": "reference",
									"name": "NbDatepicker.valueChange",
									"id": 5795
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbBasePicker.valueChange",
									"id": 5935
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 169,
									"character": 17
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.valueChange",
								"id": 5795
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.valueChange",
								"id": 5935
							}
						},
						{
							"id": 6105,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6106,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Datepicker knows nothing about host html input element.\nSo, attach method attaches datepicker to the host input element."
									},
									"parameters": [
										{
											"id": 6107,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.attach",
										"id": 5797
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.attach",
										"id": 5941
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 185,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.attach",
								"id": 5797
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.attach",
								"id": 5941
							}
						},
						{
							"id": 6114,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6115,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.createPositionStrategy",
										"id": 5954
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 226,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.createPositionStrategy",
								"id": 5954
							}
						},
						{
							"id": 6118,
							"name": "createTriggerStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6119,
									"name": "createTriggerStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.createTriggerStrategy",
										"id": 5958
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 239,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.createTriggerStrategy",
								"id": 5958
							}
						},
						{
							"id": 6108,
							"name": "getValidatorConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6109,
									"name": "getValidatorConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbPickerValidatorConfig",
										"id": 5780,
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbCalendarRange",
												"id": 2540,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.getValidatorConfig",
										"id": 5800
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.getValidatorConfig",
										"id": 5944
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 197,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.getValidatorConfig",
								"id": 5800
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.getValidatorConfig",
								"id": 5944
							}
						},
						{
							"id": 6112,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6113,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.hide",
										"id": 5804
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.hide",
										"id": 5950
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 213,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.hide",
								"id": 5804
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.hide",
								"id": 5950
							}
						},
						{
							"id": 6122,
							"name": "instantiatePicker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6123,
									"name": "instantiatePicker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.instantiatePicker",
										"id": 5962
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 254,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.instantiatePicker",
								"id": 5962
							}
						},
						{
							"id": 6103,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6104,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.ngOnDestroy",
										"id": 5939
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 175,
									"character": 13
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.ngOnDestroy",
								"id": 5939
							}
						},
						{
							"id": 6126,
							"name": "patchWithInputs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6127,
									"name": "patchWithInputs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.patchWithInputs",
										"id": 5966
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 267,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.patchWithInputs",
								"id": 5966
							}
						},
						{
							"id": 6062,
							"name": "shouldHide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6063,
									"name": "shouldHide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbBasePicker.shouldHide",
										"id": 5948
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 372,
									"character": 12
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbBasePicker.shouldHide",
								"id": 5948
							}
						},
						{
							"id": 6110,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 6111,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbDatepicker.show",
										"id": 5802
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.show",
										"id": 5946
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 201,
									"character": 6
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbDatepicker.show",
								"id": 5802
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.show",
								"id": 5946
							}
						},
						{
							"id": 6116,
							"name": "subscribeOnPositionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6117,
									"name": "subscribeOnPositionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.subscribeOnPositionChange",
										"id": 5956
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 233,
									"character": 37
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.subscribeOnPositionChange",
								"id": 5956
							}
						},
						{
							"id": 6120,
							"name": "subscribeOnTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6121,
									"name": "subscribeOnTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.subscribeOnTriggers",
										"id": 5960
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 248,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.subscribeOnTriggers",
								"id": 5960
							}
						},
						{
							"id": 6124,
							"name": "subscribeOnValueChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6125,
									"name": "subscribeOnValueChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribes on picker value changes and emit data through this.onChange$ subject."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NbBasePicker.subscribeOnValueChange",
										"id": 5964
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 261,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbBasePicker.subscribeOnValueChange",
								"id": 5964
							}
						},
						{
							"id": 6066,
							"name": "writeQueue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 6067,
									"name": "writeQueue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "NbBasePicker.writeQueue",
										"id": 5952
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.component.ts",
									"line": 380,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "NbBasePicker.writeQueue",
								"id": 5952
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								6091
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6089,
								6069,
								6084,
								6077,
								6092,
								6073,
								6068,
								6082,
								6086,
								6072,
								6071,
								6078,
								6087,
								6094,
								6052,
								6088,
								6093,
								6085,
								6090,
								6083,
								6080,
								6070,
								6081,
								6079
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								6099,
								6064,
								6053,
								6056,
								6058,
								6101
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								6105,
								6114,
								6118,
								6108,
								6112,
								6122,
								6103,
								6126,
								6062,
								6110,
								6116,
								6120,
								6124,
								6066
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.component.ts",
							"line": 339,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbBasePicker",
							"id": 5897,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "D"
								},
								{
									"type": "reference",
									"name": "NbCalendarRange",
									"id": 2540,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								},
								{
									"type": "reference",
									"name": "NbCalendarRangeComponent",
									"id": 2544,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								}
							]
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5897,
						5972,
						6050
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/datepicker/datepicker.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5764,
			"name": "\"theme/components/datepicker/datepicker.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/datepicker/datepicker.directive.ts",
			"children": [
				{
					"id": 5788,
					"name": "NbDatepicker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Datepicker is an control that can pick any values anyway.\nIt has to be bound to the datepicker directive through nbDatepicker input."
					},
					"typeParameter": [
						{
							"id": 5789,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5790,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"comment": {
								"shortText": "HTML input element date format."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 79,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5791,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 5792,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "typeParameter",
									"name": "T"
								}
							},
							"setSignature": {
								"id": 5793,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 5794,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 81,
									"character": 20
								},
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 83,
									"character": 20
								}
							]
						},
						{
							"id": 5795,
							"name": "valueChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 5796,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "T"
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 85,
									"character": 26
								}
							]
						},
						{
							"id": 5797,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5798,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches datepicker to the native input element."
									},
									"parameters": [
										{
											"id": 5799,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 90,
									"character": 17
								}
							]
						},
						{
							"id": 5800,
							"name": "getValidatorConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5801,
									"name": "getValidatorConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns validator configuration based on the input properties."
									},
									"type": {
										"type": "reference",
										"name": "NbPickerValidatorConfig",
										"id": 5780,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 95,
									"character": 29
								}
							]
						},
						{
							"id": 5804,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5805,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 99,
									"character": 15
								}
							]
						},
						{
							"id": 5806,
							"name": "shouldHide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5807,
									"name": "shouldHide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 101,
									"character": 21
								}
							]
						},
						{
							"id": 5802,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5803,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 97,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5790
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5791,
								5795
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5797,
								5800,
								5804,
								5806,
								5802
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.directive.ts",
							"line": 75,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbBasePicker",
							"id": 5897
						}
					]
				},
				{
					"id": 5765,
					"name": "NbDatepickerAdapter",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "The `NbDatepickerAdapter` instances provide way how to parse, format and validate\ndifferent date types."
					},
					"typeParameter": [
						{
							"id": 5766,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5767,
							"name": "picker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"comment": {
								"shortText": "Picker component class."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 33,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Type",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 5772,
							"name": "format",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5773,
									"name": "format",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Format date according to the format."
									},
									"parameters": [
										{
											"id": 5774,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										},
										{
											"id": 5775,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 43,
									"character": 17
								}
							]
						},
						{
							"id": 5776,
							"name": "isValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5777,
									"name": "isValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validates date string according to the passed format."
									},
									"parameters": [
										{
											"id": 5778,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5779,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 48,
									"character": 18
								}
							]
						},
						{
							"id": 5768,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 5769,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parse date string according to the format."
									},
									"parameters": [
										{
											"id": 5770,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5771,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "D"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 38,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5767
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5772,
								5776,
								5768
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.directive.ts",
							"line": 29,
							"character": 41
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NbDateAdapterService",
							"id": 6129
						},
						{
							"type": "reference",
							"name": "NbRangeAdapterService",
							"id": 6148
						}
					]
				},
				{
					"id": 5808,
					"name": "NbDatepickerDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbDatepickerDirective` is form control that gives you ability to select dates and ranges. The datepicker\nis shown when input receives a `focus` event.",
						"text": "```html\n<input [nbDatepicker]=\"datepicker\">\n<nb-datepicker #datepicker></nb-datepicker>\n```\n",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "datepicker/datepicker-showcase.component)\n\nIf you want to use range selection, you have to use `NbRangepickerComponent` instead:\n\n```html\n<input [nbDatepicker]=\"rangepicker\">\n<nb-rangepicker #rangepicker></nb-rangepicker>\n```\n\nBoth range and date pickers support all parameters as calendar, so, check `NbCalendarComponent` for additional\ninfo.\n"
							},
							{
								"tag": "stacked-example(range",
								"text": "showcase, datepicker/rangepicker-showcase.component)\n\nDatepicker is the form control so it can be bound with angular forms through ngModel and form controls.\n"
							},
							{
								"tag": "stacked-example(forms,",
								"text": "datepicker/datepicker-forms.component)\n\n`NbDatepickerDirective` may be validated using `min` and `max` dates passed to the datepicker.\nAnd `filter` predicate that receives date object and has to return a boolean value.\n"
							},
							{
								"tag": "stacked-example(validation,",
								"text": "datepicker/datepicker-validation.component)\n\nThe `NbDatepickerComponent` supports date formatting:\n\n```html\n<input [nbDatepicker]=\"datepicker\">\n<nb-datepicker #datepicker format=\"MM\\dd\\yyyy\"></nb-datepicker>\n```\n\n## Formatting Issue\n\nBy default, datepicker uses angulars `LOCALE_ID` token for localization and `DatePipe` for dates formatting.\nAnd native `Date.parse(...)` for dates parsing. But native `Date.parse` function doesn't support formats.\nTo provide custom formatting you have to use one of the following packages:\n\n- `@nebular/moment` - provides moment date adapter that uses moment for date objects. This means datepicker than\nwill operate only moment date objects. If you want to use it you have to install it: `npm i @nebular/moment`, and\nimport `NbMomentDateModule` from this package.\n\n- `@nebular/date-fns` - adapter for popular date-fns library. This way is preferred if you need only date formatting.\nBecause date-fns is treeshakable, tiny and operates native date objects. If you want to use it you have to\ninstall it: `npm i @nebular/date-fns`, and import `NbDateFnsDateModule` from this package.\n"
							},
							{
								"tag": "styles",
								"text": "\n\ndatepicker-fg\ndatepicker-bg\ndatepicker-border\ndatepicker-border-radius\ndatepicker-shadow\ndatepicker-arrow-size\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{\n  selector: 'input[nbDatepicker]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbDatepickerDirective),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => NbDatepickerDirective),\n      multi: true,\n    },\n  ],\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 5809,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5819,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5824,
									"name": "new NbDatepickerDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5825,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5826,
											"name": "datepickerAdapters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DATE_ADAPTER"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbDatepickerAdapter",
													"id": 5765,
													"typeArguments": [
														{
															"type": "typeParameter",
															"name": "D"
														}
													]
												}
											}
										},
										{
											"id": 5827,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 5828,
											"name": "dateService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDateService",
												"id": 1747,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDatepickerDirective",
										"id": 5808
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 215,
									"character": 30
								}
							]
						},
						{
							"id": 5815,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 203,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5823,
							"name": "dateService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 220,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDateService",
								"id": 1747,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 5813,
							"name": "datepickerAdapter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Datepicker adapter."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 197,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDatepickerAdapter",
								"id": 5765,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 5821,
							"name": "datepickerAdapters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DATE_ADAPTER"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 218,
									"character": 67
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbDatepickerAdapter",
									"id": 5765,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "D"
										}
									]
								}
							}
						},
						{
							"id": 5820,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 217,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5822,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 219,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5814,
							"name": "picker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Datepicker instance."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 202,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDatepicker",
								"id": 5788,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "D"
									}
								]
							}
						},
						{
							"id": 5818,
							"name": "validator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Form control validators will be called in validators context, so, we need to bind them."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 210,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ValidatorFn"
							},
							"defaultValue": " Validators.compose([\n    this.parseValidator,\n    this.minValidator,\n    this.maxValidator,\n    this.filterValidator,\n  ].map(fn => fn.bind(this)))"
						},
						{
							"id": 5829,
							"name": "input",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns html input element."
							},
							"getSignature": {
								"id": 5830,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Returns html input element."
								},
								"type": {
									"type": "reference",
									"name": "HTMLInputElement"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 227,
									"character": 11
								}
							]
						},
						{
							"id": 5831,
							"name": "inputValue",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns host input value."
							},
							"getSignature": {
								"id": 5832,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Returns host input value."
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 234,
									"character": 16
								}
							]
						},
						{
							"id": 5810,
							"name": "setPicker",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Provides datepicker component."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbDatepicker'"
									}
								}
							],
							"setSignature": {
								"id": 5811,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Provides datepicker component."
								},
								"parameters": [
									{
										"id": 5812,
										"name": "picker",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "NbDatepicker",
											"id": 5788,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "D"
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 189,
									"character": 15
								}
							]
						},
						{
							"id": 5859,
							"name": "chooseDatepickerAdapter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5860,
									"name": "chooseDatepickerAdapter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Chooses datepicker adapter based on passed picker component."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 316,
									"character": 35
								}
							]
						},
						{
							"id": 5857,
							"name": "filterValidator",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5858,
									"name": "filterValidator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validates passed value satisfy the filter."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ValidationErrors"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 306,
									"character": 27
								}
							]
						},
						{
							"id": 5873,
							"name": "handleInputChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5874,
									"name": "handleInputChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parses input value and write if it isn't null."
									},
									"parameters": [
										{
											"id": 5875,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 376,
									"character": 29
								}
							]
						},
						{
							"id": 5849,
							"name": "hidePicker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5850,
									"name": "hidePicker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hides picker, focuses the input"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 270,
									"character": 22
								}
							]
						},
						{
							"id": 5855,
							"name": "maxValidator",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5856,
									"name": "maxValidator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validates passed value is smaller than max."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ValidationErrors"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 296,
									"character": 24
								}
							]
						},
						{
							"id": 5853,
							"name": "minValidator",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5854,
									"name": "minValidator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validates passed value is greater than min."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ValidationErrors"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 286,
									"character": 24
								}
							]
						},
						{
							"id": 5833,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5834,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 238,
									"character": 13
								}
							]
						},
						{
							"id": 5869,
							"name": "noDatepickerAdapterProvided",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5870,
									"name": "noDatepickerAdapterProvided",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validates if no datepicker adapter provided."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 360,
									"character": 39
								}
							]
						},
						{
							"id": 5816,
							"name": "onChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5817,
									"name": "onChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 204,
									"character": 20
								}
							]
						},
						{
							"id": 5876,
							"name": "parseInputValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5877,
									"name": "parseInputValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5878,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "D"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 383,
									"character": 27
								}
							]
						},
						{
							"id": 5851,
							"name": "parseValidator",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5852,
									"name": "parseValidator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Validates that we can parse value correctly."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ValidationErrors"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 278,
									"character": 26
								}
							]
						},
						{
							"id": 5838,
							"name": "registerOnChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5839,
									"name": "registerOnChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5840,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 250,
									"character": 18
								}
							]
						},
						{
							"id": 5841,
							"name": "registerOnTouched",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5842,
									"name": "registerOnTouched",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5843,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 254,
									"character": 19
								}
							]
						},
						{
							"id": 5844,
							"name": "setDisabledState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5845,
									"name": "setDisabledState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5846,
											"name": "isDisabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 257,
									"character": 18
								}
							]
						},
						{
							"id": 5861,
							"name": "setupPicker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5862,
									"name": "setupPicker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Attaches picker to the host input element and subscribes on value changes."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 327,
									"character": 23
								}
							]
						},
						{
							"id": 5871,
							"name": "subscribeOnInputChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5872,
									"name": "subscribeOnInputChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 364,
									"character": 34
								}
							]
						},
						{
							"id": 5847,
							"name": "validate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5848,
									"name": "validate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Form control validation based on picker validator config."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ValidationErrors"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 263,
									"character": 10
								}
							]
						},
						{
							"id": 5866,
							"name": "writeInput",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5867,
									"name": "writeInput",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5868,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 352,
									"character": 22
								}
							]
						},
						{
							"id": 5863,
							"name": "writePicker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5864,
									"name": "writePicker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5865,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 348,
									"character": 23
								}
							]
						},
						{
							"id": 5835,
							"name": "writeValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5836,
									"name": "writeValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Writes value in picker and html input element."
									},
									"parameters": [
										{
											"id": 5837,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "D"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 245,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5819
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5815,
								5823,
								5813,
								5821,
								5820,
								5822,
								5814,
								5818
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5829,
								5831,
								5810
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5859,
								5857,
								5873,
								5849,
								5855,
								5853,
								5833,
								5869,
								5816,
								5876,
								5851,
								5838,
								5841,
								5844,
								5861,
								5871,
								5847,
								5866,
								5863,
								5835
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.directive.ts",
							"line": 184,
							"character": 34
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnDestroy"
						},
						{
							"type": "reference",
							"name": "ControlValueAccessor"
						},
						{
							"type": "reference",
							"name": "Validator"
						}
					]
				},
				{
					"id": 5780,
					"name": "NbPickerValidatorConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Validators config that will be used by form control to perform proper validation."
					},
					"typeParameter": [
						{
							"id": 5781,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5784,
							"name": "filter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Predicate that determines is value available for picking."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 68,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5785,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 5786,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 5787,
													"name": "D",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "theme/components/datepicker/datepicker.directive.ts",
											"line": 68,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 5783,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Maximum date available in picker."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 63,
									"character": 5
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 5782,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Minimum date available in picker."
							},
							"sources": [
								{
									"fileName": "theme/components/datepicker/datepicker.directive.ts",
									"line": 58,
									"character": 5
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5784,
								5783,
								5782
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.directive.ts",
							"line": 54,
							"character": 40
						}
					]
				},
				{
					"id": 5879,
					"name": "NB_DATE_ADAPTER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.directive.ts",
							"line": 104,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbDatepickerAdapter",
								"id": 5765,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						]
					},
					"defaultValue": " new InjectionToken<NbDatepickerAdapter<any>>('Datepicker Adapter')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5788,
						5765,
						5808
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5780
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5879
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/datepicker/datepicker.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 6167,
			"name": "\"theme/components/datepicker/datepicker.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/datepicker/datepicker.module.ts",
			"children": [
				{
					"id": 6168,
					"name": "NbDatepickerModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbOverlayModule, NbCalendarModule, NbCalendarRangeModule],\n  exports: [NbDatepickerDirective, NbDatepickerComponent, NbRangepickerComponent],\n  declarations: [NbDatepickerDirective, NbDatepickerContainerComponent, NbDatepickerComponent, NbRangepickerComponent],\n  entryComponents: [NbCalendarComponent, NbCalendarRangeComponent, NbDatepickerContainerComponent],\n  providers: [\n    DatePipe,\n    {\n      provide: NB_DATE_ADAPTER,\n      multi: true,\n      useClass: NbDateAdapterService,\n    },\n    {\n      provide: NB_DATE_ADAPTER,\n      multi: true,\n      useClass: NbRangeAdapterService,\n    },\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/datepicker/datepicker.module.ts",
							"line": 40,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						6168
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/datepicker/datepicker.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5107,
			"name": "\"theme/components/dialog/dialog-config\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/dialog/dialog-config.ts",
			"children": [
				{
					"id": 5108,
					"name": "NbDialogConfig",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Describes all available options that may be passed to the NbDialogService."
					},
					"typeParameter": [
						{
							"id": 5109,
							"name": "D",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5118,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5119,
									"name": "new NbDialogConfig",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5120,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbDialogConfig",
														"id": 5108
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDialogConfig",
										"id": 5108
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 54,
									"character": 13
								}
							]
						},
						{
							"id": 5115,
							"name": "autoFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Focuses dialog automatically after open if true."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 44,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5111,
							"name": "backdropClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Class that'll be assigned to the backdrop element."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 24,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"overlay-backdrop\""
						},
						{
							"id": 5112,
							"name": "closeOnBackdropClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true then mouse clicks by backdrop will close a dialog."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 29,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5113,
							"name": "closeOnEsc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true then escape press will close a dialog."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 34,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5117,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 54,
									"character": 9
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "D"
							}
						},
						{
							"id": 5110,
							"name": "hasBackdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true than overlay will render backdrop under a dialog."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 19,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5114,
							"name": "hasScroll",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Disables scroll on content under dialog if true and does nothing otherwise."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 39,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5116,
							"name": "viewContainerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Where the attached component should live in Angular's *logical* component tree.\nThis affects what is available for injection and the change detection order for the\ncomponent instantiated inside of the dialog. This does not affect where the dialog\ncontent will be rendered."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-config.ts",
									"line": 52,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5118
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5115,
								5111,
								5112,
								5113,
								5117,
								5110,
								5114,
								5116
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/dialog/dialog-config.ts",
							"line": 15,
							"character": 27
						}
					]
				},
				{
					"id": 5121,
					"name": "NB_DIALOG_CONFIG",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/dialog/dialog-config.ts",
							"line": 10,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbDialogConfig",
								"id": 5108,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						]
					},
					"defaultValue": " new InjectionToken<NbDialogConfig>('Default dialog options')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5108
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5121
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/dialog/dialog-config.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5136,
			"name": "\"theme/components/dialog/dialog-container\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/dialog/dialog-container.ts",
			"children": [
				{
					"id": 5137,
					"name": "NbDialogContainerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Container component for each dialog.\nAll the dialogs will be attached to it.\n// TODO add animations"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-dialog-container',\n  template: '<ng-template nbPortalOutlet></ng-template>',\n}"
							}
						}
					],
					"children": [
						{
							"id": 5140,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5144,
									"name": "new NbDialogContainerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5145,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										},
										{
											"id": 5146,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 5147,
											"name": "focusTrapFactory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbFocusTrapFactoryService",
												"id": 4073
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDialogContainerComponent",
										"id": 5137
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 31,
									"character": 35
								}
							]
						},
						{
							"id": 5141,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 33,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "NbDialogConfig",
								"id": 5108
							}
						},
						{
							"id": 5142,
							"name": "elementRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 34,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5139,
							"name": "focusTrap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 31,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "NbFocusTrap",
								"id": 4037
							}
						},
						{
							"id": 5143,
							"name": "focusTrapFactory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 35,
									"character": 40
								}
							],
							"type": {
								"type": "reference",
								"name": "NbFocusTrapFactoryService",
								"id": 4073
							}
						},
						{
							"id": 5138,
							"name": "portalOutlet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "NbPortalOutletDirective"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 29,
									"character": 50
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPortalOutletDirective",
								"id": 2644
							}
						},
						{
							"id": 5152,
							"name": "attachComponentPortal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5153,
									"name": "attachComponentPortal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5154,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5155,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbComponentPortal",
												"id": 2732,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 52,
									"character": 23
								}
							]
						},
						{
							"id": 5156,
							"name": "attachTemplatePortal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5157,
									"name": "attachTemplatePortal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5158,
											"name": "C",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5159,
											"name": "portal",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbTemplatePortal",
												"id": 2751,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "C"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EmbeddedViewRef",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "C"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 56,
									"character": 22
								}
							]
						},
						{
							"id": 5150,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5151,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 46,
									"character": 13
								}
							]
						},
						{
							"id": 5148,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5149,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-container.ts",
									"line": 38,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5140
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5141,
								5142,
								5139,
								5143,
								5138
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5152,
								5156,
								5150,
								5148
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/dialog/dialog-container.ts",
							"line": 28,
							"character": 39
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5137
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/dialog/dialog-container.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5122,
			"name": "\"theme/components/dialog/dialog-ref\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/dialog/dialog-ref.ts",
			"children": [
				{
					"id": 5123,
					"name": "NbDialogRef",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbDialogRef` helps to manipulate dialog after it was created.\nThe dialog can be dismissed by using `close` method of the dialogRef.\nYou can access rendered component as `content` property of the dialogRef.\n`onBackdropClick` streams click events on the backdrop of the dialog."
					},
					"typeParameter": [
						{
							"id": 5124,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5129,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5131,
									"name": "new NbDialogRef",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5132,
											"name": "overlayRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayRef",
												"id": 2847
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDialogRef",
										"id": 5123
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-ref.ts",
									"line": 28,
									"character": 67
								}
							]
						},
						{
							"id": 5125,
							"name": "componentRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-ref.ts",
									"line": 21,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						},
						{
							"id": 5126,
							"name": "onBackdropClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Stream of backdrop click events."
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-ref.ts",
									"line": 26,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "MouseEvent"
									}
								]
							}
						},
						{
							"id": 5128,
							"name": "onClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-ref.ts",
									"line": 28,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " this.onClose$.asObservable()"
						},
						{
							"id": 5127,
							"name": "onClose$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-ref.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 5130,
							"name": "overlayRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-ref.ts",
									"line": 30,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 5133,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5134,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Hides dialog."
									},
									"parameters": [
										{
											"id": 5135,
											"name": "res",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog-ref.ts",
									"line": 37,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5129
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5125,
								5126,
								5128,
								5127,
								5130
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5133
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/dialog/dialog-ref.ts",
							"line": 19,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5123
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/dialog/dialog-ref.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5219,
			"name": "\"theme/components/dialog/dialog.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/dialog/dialog.module.ts",
			"children": [
				{
					"id": 5220,
					"name": "NbDialogModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbSharedModule, NbA11yModule, NbOverlayModule],\n  declarations: [NbDialogContainerComponent],\n  entryComponents: [NbDialogContainerComponent],\n}"
							}
						}
					],
					"children": [
						{
							"id": 5221,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5222,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5223,
											"name": "dialogConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbDialogConfig",
														"id": 5108
													}
												]
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.module.ts",
									"line": 22,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5221
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/dialog/dialog.module.ts",
							"line": 21,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5220
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/dialog/dialog.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5160,
			"name": "\"theme/components/dialog/dialog.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/dialog/dialog.service.ts",
			"children": [
				{
					"id": 5161,
					"name": "NbDialogService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbDialogService` helps to open dialogs.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "dialog/dialog-showcase.component)\n\nA new dialog is opened by calling the `open` method with a component to be loaded and an optional configuration.\n`open` method will return `NbDialogRef` that can be used for the further manipulations.\n\n```ts\nconst dialogRef = this.dialogService.open(MyDialogComponent, { ... });\n```\n\n`NbDialogRef` gives capability access reference to the rendered dialog component,\ndestroy dialog and some other options described below.\n\nAlso, you can inject `NbDialogRef` in dialog component.\n\n```ts\nthis.dialogService.open(MyDialogComponent, { ... });\n\n// my-dialog.component.ts\nconstructor(protected dialogRef: NbDialogRef) {\n}\n\nclose() {\n  this.dialogRef.close();\n}\n```\n\nInstead of component you can create dialog from TemplateRef:\n"
							},
							{
								"tag": "stacked-example(template",
								"text": "ref, dialog/dialog-template.component)\n\nThe dialog may return result through `NbDialogRef`. Calling component can receive this result with `onClose`\nstream of `NbDialogRef`.\n"
							},
							{
								"tag": "stacked-example(result,",
								"text": "dialog/dialog-result.component)\n\n### Configuration\n\nAs we mentioned above, `open` method of the `NbDialogService` may receive optional configuration options.\nAlso, you can provide global dialogs configuration through `NbDialogModule.forRoot({ ... })`.\n\nThis config may contain the following:\n\n`context` - both, template and component may receive data through `config.context` property.\nFor components, this data will be assigned through inputs.\nFor templates, you can access it inside template as $implicit.\n\n```ts\nthis.dialogService.open(template, { context: 'pass data in template' });\n```\n\n```html\n<ng-template let-some-additional-data>\n  {{ some-additional-data }}\n<ng-template/>\n```\n\n`hasBackdrop` - determines is service have to render backdrop under the dialog.\nDefault is true."
							},
							{
								"tag": "stacked-example(backdrop,",
								"text": "dialog/dialog-has-backdrop.component)\n\n`closeOnBackdropClick` - close dialog on backdrop click if true.\nDefault is true."
							},
							{
								"tag": "stacked-example(backdrop",
								"text": "click, dialog/dialog-backdrop-click.component)\n\n`closeOnEsc` - close dialog on escape button on the keyboard.\nDefault is true."
							},
							{
								"tag": "stacked-example(escape",
								"text": "hit, dialog/dialog-esc.component)\n\n`hasScroll` - Disables scroll on content under dialog if true and does nothing otherwise.\nDefault is false.\nPlease, open dialogs in the separate window and try to scroll."
							},
							{
								"tag": "stacked-example(scroll,",
								"text": "dialog/dialog-scroll.component)\n\n`autoFocus` - Focuses dialog automatically after open if true. It's useful to prevent misclicks on\ntrigger elements and opening multiple dialogs.\nDefault is true.\n\nAs you can see, if you open dialog with auto focus dialog will focus first focusable element\nor just blur previously focused automatically.\nOtherwise, without auto focus, the focus will stay on the previously focused element.\nPlease, open dialogs in the separate window and try to click on the button without focus\nand then hit space any times. Multiple same dialogs will be opened."
							},
							{
								"tag": "stacked-example(auto",
								"text": "focus, dialog/dialog-auto-focus.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 5162,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5168,
									"name": "new NbDialogService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5169,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5170,
											"name": "globalConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DIALOG_CONFIG"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5171,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 5172,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										},
										{
											"id": 5173,
											"name": "injector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Injector"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDialogService",
										"id": 5161
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 115,
									"character": 30
								}
							]
						},
						{
							"id": 5163,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 116,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5164,
							"name": "globalConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DIALOG_CONFIG"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 117,
									"character": 62
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5167,
							"name": "injector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 120,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Injector"
							}
						},
						{
							"id": 5166,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 119,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 5165,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 118,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							}
						},
						{
							"id": 5204,
							"name": "createComponentPortal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5205,
									"name": "createComponentPortal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "We're creating portal with custom injector provided through config or using global injector.\nThis approach provides us capability inject `NbDialogRef` in dialog component."
									},
									"typeParameter": [
										{
											"id": 5206,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5207,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										},
										{
											"id": 5208,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Type",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 5209,
											"name": "dialogRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogRef",
												"id": 5123,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbComponentPortal",
										"id": 2732
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 199,
									"character": 33
								}
							]
						},
						{
							"id": 5187,
							"name": "createContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5188,
									"name": "createContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5189,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										},
										{
											"id": 5190,
											"name": "overlayRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayRef",
												"id": 2847
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDialogContainerComponent",
										"id": 5137
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 165,
									"character": 27
								}
							]
						},
						{
							"id": 5191,
							"name": "createContent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5192,
									"name": "createContent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5193,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5194,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										},
										{
											"id": 5195,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Type",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														]
													},
													{
														"type": "reference",
														"name": "TemplateRef",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														]
													}
												]
											}
										},
										{
											"id": 5196,
											"name": "container",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogContainerComponent",
												"id": 5137
											}
										},
										{
											"id": 5197,
											"name": "dialogRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogRef",
												"id": 5123,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 172,
									"character": 25
								}
							]
						},
						{
							"id": 5210,
							"name": "createInjector",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5211,
									"name": "createInjector",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5212,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Injector"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 207,
									"character": 26
								}
							]
						},
						{
							"id": 5179,
							"name": "createOverlay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5180,
									"name": "createOverlay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5181,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOverlayRef",
										"id": 2847
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 138,
									"character": 25
								}
							]
						},
						{
							"id": 5182,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5183,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbGlobalPositionStrategy",
										"id": 3694
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 150,
									"character": 34
								}
							]
						},
						{
							"id": 5184,
							"name": "createScrollStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5185,
									"name": "createScrollStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5186,
											"name": "hasScroll",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbScrollStrategy",
										"id": 2856
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 157,
									"character": 32
								}
							]
						},
						{
							"id": 5198,
							"name": "createTemplatePortal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5199,
									"name": "createTemplatePortal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5200,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5201,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										},
										{
											"id": 5202,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TemplateRef",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 5203,
											"name": "dialogRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogRef",
												"id": 5123,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTemplatePortal",
										"id": 2751
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 189,
									"character": 32
								}
							]
						},
						{
							"id": 5174,
							"name": "open",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5175,
									"name": "open",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Opens new instance of the dialog, may receive optional config."
									},
									"typeParameter": [
										{
											"id": 5176,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5177,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Type",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														]
													},
													{
														"type": "reference",
														"name": "TemplateRef",
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														]
													}
												]
											}
										},
										{
											"id": 5178,
											"name": "userConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbDialogConfig",
														"id": 5108,
														"typeArguments": [
															{
																"type": "typeParameter",
																"name": "T"
															}
														]
													}
												]
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "NbDialogRef",
										"id": 5123,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 126,
									"character": 6
								}
							]
						},
						{
							"id": 5213,
							"name": "registerCloseListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5214,
									"name": "registerCloseListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 5215,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 5216,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogConfig",
												"id": 5108
											}
										},
										{
											"id": 5217,
											"name": "overlayRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayRef",
												"id": 2847
											}
										},
										{
											"id": 5218,
											"name": "dialogRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbDialogRef",
												"id": 5123,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/dialog/dialog.service.ts",
									"line": 211,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5162
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5163,
								5164,
								5167,
								5166,
								5165
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5204,
								5187,
								5191,
								5210,
								5179,
								5182,
								5184,
								5198,
								5174,
								5213
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/dialog/dialog.service.ts",
							"line": 115,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5161
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/dialog/dialog.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5224,
			"name": "\"theme/components/dialog/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/dialog/index.ts",
			"sources": [
				{
					"fileName": "theme/components/dialog/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2592,
			"name": "\"theme/components/helpers\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/helpers.ts",
			"children": [
				{
					"id": 2593,
					"name": "convertToBoolProperty",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2594,
							"name": "convertToBoolProperty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "license",
										"text": "\nCopyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2595,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/helpers.ts",
							"line": 7,
							"character": 37
						}
					]
				},
				{
					"id": 2596,
					"name": "getElementHeight",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2597,
							"name": "getElementHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2598,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/helpers.ts",
							"line": 17,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2593,
						2596
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/helpers.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5062,
			"name": "\"theme/components/input/input.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/input/input.directive.ts",
			"children": [
				{
					"id": 5063,
					"name": "NbInputDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Basic input directive.",
						"text": "```html\n<input nbInput></input>\n```\n\nDefault input size is `medium`:",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "input/input-showcase.component)\n\nInputs are available in multiple colors using `status` property:"
							},
							{
								"tag": "stacked-example(input",
								"text": "Colors, input/input-colors.component)\n\nThere are three input sizes:\n"
							},
							{
								"tag": "stacked-example(input",
								"text": "Sizes, input/input-sizes.component)\n\nInputs available in different shapes, which could be combined with the other properties:"
							},
							{
								"tag": "stacked-example(input",
								"text": "Shapes, input/input-shapes.component)\n\n`nbInput` could be applied to the following selectors - `input`, `textarea`:"
							},
							{
								"tag": "stacked-example(input",
								"text": "Elements, input/input-types.component)\n\nYou can add `fullWidth` attribute to make element fill container:"
							},
							{
								"tag": "stacked-example(full",
								"text": "width inputs, input/input-full-width.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nform-control-bg:\nform-control-border-width:\nform-control-border-type:\nform-control-border-color:\nform-control-text-primary-color:\nform-control-focus-bg:\nform-control-selected-border-color:\nform-control-placeholder-font-size:\nform-control-placeholder-color:\nform-control-font-size:\nform-control-padding:\nform-control-font-size-sm:\nform-control-padding-sm:\nform-control-font-size-lg:\nform-control-padding-lg:\nform-control-border-radius:\nform-control-semi-round-border-radius:\nform-control-round-border-radius:\nform-control-info-border-color:\nform-control-success-border-color:\nform-control-warning-border-color:\nform-control-danger-border-color:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{\n  selector: 'input[nbInput],textarea[nbInput]',\n}"
							}
						}
					],
					"children": [
						{
							"id": 5083,
							"name": "fullWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-full-width'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 116,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5079,
							"name": "shape",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Field shapes: `rectangle`, `round`, `semi-round`",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'shape'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 104,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbInputDirective.SHAPE_RECTANGLE"
						},
						{
							"id": 5074,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 79,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbInputDirective.SIZE_MEDIUM"
						},
						{
							"id": 5078,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Field status (adds specific styles):\n`info`, `success`, `warning`, `danger`",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'status'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 97,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5071,
							"name": "SHAPE_RECTANGLE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 75,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "rectangle"
							},
							"defaultValue": "\"rectangle\""
						},
						{
							"id": 5073,
							"name": "SHAPE_ROUND",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 77,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "round"
							},
							"defaultValue": "\"round\""
						},
						{
							"id": 5072,
							"name": "SHAPE_SEMI_ROUND",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 76,
									"character": 34
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "semi-round"
							},
							"defaultValue": "\"semi-round\""
						},
						{
							"id": 5066,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 68,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 5065,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 67,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 5064,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 66,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 5070,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 73,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 5067,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 70,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 5068,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 71,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 5069,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 72,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 5096,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-danger'"
									}
								}
							],
							"getSignature": {
								"id": 5097,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 149,
									"character": 12
								}
							]
						},
						{
							"id": 5090,
							"name": "info",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-info'"
									}
								}
							],
							"getSignature": {
								"id": 5091,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 134,
									"character": 10
								}
							]
						},
						{
							"id": 5088,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-lg'"
									}
								}
							],
							"getSignature": {
								"id": 5089,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 129,
									"character": 11
								}
							]
						},
						{
							"id": 5086,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-md'"
									}
								}
							],
							"getSignature": {
								"id": 5087,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 124,
									"character": 12
								}
							]
						},
						{
							"id": 5098,
							"name": "rectangle",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-rectangle'"
									}
								}
							],
							"getSignature": {
								"id": 5099,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 154,
									"character": 15
								}
							]
						},
						{
							"id": 5102,
							"name": "round",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-round'"
									}
								}
							],
							"getSignature": {
								"id": 5103,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 164,
									"character": 11
								}
							]
						},
						{
							"id": 5100,
							"name": "semiRound",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-semi-round'"
									}
								}
							],
							"getSignature": {
								"id": 5101,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 159,
									"character": 15
								}
							]
						},
						{
							"id": 5080,
							"name": "setFullWidth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If set element will fill container"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'fullWidth'"
									}
								}
							],
							"setSignature": {
								"id": 5081,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "If set element will fill container"
								},
								"parameters": [
									{
										"id": 5082,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 111,
									"character": 18
								}
							]
						},
						{
							"id": 5075,
							"name": "setSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Field size, available sizes:\n`small`, `medium`, `large`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'fieldSize'"
									}
								}
							],
							"setSignature": {
								"id": 5076,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Field size, available sizes:\n`small`, `medium`, `large`"
								},
								"parameters": [
									{
										"id": 5077,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 87,
									"character": 13
								}
							]
						},
						{
							"id": 5084,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-sm'"
									}
								}
							],
							"getSignature": {
								"id": 5085,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 119,
									"character": 11
								}
							]
						},
						{
							"id": 5092,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-success'"
									}
								}
							],
							"getSignature": {
								"id": 5093,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 139,
									"character": 13
								}
							]
						},
						{
							"id": 5094,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.input-warning'"
									}
								}
							],
							"getSignature": {
								"id": 5095,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/input/input.directive.ts",
									"line": 144,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5083,
								5079,
								5074,
								5078,
								5071,
								5073,
								5072,
								5066,
								5065,
								5064,
								5070,
								5067,
								5068,
								5069
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5096,
								5090,
								5088,
								5086,
								5098,
								5102,
								5100,
								5080,
								5075,
								5084,
								5092,
								5094
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/input/input.directive.ts",
							"line": 64,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5063
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/input/input.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5104,
			"name": "\"theme/components/input/input.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/input/input.module.ts",
			"children": [
				{
					"id": 5105,
					"name": "NbInputModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [ NbSharedModule ],\n  declarations: NB_INPUT_COMPONENTS,\n  exports: NB_INPUT_COMPONENTS,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/input/input.module.ts",
							"line": 20,
							"character": 26
						}
					]
				},
				{
					"id": 5106,
					"name": "NB_INPUT_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/input/input.module.ts",
							"line": 11,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbInputDirective,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5105
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5106
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/input/input.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2878,
			"name": "\"theme/components/layout/layout.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/layout/layout.component.ts",
			"children": [
				{
					"id": 2879,
					"name": "NbLayoutColumnComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A container component which determines a content position inside of the layout.\nThe layout could contain unlimited columns (not including the sidebars).",
						"text": "By default the columns are ordered from the left to the right,\nbut it's also possible to overwrite this behavior by setting a `left` attribute to the column,\nmoving it to the very first position:\n",
						"tags": [
							{
								"tag": "stacked-example(column",
								"text": "Left, layout/layout-column-left.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-layout-column',\n  template: `\n    <ng-content></ng-content>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 2880,
							"name": "leftValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.left'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 43,
									"character": 38
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2881,
							"name": "startValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.start'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 44,
									"character": 40
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2882,
							"name": "left",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Move the column to the very left position in the layout."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2883,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Move the column to the very left position in the layout."
								},
								"parameters": [
									{
										"id": 2884,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 51,
									"character": 10
								}
							]
						},
						{
							"id": 2885,
							"name": "start",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Make columnt first in the layout."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2886,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Make columnt first in the layout."
								},
								"parameters": [
									{
										"id": 2887,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 61,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2880,
								2881
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2882,
								2885
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/layout/layout.component.ts",
							"line": 41,
							"character": 36
						}
					]
				},
				{
					"id": 2906,
					"name": "NbLayoutComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Layout container component.\nWhen using with Nebular Theme System it is required that all child components should be placed inside.",
						"text": "Basic example of two column layout with header:\n",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "layout/layout-showcase.component)\n\nCan contain the following components inside:\n\n```html\n<nb-layout>\n <nb-layout-header></nb-layout-header>\n <nb-layout-footer></nb-layout-column>\n <nb-layout-column></nb-layout-column>\n <nb-sidebar></nb-sidebar>\n</nb-layout>\n```\n\nBy default the layout fills up the whole view-port.\nThe window scrollbars are disabled on the body and moved inside of the nb-layout, so that the scrollbars\nwon't mess with the fixed nb-header.\n\nThe child components are projected into a flexible layout structure allowing to adjust the layout behavior\nbased on the settings provided.\n\nThe layout content (columns) becomes centered when the window width is more than\nthe value specified in the theme variable `layout-content-width`.\n\nThe layout also contains the area on the very top (the first child of the nb-layout), which could be used\nto dynamically append some components like modals or spinners/loaders\nso that they are located on top of the elements hierarchy.\nMore details are under the `ThemeService` section.\n\nThe layout component is also responsible for changing application themes.\nIt listens to the `themeChange` event and change a theme CSS class appended to body.\nBased on the class appended, specific CSS-theme is applied to the application.\nMore details of the Theme System could be found here [Enabling Theme System](#/docs/concepts/theme-system)\n\nA simple layout with footer:\n"
							},
							{
								"tag": "stacked-example(layout",
								"text": "With Footer, layout/layout-w-footer.component)\n\nIt is possible to ask the layout to center the columns (notice: we added a `center` attribute\nto the layout:\n\n```html\n<nb-layout center>\n  <nb-layout-header>Awesome Company</nb-layout-header>\n\n  <nb-layout-column>\n    Hello World!\n  </nb-layout-column>\n\n  <nb-layout-footer>Contact us</nb-layout-footer>\n</nb-layout>\n```\n"
							},
							{
								"tag": "styles",
								"text": "\n\nlayout-font-family\nlayout-font-size\nlayout-line-height\nlayout-fg\nlayout-bg\nlayout-min-height\nlayout-content-width\nlayout-window-mode-min-width\nlayout-window-mode-max-width: window mode only, after this value layout turns into a floating window\nlayout-window-mode-bg: window mode only, background\nlayout-window-mode-padding-top: window mode only, max padding from top\nlayout-window-shadow: window mode shadow\nlayout-padding\nlayout-medium-padding\nlayout-small-padding\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-layout',\n  styleUrls: ['./layout.component.scss'],\n  template: `\n    <div class=\"scrollable-container\" #scrollableContainer (scroll)=\"onScroll($event)\">\n      <div class=\"layout\">\n        <ng-content select=\"nb-layout-header:not([subheader])\"></ng-content>\n        <div class=\"layout-container\">\n          <ng-content select=\"nb-sidebar\"></ng-content>\n          <div class=\"content\" [class.center]=\"centerValue\">\n            <ng-content select=\"nb-layout-header[subheader]\"></ng-content>\n            <div class=\"columns\">\n              <ng-content select=\"nb-layout-column\"></ng-content>\n            </div>\n            <ng-content select=\"nb-layout-footer\"></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 2928,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2941,
									"name": "new NbLayoutComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2942,
											"name": "themeService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbThemeService",
												"id": 1517
											}
										},
										{
											"id": 2943,
											"name": "spinnerService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbSpinnerService",
												"id": 1554
											}
										},
										{
											"id": 2944,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 2945,
											"name": "renderer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Renderer2"
											}
										},
										{
											"id": 2946,
											"name": "window",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_WINDOW"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2947,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2948,
											"name": "platformId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "PLATFORM_ID"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 2949,
											"name": "layoutDirectionService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirectionService",
												"id": 1581
											}
										},
										{
											"id": 2950,
											"name": "scrollService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutScrollService",
												"id": 1603
											}
										},
										{
											"id": 2951,
											"name": "rulerService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutRulerService",
												"id": 1628
											}
										},
										{
											"id": 2952,
											"name": "scrollTop",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbRestoreScrollTopHelper",
												"id": 2612
											}
										},
										{
											"id": 2953,
											"name": "overlayContainer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayContainerAdapter",
												"id": 2860
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbLayoutComponent",
										"id": 2906
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 334,
									"character": 32
								}
							]
						},
						{
							"id": 2926,
							"name": "afterViewInit$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 332,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "BehaviorSubject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new BehaviorSubject(null)"
						},
						{
							"id": 2927,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 334,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 2907,
							"name": "centerValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 272,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2934,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 342,
									"character": 43
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2931,
							"name": "elementRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 339,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 2936,
							"name": "layoutDirectionService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 344,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirectionService",
								"id": 1581
							}
						},
						{
							"id": 2940,
							"name": "overlayContainer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 348,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayContainerAdapter",
								"id": 2860
							}
						},
						{
							"id": 2935,
							"name": "platformId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "PLATFORM_ID"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 343,
									"character": 45
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 2932,
							"name": "renderer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 340,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Renderer2"
							}
						},
						{
							"id": 2908,
							"name": "restoreScrollTopValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 273,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 2938,
							"name": "rulerService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 346,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutRulerService",
								"id": 1628
							}
						},
						{
							"id": 2937,
							"name": "scrollService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 345,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutScrollService",
								"id": 1603
							}
						},
						{
							"id": 2939,
							"name": "scrollTop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 347,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "NbRestoreScrollTopHelper",
								"id": 2612
							}
						},
						{
							"id": 2925,
							"name": "scrollableContainerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "'scrollableContainer'",
										"opts": "{ read: ElementRef }"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 330,
									"character": 80
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 2930,
							"name": "spinnerService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 338,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbSpinnerService",
								"id": 1554
							}
						},
						{
							"id": 2929,
							"name": "themeService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 337,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbThemeService",
								"id": 1517
							}
						},
						{
							"id": 2924,
							"name": "veryTopRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "'layoutTopDynamicArea'",
										"opts": "{ read: ViewContainerRef }"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 329,
									"character": 75
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							}
						},
						{
							"id": 2933,
							"name": "window",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_WINDOW"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 341,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2909,
							"name": "windowModeValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.window-mode'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 275,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2910,
							"name": "withScrollValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.with-scroll'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 276,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2911,
							"name": "withSubheader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.with-subheader'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 277,
									"character": 52
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2912,
							"name": "center",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines whether the layout columns will be centered after some width"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2913,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Defines whether the layout columns will be centered after some width"
								},
								"parameters": [
									{
										"id": 2914,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 284,
									"character": 12
								}
							]
						},
						{
							"id": 2921,
							"name": "restoreScrollTop",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Restores scroll to the top of the page after navigation"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2922,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Restores scroll to the top of the page after navigation"
								},
								"parameters": [
									{
										"id": 2923,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 325,
									"character": 22
								}
							]
						},
						{
							"id": 2915,
							"name": "windowMode",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\nbecomes centered by width with a margin from the top of the screen, like a floating window.\nAutomatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\nwindow. (TODO: check this)"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2916,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\nbecomes centered by width with a margin from the top of the screen, like a floating window.\nAutomatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\nwindow. (TODO: check this)"
								},
								"parameters": [
									{
										"id": 2917,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 296,
									"character": 16
								}
							]
						},
						{
							"id": 2918,
							"name": "withScroll",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Defines whether to move the scrollbars to layout or leave it at the body level.\nAutomatically set to true when `windowMode` is enabled."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2919,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Defines whether to move the scrollbars to layout or leave it at the body level.\nAutomatically set to true when `windowMode` is enabled."
								},
								"parameters": [
									{
										"id": 2920,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 307,
									"character": 16
								}
							]
						},
						{
							"id": 2964,
							"name": "getDimensions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2965,
									"name": "getDimensions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns scroll and client height/width",
										"text": "Depending on the current scroll mode (`withScroll=true`) returns sizes from the body element\nor from the `.scrollable-container`",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "NbLayoutDimensions",
										"id": 1623
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 459,
									"character": 15
								}
							]
						},
						{
							"id": 2966,
							"name": "getScrollPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2967,
									"name": "getScrollPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns scroll position of current scroll container.",
										"text": "If `withScroll` = true, returns scroll position of the `.scrollable-container` element,\notherwise - of the scrollable element of the window (which may be different depending of a browser)\n",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "NbScrollPosition",
										"id": 1600
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 491,
									"character": 19
								}
							]
						},
						{
							"id": 2954,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2955,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 423,
									"character": 17
								}
							]
						},
						{
							"id": 2956,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2957,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 437,
									"character": 13
								}
							]
						},
						{
							"id": 2961,
							"name": "onResize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'window:resize'",
										"args": "['$event']"
									}
								}
							],
							"signatures": [
								{
									"id": 2962,
									"name": "onResize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2963,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 448,
									"character": 10
								}
							]
						},
						{
							"id": 2958,
							"name": "onScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'window:scroll'",
										"args": "['$event']"
									}
								}
							],
							"signatures": [
								{
									"id": 2959,
									"name": "onScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2960,
											"name": "$event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 443,
									"character": 10
								}
							]
						},
						{
							"id": 2968,
							"name": "registerAsOverlayContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 2969,
									"name": "registerAsOverlayContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 509,
									"character": 38
								}
							]
						},
						{
							"id": 2972,
							"name": "scroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2973,
									"name": "scroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2974,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " null"
										},
										{
											"id": 2975,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " null"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 521,
									"character": 16
								}
							]
						},
						{
							"id": 2970,
							"name": "unregisterAsOverlayContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 2971,
									"name": "unregisterAsOverlayContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 515,
									"character": 40
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2928
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2926,
								2927,
								2907,
								2934,
								2931,
								2936,
								2940,
								2935,
								2932,
								2908,
								2938,
								2937,
								2939,
								2925,
								2930,
								2929,
								2924,
								2933,
								2909,
								2910,
								2911
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2912,
								2921,
								2915,
								2918
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2964,
								2966,
								2954,
								2956,
								2961,
								2958,
								2968,
								2972,
								2970
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/layout/layout.component.ts",
							"line": 270,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 2901,
					"name": "NbLayoutFooterComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Page footer.\nLocated under the nb-layout content (specifically, under the columns).\nCould be made `fixed`, becoming sticky to the bottom of the view port (window).",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\nfooter-height\nfooter-padding\nfooter-fg\nfooter-bg\nfooter-separator\nfooter-shadow\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-layout-footer',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 2902,
							"name": "fixedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.fixed'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 160,
									"character": 40
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2903,
							"name": "fixed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes the footer sticky to the bottom of the window."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2904,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes the footer sticky to the bottom of the window."
								},
								"parameters": [
									{
										"id": 2905,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 167,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2902
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2903
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/layout/layout.component.ts",
							"line": 158,
							"character": 36
						}
					]
				},
				{
					"id": 2888,
					"name": "NbLayoutHeaderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Page header component.\nLocated on top of the page above the layout columns and sidebars.\nCould be made `fixed` by setting the corresponding property. In the fixed mode the header becomes\nsticky to the top of the nb-layout (to of the page). Here's an example:",
						"tags": [
							{
								"tag": "stacked-example(fixed",
								"text": "Header, layout/layout-fixed-header.component)\n\nIn a pair with sidebar it is possible to setup a configuration when header is placed on a side of the sidebar\nand not on top of it. To achieve this simply put a `subheader` property to the header like this:\n```html\n<nb-layout-header subheader></nb-layout-header>\n```"
							},
							{
								"tag": "stacked-example(subheader,",
								"text": "layout/layout-sidebar-subheader.component)\nNote that in such configuration sidebar shadow is removed and header cannot be make `fixed`.\n\nSame way you can put both `fixed` and `clipped` headers adding creating a sub-header for your app:\n"
							},
							{
								"tag": "stacked-example(subheader,",
								"text": "layout/layout-subheader.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nheader-font-family\nheader-line-height\nheader-fg\nheader-bg\nheader-height\nheader-padding\nheader-shadow\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-layout-header',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 2891,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2893,
									"name": "new NbLayoutHeaderComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2894,
											"name": "layout",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "forwardRef(() => NbLayoutComponent)"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbLayoutComponent",
												"id": 2906
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbLayoutHeaderComponent",
										"id": 2888
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 108,
									"character": 58
								}
							]
						},
						{
							"id": 2889,
							"name": "fixedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.fixed'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 107,
									"character": 40
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2892,
							"name": "layout",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "forwardRef(() => NbLayoutComponent)"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 111,
									"character": 73
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutComponent",
								"id": 2906
							}
						},
						{
							"id": 2890,
							"name": "subheaderValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.subheader'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 108,
									"character": 48
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2895,
							"name": "fixed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes the header sticky to the top of the nb-layout."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2896,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes the header sticky to the top of the nb-layout."
								},
								"parameters": [
									{
										"id": 2897,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 119,
									"character": 11
								}
							]
						},
						{
							"id": 2898,
							"name": "subheader",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Places header on a side of the sidebar, and not above.\nDisables fixed mode for this header and remove a shadow from the sidebar."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 2899,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Places header on a side of the sidebar, and not above.\nDisables fixed mode for this header and remove a shadow from the sidebar."
								},
								"parameters": [
									{
										"id": 2900,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/layout/layout.component.ts",
									"line": 129,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2891
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2889,
								2892,
								2890
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2895,
								2898
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/layout/layout.component.ts",
							"line": 105,
							"character": 36
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2879,
						2906,
						2901,
						2888
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/layout/layout.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2976,
			"name": "\"theme/components/layout/layout.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/layout/layout.module.ts",
			"children": [
				{
					"id": 2977,
					"name": "NbLayoutModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    ...NB_LAYOUT_COMPONENTS,\n  ],\n  providers: [\n    NbRestoreScrollTopHelper,\n  ],\n  exports: [\n    ...NB_LAYOUT_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/layout/layout.module.ts",
							"line": 40,
							"character": 27
						}
					]
				},
				{
					"id": 2978,
					"name": "NB_LAYOUT_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/layout/layout.module.ts",
							"line": 19,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbLayoutComponent,\n  NbLayoutColumnComponent,\n  NbLayoutFooterComponent,\n  NbLayoutHeaderComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2977
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2978
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/layout/layout.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2611,
			"name": "\"theme/components/layout/restore-scroll-top.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/layout/restore-scroll-top.service.ts",
			"children": [
				{
					"id": 2612,
					"name": "NbRestoreScrollTopHelper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This service determines whether we should scroll the layout back to top.\nThis occurs when the page is changed, so when current url PATH is not equal to the previous one.",
						"text": " TODO: this is most likely a temporary solutions as recently Angular introduces ViewportScroll\n and scroll restoration process\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 2613,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2615,
									"name": "new NbRestoreScrollTopHelper",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2616,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbRestoreScrollTopHelper",
										"id": 2612
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/restore-scroll-top.service.ts",
									"line": 16,
									"character": 39
								}
							]
						},
						{
							"id": 2614,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/layout/restore-scroll-top.service.ts",
									"line": 18,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 2619,
							"name": "pageChanged",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2620,
									"name": "pageChanged",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2621,
											"name": "prev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NavigationEnd"
											}
										},
										{
											"id": 2622,
											"name": "current",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NavigationEnd"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/restore-scroll-top.service.ts",
									"line": 32,
									"character": 21
								}
							]
						},
						{
							"id": 2617,
							"name": "shouldRestore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2618,
									"name": "shouldRestore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/layout/restore-scroll-top.service.ts",
									"line": 21,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2613
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2614
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2619,
								2617
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/layout/restore-scroll-top.service.ts",
							"line": 16,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2612
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/layout/restore-scroll-top.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5016,
			"name": "\"theme/components/list/infinite-list.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/list/infinite-list.directive.ts",
			"children": [
				{
					"id": 5021,
					"name": "NbInfiniteListDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Infinite List Directive",
						"text": "```html\n <nb-list nbInfiniteList [threshold]=\"500\" (bottomThreshold)=\"loadNext()\">\n   <nb-list-item *ngFor=\"let item of items\"></nb-list-item>\n </nb-list>\n```\n",
						"tags": [
							{
								"tag": "stacked-example(simple",
								"text": "infinite list, infinite-list/infinite-list-showcase.component)\n\nDirective will notify when list scrolled up or down to given a threshold.\nBy default it listen to scroll of list on which applied, but also can be set to listen to window scroll.\n"
							},
							{
								"tag": "stacked-example(scroll",
								"text": "modes, infinite-list/infinite-list-scroll-modes.component)\n\nTo improve UX of infinite lists, it's better to keep current page in url,\nso user able to return to the last viewed page or to share a link to this page.\n`nbListPageTracker` directive will help you to know, what page user currently viewing.\nJust put it on a list, set page size and it will calculate page that currently in viewport.\nYou can [open the example](example/infinite-list/infinite-news-list.component)\nin a new tab to check out this feature.\n"
							},
							{
								"tag": "stacked-example(infinite",
								"text": "list with pager, infinite-list/infinite-news-list.component)\n"
							},
							{
								"tag": "stacked-example(infinite",
								"text": "list with placeholders at the top, infinite-list/infinite-list-placeholders.component)\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{\n  selector: '[nbInfiniteList]',\n}"
							}
						}
					],
					"children": [
						{
							"id": 5036,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5040,
									"name": "new NbInfiniteListDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5041,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 5042,
											"name": "scrollService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutScrollService",
												"id": 1603
											}
										},
										{
											"id": 5043,
											"name": "dimensionsService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutRulerService",
												"id": 1628
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbInfiniteListDirective",
										"id": 5021
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 101,
									"character": 82
								}
							]
						},
						{
							"id": 5022,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 59,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5031,
							"name": "bottomThreshold",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when distance between list bottom and current scroll position is less than threshold."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 86,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new EventEmitter(true)"
						},
						{
							"id": 5039,
							"name": "dimensionsService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 106,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutRulerService",
								"id": 1628
							}
						},
						{
							"id": 5037,
							"name": "elementRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 104,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5023,
							"name": "lastScrollPosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 60,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5035,
							"name": "listItems",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ContentChildren",
									"type": {
										"type": "reference",
										"name": "ContentChildren"
									},
									"arguments": {
										"selector": "NbListItemComponent"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 101,
									"character": 49
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryList",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbListItemComponent",
										"id": 4988
									}
								]
							}
						},
						{
							"id": 5038,
							"name": "scrollService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 105,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutScrollService",
								"id": 1603
							}
						},
						{
							"id": 5027,
							"name": "threshold",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Threshold after which event load more event will be emited.\nIn pixels."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 71,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5032,
							"name": "topThreshold",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when distance between list top and current scroll position is less than threshold."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 92,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new EventEmitter(true)"
						},
						{
							"id": 5024,
							"name": "windowScroll",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5025,
							"name": "elementScroll",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"getSignature": {
								"id": 5026,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 62,
									"character": 27
								}
							]
						},
						{
							"id": 5028,
							"name": "listenWindowScroll",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "By default component observes list scroll position.\nIf set to `true`, component will observe position of page scroll instead."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 5029,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "By default component observes list scroll position.\nIf set to `true`, component will observe position of page scroll instead."
								},
								"parameters": [
									{
										"id": 5030,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 78,
									"character": 24
								}
							]
						},
						{
							"id": 5048,
							"name": "checkPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5049,
									"name": "checkPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5050,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 5051,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 5054,
															"name": "clientHeight",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/list/infinite-list.directive.ts",
																	"line": 141,
																	"character": 55
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5052,
															"name": "scrollHeight",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/list/infinite-list.directive.ts",
																	"line": 141,
																	"character": 30
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 5053,
															"name": "scrollTop",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/list/infinite-list.directive.ts",
																	"line": 141,
																	"character": 41
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																5054,
																5052,
																5053
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/list/infinite-list.directive.ts",
															"line": 141,
															"character": 16
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 141,
									"character": 15
								}
							]
						},
						{
							"id": 5055,
							"name": "getContainerDimensions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5056,
									"name": "getContainerDimensions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbScrollableContainerDimentions",
												"id": 5017
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 158,
									"character": 32
								}
							]
						},
						{
							"id": 5057,
							"name": "inSyncWithDom",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5058,
									"name": "inSyncWithDom",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 174,
									"character": 23
								}
							]
						},
						{
							"id": 5044,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5045,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 109,
									"character": 17
								}
							]
						},
						{
							"id": 5046,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5047,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 137,
									"character": 13
								}
							]
						},
						{
							"id": 5033,
							"name": "onElementScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'scroll'"
									}
								}
							],
							"signatures": [
								{
									"id": 5034,
									"name": "onElementScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 95,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5036
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5022,
								5031,
								5039,
								5037,
								5023,
								5035,
								5038,
								5027,
								5032,
								5024
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5025,
								5028
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5048,
								5055,
								5057,
								5044,
								5046,
								5033
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/list/infinite-list.directive.ts",
							"line": 57,
							"character": 36
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 5017,
					"name": "NbScrollableContainerDimentions",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5020,
							"name": "clientHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 23,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5019,
							"name": "scrollHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5018,
							"name": "scrollTop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/infinite-list.directive.ts",
									"line": 21,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5020,
								5019,
								5018
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/list/infinite-list.directive.ts",
							"line": 20,
							"character": 44
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5021,
						5017
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/list/infinite-list.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4990,
			"name": "\"theme/components/list/list-page-tracker.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/list/list-page-tracker.directive.ts",
			"children": [
				{
					"id": 4991,
					"name": "NbListPageTrackerDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "List pager directive",
						"text": "Directive allows you to determine page of currently viewing items.\n\n"
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{\n  selector: '[nbListPageTracker]',\n}"
							}
						}
					],
					"children": [
						{
							"id": 4999,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5000,
									"name": "new NbListPageTrackerDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbListPageTrackerDirective",
										"id": 4991
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 51,
									"character": 35
								}
							]
						},
						{
							"id": 4992,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 27,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4994,
							"name": "currentPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 30,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4998,
							"name": "listItems",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ContentChildren",
									"type": {
										"type": "reference",
										"name": "ContentChildren"
									},
									"arguments": {
										"selector": "NbListItemComponent",
										"opts": "{ read: ElementRef }"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 51,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryList",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ElementRef"
									}
								]
							}
						},
						{
							"id": 4993,
							"name": "observer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 29,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "IntersectionObserver"
							}
						},
						{
							"id": 4997,
							"name": "pageChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when another page become visible."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 48,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"defaultValue": " new EventEmitter<number>()"
						},
						{
							"id": 4995,
							"name": "pageSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Items per page."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4996,
							"name": "startPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Page to start counting with."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 42,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						},
						{
							"id": 5007,
							"name": "checkForPageChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5008,
									"name": "checkForPageChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5009,
											"name": "entries",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IntersectionObserverEntry"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 78,
									"character": 28
								}
							]
						},
						{
							"id": 5013,
							"name": "elementIndex",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5014,
									"name": "elementIndex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5015,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Element"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 120,
									"character": 22
								}
							]
						},
						{
							"id": 5010,
							"name": "findMostVisiblePage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5011,
									"name": "findMostVisiblePage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5012,
											"name": "entries",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IntersectionObserverEntry"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 87,
									"character": 29
								}
							]
						},
						{
							"id": 5001,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5002,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 60,
									"character": 17
								}
							]
						},
						{
							"id": 5003,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5004,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 70,
									"character": 13
								}
							]
						},
						{
							"id": 5005,
							"name": "observeItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5006,
									"name": "observeItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list-page-tracker.directive.ts",
									"line": 74,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4999
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4992,
								4994,
								4998,
								4993,
								4997,
								4995,
								4996
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5007,
								5013,
								5010,
								5001,
								5003,
								5005
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/list/list-page-tracker.directive.ts",
							"line": 25,
							"character": 39
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4991
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/list/list-page-tracker.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4985,
			"name": "\"theme/components/list/list.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/list/list.component.ts",
			"children": [
				{
					"id": 4986,
					"name": "NbListComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "List is a container component that wraps `nb-list-item` component.",
						"text": "Basic example:",
						"tags": [
							{
								"tag": "stacked-example(simple",
								"text": "list, list/simple-list-showcase.component)\n\n`nb-list-item` accepts arbitrary content, so you can create list of any components.\n\nList of users:"
							},
							{
								"tag": "stacked-example(users",
								"text": "list, list/users-list-showcase.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nlist-item-border-color:\nlist-item-padding:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-list',\n  template: `<ng-content select=\"nb-list-item\"></ng-content>`,\n  styleUrls: [ './list.component.scss' ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 4987,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Role attribute value",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.role'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list.component.ts",
									"line": 32,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"list\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4987
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/list/list.component.ts",
							"line": 24,
							"character": 28
						}
					]
				},
				{
					"id": 4988,
					"name": "NbListItemComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "List item component is a grouping component that accepts arbitrary content.\nIt should be direct child of `nb-list` componet."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-list-item',\n  template: `<ng-content></ng-content>`,\n  styleUrls: [ 'list-item.component.scss' ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 4989,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Role attribute value",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.role'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/list/list.component.ts",
									"line": 52,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"listitem\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4989
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/list/list.component.ts",
							"line": 44,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4986,
						4988
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/list/list.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5059,
			"name": "\"theme/components/list/list.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/list/list.module.ts",
			"children": [
				{
					"id": 5060,
					"name": "NbListModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  declarations: components,\n  exports: components,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/list/list.module.ts",
							"line": 17,
							"character": 25
						}
					]
				},
				{
					"id": 5061,
					"name": "components",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/list/list.module.ts",
							"line": 6,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbListComponent,\n  NbListItemComponent,\n  NbListPageTrackerDirective,\n  NbInfiniteListDirective,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5060
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5061
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/list/list.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3126,
			"name": "\"theme/components/menu/menu.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/menu/menu.component.ts",
			"children": [
				{
					"id": 3127,
					"name": "NbToggleStates",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3129,
							"name": "Collapsed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 29,
									"character": 11
								}
							],
							"defaultValue": "\"collapsed\""
						},
						{
							"id": 3128,
							"name": "Expanded",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 28,
									"character": 10
								}
							],
							"defaultValue": "\"expanded\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3129,
								3128
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.component.ts",
							"line": 27,
							"character": 26
						}
					]
				},
				{
					"id": 3160,
					"name": "NbMenuComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Vertical menu component.",
						"text": "Accepts a list of menu items and renders them accordingly. Supports multi-level menus.\n\nBasic example",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "menu/menu-showcase.component)\n\n```ts\n// ...\nitems: NbMenuItem[] = [\n {\n   title: home,\n   link: '/'\n },\n {\n   title: dashboard,\n   link: 'dashboard'\n }\n];\n// ...\n<nb-menu [items]=\"items\"></nb-menu>\n```\n\nTwo-level menu example"
							},
							{
								"tag": "stacked-example(two",
								"text": "Levels, menu/menu-children.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nmenu-font-family:\nmenu-font-size:\nmenu-font-weight:\nmenu-fg:\nmenu-bg:\nmenu-active-fg:\nmenu-active-bg:\nmenu-active-font-weight:\nmenu-submenu-bg:\nmenu-submenu-fg:\nmenu-submenu-active-fg:\nmenu-submenu-active-bg:\nmenu-submenu-active-border-color:\nmenu-submenu-active-shadow:\nmenu-submenu-hover-fg:\nmenu-submenu-hover-bg:\nmenu-submenu-item-border-width:\nmenu-submenu-item-border-radius:\nmenu-submenu-item-padding:\nmenu-submenu-item-container-padding:\nmenu-submenu-padding:\nmenu-group-font-weight:\nmenu-group-font-size:\nmenu-group-fg:\nmenu-group-padding\nmenu-item-padding:\nmenu-item-separator:\nmenu-icon-font-size:\nmenu-icon-margin:\nmenu-icon-color:\nmenu-icon-active-color:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-menu',\n  styleUrls: ['./menu.component.scss'],\n  template: `\n    <ul class=\"menu-items\">\n      <ng-container *ngFor=\"let item of items\">\n        <li nbMenuItem *ngIf=\"!item.hidden\"\n            [menuItem]=\"item\"\n            [class.menu-group]=\"item.group\"\n            (hoverItem)=\"onHoverItem($event)\"\n            (toggleSubMenu)=\"onToggleSubMenu($event)\"\n            (selectItem)=\"onSelectItem($event)\"\n            (itemClick)=\"onItemClick($event)\"\n            class=\"menu-item\">\n        </li>\n      </ng-container>\n    </ul>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3172,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3176,
									"name": "new NbMenuComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3177,
											"name": "window",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_WINDOW"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3178,
											"name": "menuInternalService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuInternalService",
												"id": 3030
											}
										},
										{
											"id": 3179,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMenuComponent",
										"id": 3160
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 208,
									"character": 45
								}
							]
						},
						{
							"id": 3170,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 207,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3171,
							"name": "autoCollapseValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 208,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3161,
							"name": "inverseValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.inverse'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 172,
									"character": 44
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3163,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of menu items.",
								"tags": [
									{
										"tag": "type",
										"text": "List<NbMenuItem> | List<any> | any\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 186,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbMenuItem",
									"id": 2983
								}
							}
						},
						{
							"id": 3174,
							"name": "menuInternalService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 211,
									"character": 41
								}
							],
							"type": {
								"type": "reference",
								"name": "NbMenuInternalService",
								"id": 3030
							}
						},
						{
							"id": 3175,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 212,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 3162,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Tags a menu with some ID, can be later used in the menu service\nto determine which menu triggered the action, if multiple menus exist on the page.",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 180,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3173,
							"name": "window",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_WINDOW"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 210,
									"character": 47
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 3167,
							"name": "autoCollapse",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Collapse all opened submenus on the toggle event\nDefault value is \"false\"",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3168,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Collapse all opened submenus on the toggle event\nDefault value is \"false\"",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3169,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 203,
									"character": 18
								}
							]
						},
						{
							"id": 3164,
							"name": "inverse",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes colors inverse based on current theme",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3165,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes colors inverse based on current theme",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3166,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 193,
									"character": 13
								}
							]
						},
						{
							"id": 3206,
							"name": "collapseAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3207,
									"name": "collapseAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 312,
									"character": 21
								}
							]
						},
						{
							"id": 3211,
							"name": "compareTag",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3212,
									"name": "compareTag",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3213,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 329,
									"character": 20
								}
							]
						},
						{
							"id": 3208,
							"name": "getHomeItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3209,
									"name": "getHomeItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3210,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMenuItem",
										"id": 2983
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 316,
									"character": 21
								}
							]
						},
						{
							"id": 3214,
							"name": "getSelectedItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3215,
									"name": "getSelectedItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3216,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMenuItem",
										"id": 2983
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 333,
									"character": 25
								}
							]
						},
						{
							"id": 3204,
							"name": "navigateHome",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3205,
									"name": "navigateHome",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 298,
									"character": 22
								}
							]
						},
						{
							"id": 3182,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3183,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 262,
									"character": 17
								}
							]
						},
						{
							"id": 3202,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3203,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 294,
									"character": 13
								}
							]
						},
						{
							"id": 3180,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3181,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 215,
									"character": 10
								}
							]
						},
						{
							"id": 3184,
							"name": "onAddItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3185,
									"name": "onAddItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3186,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3187,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3189,
															"name": "items",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.component.ts",
																	"line": 266,
																	"character": 38
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "NbMenuItem",
																	"id": 2983
																}
															}
														},
														{
															"id": 3188,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.component.ts",
																	"line": 266,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3189,
																3188
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/menu/menu.component.ts",
															"line": 266,
															"character": 17
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 266,
									"character": 11
								}
							]
						},
						{
							"id": 3190,
							"name": "onHoverItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3191,
									"name": "onHoverItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3192,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 273,
									"character": 13
								}
							]
						},
						{
							"id": 3199,
							"name": "onItemClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3200,
									"name": "onItemClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3201,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 290,
									"character": 13
								}
							]
						},
						{
							"id": 3196,
							"name": "onSelectItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3197,
									"name": "onSelectItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3198,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 286,
									"character": 14
								}
							]
						},
						{
							"id": 3193,
							"name": "onToggleSubMenu",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3194,
									"name": "onToggleSubMenu",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3195,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 277,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3172
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3170,
								3171,
								3161,
								3163,
								3174,
								3175,
								3162,
								3173
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3167,
								3164
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3206,
								3211,
								3208,
								3214,
								3204,
								3182,
								3202,
								3180,
								3184,
								3190,
								3199,
								3196,
								3193
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.component.ts",
							"line": 171,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 3130,
					"name": "NbMenuItemComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: '[nbMenuItem]',\n  templateUrl: './menu-item.component.html',\n  animations: [\n    trigger('toggle', [\n      state(NbToggleStates.Collapsed, style({ height: '0' })),\n      state(NbToggleStates.Expanded, style({ height: '*' })),\n      transition(`${NbToggleStates.Collapsed} <=> ${NbToggleStates.Expanded}`, animate(300)),\n    ]),\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 3138,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3140,
									"name": "new NbMenuItemComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3141,
											"name": "menuService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuService",
												"id": 3008
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMenuItemComponent",
										"id": 3130
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 52,
									"character": 30
								}
							]
						},
						{
							"id": 3136,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 51,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3132,
							"name": "hoverItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 46,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new EventEmitter<any>()"
						},
						{
							"id": 3135,
							"name": "itemClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 49,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new EventEmitter<any>()"
						},
						{
							"id": 3131,
							"name": "menuItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbMenuItem",
								"id": 2983
							},
							"defaultValue": " <NbMenuItem>null"
						},
						{
							"id": 3139,
							"name": "menuService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 54,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "NbMenuService",
								"id": 3008
							}
						},
						{
							"id": 3134,
							"name": "selectItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 48,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new EventEmitter<any>()"
						},
						{
							"id": 3137,
							"name": "toggleState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 52,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "NbToggleStates",
								"id": 3127
							}
						},
						{
							"id": 3133,
							"name": "toggleSubMenu",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 47,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new EventEmitter<any>()"
						},
						{
							"id": 3144,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3145,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 60,
									"character": 17
								}
							]
						},
						{
							"id": 3142,
							"name": "ngDoCheck",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3143,
									"name": "ngDoCheck",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 56,
									"character": 11
								}
							]
						},
						{
							"id": 3146,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3147,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 70,
									"character": 13
								}
							]
						},
						{
							"id": 3151,
							"name": "onHoverItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3152,
									"name": "onHoverItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3153,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 78,
									"character": 13
								}
							]
						},
						{
							"id": 3157,
							"name": "onItemClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3158,
									"name": "onItemClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3159,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 86,
									"character": 13
								}
							]
						},
						{
							"id": 3154,
							"name": "onSelectItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3155,
									"name": "onSelectItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3156,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 82,
									"character": 14
								}
							]
						},
						{
							"id": 3148,
							"name": "onToggleSubMenu",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3149,
									"name": "onToggleSubMenu",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3150,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.component.ts",
									"line": 74,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3138
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3136,
								3132,
								3135,
								3131,
								3139,
								3134,
								3137,
								3133
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3144,
								3142,
								3146,
								3151,
								3157,
								3154,
								3148
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.component.ts",
							"line": 43,
							"character": 32
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "DoCheck"
						},
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						3127
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3160,
						3130
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/menu/menu.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3217,
			"name": "\"theme/components/menu/menu.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/menu/menu.module.ts",
			"children": [
				{
					"id": 3218,
					"name": "NbMenuModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbSharedModule],\n  declarations: [...nbMenuComponents],\n  exports: [...nbMenuComponents],\n}"
							}
						}
					],
					"children": [
						{
							"id": 3219,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3220,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.module.ts",
									"line": 23,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3219
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.module.ts",
							"line": 22,
							"character": 25
						}
					]
				},
				{
					"id": 3222,
					"name": "NB_MENU_PROVIDERS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.module.ts",
							"line": 15,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [NbMenuService, NbMenuInternalService]"
				},
				{
					"id": 3221,
					"name": "nbMenuComponents",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.module.ts",
							"line": 13,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [NbMenuComponent, NbMenuItemComponent]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3218
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3222,
						3221
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/menu/menu.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2979,
			"name": "\"theme/components/menu/menu.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/menu/menu.service.ts",
			"children": [
				{
					"id": 3030,
					"name": "NbMenuInternalService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3031,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3033,
									"name": "new NbMenuInternalService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3034,
											"name": "location",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Location"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMenuInternalService",
										"id": 3030
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 186,
									"character": 36
								}
							]
						},
						{
							"id": 3032,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 188,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Location"
							}
						},
						{
							"id": 3095,
							"name": "applyDefaults",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3096,
									"name": "applyDefaults",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3097,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3098,
											"name": "defaultItem",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 331,
									"character": 23
								}
							]
						},
						{
							"id": 3049,
							"name": "collapseAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3050,
									"name": "collapseAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3051,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										},
										{
											"id": 3052,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3053,
											"name": "except",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 242,
									"character": 13
								}
							]
						},
						{
							"id": 3091,
							"name": "collapseItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3092,
									"name": "collapseItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Collapse all given items deeply.",
										"returns": "items which expanded value was changed.\n"
									},
									"parameters": [
										{
											"id": 3093,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "array of items to collapse."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										},
										{
											"id": 3094,
											"name": "except",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "menu item which shouldn't be collapsed, also disables collapsing for parents of this item."
											},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbMenuItem",
											"id": 2983
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 310,
									"character": 23
								}
							]
						},
						{
							"id": 3102,
							"name": "findItemByUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3103,
									"name": "findItemByUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Find deepest item which link matches current URL path.",
										"returns": "found item of undefined.\n"
									},
									"parameters": [
										{
											"id": 3104,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "array of items to search in."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 351,
									"character": 23
								}
							]
						},
						{
							"id": 3105,
							"name": "isSelectedInUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3106,
									"name": "isSelectedInUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3107,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 368,
									"character": 25
								}
							]
						},
						{
							"id": 3084,
							"name": "itemClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3085,
									"name": "itemClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3086,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										},
										{
											"id": 3087,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 278,
									"character": 11
								}
							]
						},
						{
							"id": 3072,
							"name": "itemHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3073,
									"name": "itemHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3074,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										},
										{
											"id": 3075,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 266,
									"character": 11
								}
							]
						},
						{
							"id": 3080,
							"name": "itemSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3081,
									"name": "itemSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3082,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										},
										{
											"id": 3083,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 274,
									"character": 12
								}
							]
						},
						{
							"id": 3054,
							"name": "onAddItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3055,
									"name": "onAddItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3056,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3058,
															"name": "items",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.service.ts",
																	"line": 250,
																	"character": 46
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "NbMenuItem",
																	"id": 2983
																}
															}
														},
														{
															"id": 3057,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.service.ts",
																	"line": 250,
																	"character": 31
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3058,
																3057
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/menu/menu.service.ts",
															"line": 250,
															"character": 26
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 250,
									"character": 11
								}
							]
						},
						{
							"id": 3063,
							"name": "onCollapseAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3064,
									"name": "onCollapseAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3065,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3066,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.service.ts",
																	"line": 258,
																	"character": 35
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3066
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/menu/menu.service.ts",
															"line": 258,
															"character": 30
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 258,
									"character": 15
								}
							]
						},
						{
							"id": 3067,
							"name": "onGetSelectedItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3068,
									"name": "onGetSelectedItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3069,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3071,
															"name": "listener",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.service.ts",
																	"line": 262,
																	"character": 57
																}
															],
															"type": {
																"type": "reference",
																"name": "BehaviorSubject",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "NbMenuBag",
																		"id": 2980
																	}
																]
															}
														},
														{
															"id": 3070,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.service.ts",
																	"line": 262,
																	"character": 39
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3071,
																3070
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/menu/menu.service.ts",
															"line": 262,
															"character": 34
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 262,
									"character": 19
								}
							]
						},
						{
							"id": 3059,
							"name": "onNavigateHome",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3060,
									"name": "onNavigateHome",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3061,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3062,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/menu/menu.service.ts",
																	"line": 254,
																	"character": 36
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3062
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/menu/menu.service.ts",
															"line": 254,
															"character": 31
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 254,
									"character": 16
								}
							]
						},
						{
							"id": 3035,
							"name": "prepareItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3036,
									"name": "prepareItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3037,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 190,
									"character": 14
								}
							]
						},
						{
							"id": 3088,
							"name": "resetSelection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3089,
									"name": "resetSelection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Unselect all given items deeply.",
										"returns": "items which selected value was changed.\n"
									},
									"parameters": [
										{
											"id": 3090,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "array of items to unselect."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbMenuItem",
											"id": 2983
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 287,
									"character": 24
								}
							]
						},
						{
							"id": 3038,
							"name": "selectFromUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3039,
									"name": "selectFromUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3040,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										},
										{
											"id": 3041,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3042,
											"name": "collapseOther",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 198,
									"character": 15
								}
							]
						},
						{
							"id": 3043,
							"name": "selectItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3044,
									"name": "selectItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3045,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										},
										{
											"id": 3046,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										},
										{
											"id": 3047,
											"name": "collapseOther",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										},
										{
											"id": 3048,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 205,
									"character": 12
								}
							]
						},
						{
							"id": 3099,
							"name": "setParent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3100,
									"name": "setParent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3101,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 339,
									"character": 19
								}
							]
						},
						{
							"id": 3076,
							"name": "submenuToggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3077,
									"name": "submenuToggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3078,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										},
										{
											"id": 3079,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 270,
									"character": 15
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3031
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3032
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3095,
								3049,
								3091,
								3102,
								3105,
								3084,
								3072,
								3080,
								3054,
								3063,
								3067,
								3059,
								3035,
								3088,
								3038,
								3043,
								3099,
								3076
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 186,
							"character": 34
						}
					]
				},
				{
					"id": 2983,
					"name": "NbMenuItem",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Menu Item options"
					},
					"children": [
						{
							"id": 2989,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Children items",
								"tags": [
									{
										"tag": "type",
										"text": "{List<NbMenuItem>}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 60,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbMenuItem",
									"id": 2983
								}
							}
						},
						{
							"id": 2999,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 97,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2988,
							"name": "expanded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Expanded by defaul",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 55,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3000,
							"name": "fragment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 98,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2995,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether the item is just a group (non-clickable)",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 90,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2992,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hidden Item",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 75,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2994,
							"name": "home",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Where this is a home item",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 85,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2987,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Icon class name",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 50,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2985,
							"name": "link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Item relative link (for routerLink)",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 40,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2997,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 95,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "NbMenuItem",
								"id": 2983
							}
						},
						{
							"id": 2993,
							"name": "pathMatch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Item is selected when partly or fully equal to the current url",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 80,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"full\""
						},
						{
							"id": 2996,
							"name": "queryParams",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Map of query parameters",
								"tags": [
									{
										"tag": "type",
										"text": "{Params}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 94,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Params"
							}
						},
						{
							"id": 2998,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 96,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2990,
							"name": "subMenuHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Children items height",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 65,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 2991,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "HTML Link target",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 70,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2984,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Item Title",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 35,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2986,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Item URL (absolute)",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 45,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3001,
							"name": "getParents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3002,
									"name": "getParents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"returns": "item parents in top-down order\n"
									},
									"parameters": [
										{
											"id": 3003,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbMenuItem",
											"id": 2983
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 103,
									"character": 19
								}
							]
						},
						{
							"id": 3004,
							"name": "isParent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3005,
									"name": "isParent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3006,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										},
										{
											"id": 3007,
											"name": "possibleChild",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMenuItem",
												"id": 2983
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 115,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2989,
								2999,
								2988,
								3000,
								2995,
								2992,
								2994,
								2987,
								2985,
								2997,
								2993,
								2996,
								2998,
								2990,
								2991,
								2984,
								2986
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3001,
								3004
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 30,
							"character": 23
						}
					]
				},
				{
					"id": 3008,
					"name": "NbMenuService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Menu Service. Allows you to listen to menu events, or to interact with a menu."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3009,
							"name": "addItems",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3010,
									"name": "addItems",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add items to the end of the menu items list"
									},
									"parameters": [
										{
											"id": 3011,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										},
										{
											"id": 3012,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 135,
									"character": 10
								}
							]
						},
						{
							"id": 3013,
							"name": "collapseAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3014,
									"name": "collapseAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Collapses all menu items"
									},
									"parameters": [
										{
											"id": 3015,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 143,
									"character": 13
								}
							]
						},
						{
							"id": 3019,
							"name": "getSelectedItem",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3020,
									"name": "getSelectedItem",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns currently selected item. Won't subscribe to the future events.",
										"returns": ">}\n"
									},
									"parameters": [
										{
											"id": 3021,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbMenuBag",
												"id": 2980
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 160,
									"character": 17
								}
							]
						},
						{
							"id": 3016,
							"name": "navigateHome",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3017,
									"name": "navigateHome",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Navigate to the home menu item"
									},
									"parameters": [
										{
											"id": 3018,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 151,
									"character": 14
								}
							]
						},
						{
							"id": 3022,
							"name": "onItemClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3023,
									"name": "onItemClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbMenuBag",
												"id": 2980
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 168,
									"character": 13
								}
							]
						},
						{
							"id": 3026,
							"name": "onItemHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3027,
									"name": "onItemHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbMenuBag",
												"id": 2980
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 176,
									"character": 13
								}
							]
						},
						{
							"id": 3024,
							"name": "onItemSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3025,
									"name": "onItemSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbMenuBag",
												"id": 2980
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 172,
									"character": 14
								}
							]
						},
						{
							"id": 3028,
							"name": "onSubmenuToggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3029,
									"name": "onSubmenuToggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbMenuBag",
												"id": 2980
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 180,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3009,
								3013,
								3019,
								3016,
								3022,
								3026,
								3024,
								3028
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 128,
							"character": 26
						}
					]
				},
				{
					"id": 2980,
					"name": "NbMenuBag",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2982,
							"name": "item",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 14,
									"character": 46
								}
							],
							"type": {
								"type": "reference",
								"name": "NbMenuItem",
								"id": 2983
							}
						},
						{
							"id": 2981,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/menu/menu.service.ts",
									"line": 14,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2982,
								2981
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 14,
							"character": 26
						}
					]
				},
				{
					"id": 3109,
					"name": "addItems$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 17,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "ReplaySubject",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 3110,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3112,
											"name": "items",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "theme/components/menu/menu.service.ts",
													"line": 17,
													"character": 56
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMenuItem",
													"id": 2983
												}
											}
										},
										{
											"id": 3111,
											"name": "tag",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "theme/components/menu/menu.service.ts",
													"line": 17,
													"character": 41
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3112,
												3111
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": " new ReplaySubject<{ tag: string; items: NbMenuItem[] }>(1)"
				},
				{
					"id": 3123,
					"name": "collapseAll$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 24,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "ReplaySubject",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 3124,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3125,
											"name": "tag",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "theme/components/menu/menu.service.ts",
													"line": 24,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3125
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": " new ReplaySubject<{ tag: string }>(1)"
				},
				{
					"id": 3116,
					"name": "getSelectedItem$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 19,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "ReplaySubject",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 3117,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3119,
											"name": "listener",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "theme/components/menu/menu.service.ts",
													"line": 20,
													"character": 45
												}
											],
											"type": {
												"type": "reference",
												"name": "BehaviorSubject",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbMenuBag",
														"id": 2980
													}
												]
											}
										},
										{
											"id": 3118,
											"name": "tag",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "theme/components/menu/menu.service.ts",
													"line": 20,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3119,
												3118
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": " new ReplaySubject<{ tag: string; listener: BehaviorSubject<NbMenuBag> }>(1)"
				},
				{
					"id": 3108,
					"name": "itemClick$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 16,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "Subject",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbMenuBag",
								"id": 2980
							}
						]
					},
					"defaultValue": " new Subject<NbMenuBag>()"
				},
				{
					"id": 3121,
					"name": "itemHover$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 22,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "ReplaySubject",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbMenuBag",
								"id": 2980
							}
						]
					},
					"defaultValue": " new ReplaySubject<NbMenuBag>(1)"
				},
				{
					"id": 3120,
					"name": "itemSelect$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 21,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ReplaySubject",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbMenuBag",
								"id": 2980
							}
						]
					},
					"defaultValue": " new ReplaySubject<NbMenuBag>(1)"
				},
				{
					"id": 3113,
					"name": "navigateHome$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 18,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "ReplaySubject",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 3114,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3115,
											"name": "tag",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "theme/components/menu/menu.service.ts",
													"line": 18,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3115
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": " new ReplaySubject<{ tag: string }>(1)"
				},
				{
					"id": 3122,
					"name": "submenuToggle$",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/menu/menu.service.ts",
							"line": 23,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "ReplaySubject",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbMenuBag",
								"id": 2980
							}
						]
					},
					"defaultValue": " new ReplaySubject<NbMenuBag>(1)"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3030,
						2983,
						3008
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2980
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3109,
						3123,
						3116,
						3108,
						3121,
						3120,
						3113,
						3122
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/menu/menu.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2599,
			"name": "\"theme/components/menu/url-matching-helpers\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/menu/url-matching-helpers.ts",
			"children": [
				{
					"id": 2608,
					"name": "getPathPartOfUrl",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2609,
							"name": "getPathPartOfUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2610,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/url-matching-helpers.ts",
							"line": 19,
							"character": 32
						}
					]
				},
				{
					"id": 2604,
					"name": "isUrlPathContain",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2605,
							"name": "isUrlPathContain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2606,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2607,
									"name": "link",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/url-matching-helpers.ts",
							"line": 12,
							"character": 32
						}
					]
				},
				{
					"id": 2600,
					"name": "isUrlPathEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2601,
							"name": "isUrlPathEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "license",
										"text": "\nCopyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2602,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2603,
									"name": "link",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/menu/url-matching-helpers.ts",
							"line": 7,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2608,
						2604,
						2600
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/menu/url-matching-helpers.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4216,
			"name": "\"theme/components/popover/popover.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/popover/popover.component.ts",
			"children": [
				{
					"id": 4217,
					"name": "NbPopoverComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Overlay container.\nRenders provided content inside.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\npopover-fg\npopover-bg\npopover-border\npopover-shadow\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-popover',\n  styleUrls: ['./popover.component.scss'],\n  template: `\n    <span class=\"arrow\"></span>\n    <nb-overlay-container [content]=\"content\" [context]=\"context\"></nb-overlay-container>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4218,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.component.ts",
									"line": 31,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4219,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.component.ts",
									"line": 32,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 4220,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 7,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.position",
								"id": 3766
							}
						},
						{
							"id": 4225,
							"name": "bottom",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-bottom'"
									}
								}
							],
							"getSignature": {
								"id": 4226,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.bottom",
									"id": 3771
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 20,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.bottom",
								"id": 3771
							}
						},
						{
							"id": 4227,
							"name": "left",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-left'"
									}
								}
							],
							"getSignature": {
								"id": 4228,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.left",
									"id": 3773
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 25,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.left",
								"id": 3773
							}
						},
						{
							"id": 4223,
							"name": "right",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-right'"
									}
								}
							],
							"getSignature": {
								"id": 4224,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.right",
									"id": 3769
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 15,
									"character": 11
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.right",
								"id": 3769
							}
						},
						{
							"id": 4221,
							"name": "top",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-overlay-top'"
									}
								}
							],
							"getSignature": {
								"id": 4222,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								},
								"inheritedFrom": {
									"type": "reference",
									"name": "NbPositionedContainer.top",
									"id": 3767
								}
							},
							"sources": [
								{
									"fileName": "theme/components/cdk/overlay/overlay-container.ts",
									"line": 10,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NbPositionedContainer.top",
								"id": 3767
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4218,
								4219,
								4220
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4225,
								4227,
								4223,
								4221
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/popover/popover.component.ts",
							"line": 30,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NbPositionedContainer",
							"id": 3765
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4217
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/popover/popover.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4229,
			"name": "\"theme/components/popover/popover.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/popover/popover.directive.ts",
			"children": [
				{
					"id": 4230,
					"name": "NbPopoverDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Powerful popover directive, which provides the best UX for your users.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "popover/popover-showcase.component)\n\nPopover can accept different content such as:\nTemplateRef\n\n```html\n<button [nbPopover]=\"templateRef\"></button>\n<ng-template #templateRef>\n  <span>Hello, Popover!</span>\n</ng-template>\n```\n\nCustom components\n\n```html\n<button [nbPopover]=\"MyPopoverComponent\"></button>\n```\n\nBoth custom components and templateRef popovers can receive *contentContext* property\nthat will be passed to the content props.\n\nPrimitive types\n\n```html\n<button nbPopover=\"Hello, Popover!\"></button>\n```\n\nPopover has different placements, such as: top, bottom, left, right, start and end\nwhich can be used as following:\n"
							},
							{
								"tag": "stacked-example(placements,",
								"text": "popover/popover-placements.component)\n\nBy default popover will try to adjust itself to maximally fit viewport\nand provide the best user experience. It will try to change position of the popover container.\nIf you wanna disable this behaviour just set it falsy value.\n\n```html\n<button nbPopover=\"Hello, Popover!\" [nbPopoverAdjust]=\"false\"></button>\n```\n\nAlso popover has some different modes which provides capability show$ and hide$ popover in different ways:\n\n- Click mode popover shows when a user clicking on the host element and hides when the user clicks\nsomewhere on the document except popover.\n- Hint mode provides capability show$ popover when the user hovers on the host element\nand hide$ popover when user hovers out of the host.\n- Hover mode works like hint mode with one exception - when the user moves mouse from host element to\nthe container element popover will not be hidden.\n"
							},
							{
								"tag": "stacked-example(available",
								"text": "Modes, popover/popover-modes.component.html)\n"
							},
							{
								"tag": "additional-example(template",
								"text": "Ref, popover/popover-template-ref.component)"
							},
							{
								"tag": "additional-example(custom",
								"text": "Component, popover/popover-custom-component.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{ selector: '[nbPopover]' }"
							}
						}
					],
					"children": [
						{
							"id": 4241,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4246,
									"name": "new NbPopoverDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4247,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4248,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 4249,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 4250,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbPopoverDirective",
										"id": 4230
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 127,
									"character": 34
								}
							]
						},
						{
							"id": 4234,
							"name": "adjustment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Container position will be changes automatically based on this strategy if container can't fit view port.\nSet this property to any falsy value if you want to disable automatically adjustment.\nAvailable values: clockwise, counterclockwise."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbPopoverAdjustment'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 114,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustment",
								"id": 3603
							},
							"defaultValue": " NbAdjustment.CLOCKWISE"
						},
						{
							"id": 4240,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 127,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4237,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 124,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 4231,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Popover content which will be rendered in NbArrowedOverlayContainerComponent.\nAvailable content: template ref, component and any primitive."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbPopover'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 93,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayContent",
								"id": 3804
							}
						},
						{
							"id": 4232,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Container content context. Will be applied to the rendered component."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbPopoverContext'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 99,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 4242,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 129,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4243,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 130,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 4235,
							"name": "mode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Describes when the container will be shown.\nAvailable options: click, hover and hint"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbPopoverMode'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 121,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "NbTrigger",
								"id": 3906
							},
							"defaultValue": " NbTrigger.CLICK"
						},
						{
							"id": 4245,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 132,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 4233,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Position will be calculated relatively host element based on the position.\nCan be top, right, bottom, left, start or end."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbPopoverPlacement'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 106,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"defaultValue": " NbPosition.TOP"
						},
						{
							"id": 4244,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 131,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							}
						},
						{
							"id": 4238,
							"name": "positionStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 125,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustableConnectedPositionStrategy",
								"id": 3616
							}
						},
						{
							"id": 4236,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 123,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 4239,
							"name": "triggerStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 126,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "NbTriggerStrategy",
								"id": 3911
							}
						},
						{
							"id": 4261,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4262,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 173,
									"character": 34
								}
							]
						},
						{
							"id": 4263,
							"name": "createTriggerStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4264,
									"name": "createTriggerStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 180,
									"character": 33
								}
							]
						},
						{
							"id": 4257,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4258,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 160,
									"character": 6
								}
							]
						},
						{
							"id": 4251,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4252,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 135,
									"character": 17
								}
							]
						},
						{
							"id": 4253,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4254,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 147,
									"character": 13
								}
							]
						},
						{
							"id": 4255,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4256,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 152,
									"character": 6
								}
							]
						},
						{
							"id": 4265,
							"name": "subscribeOnPositionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4266,
									"name": "subscribeOnPositionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 189,
									"character": 37
								}
							]
						},
						{
							"id": 4267,
							"name": "subscribeOnTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 4268,
									"name": "subscribeOnTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 195,
									"character": 31
								}
							]
						},
						{
							"id": 4259,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4260,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/popover/popover.directive.ts",
									"line": 165,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4241
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4234,
								4240,
								4237,
								4231,
								4232,
								4242,
								4243,
								4235,
								4245,
								4233,
								4244,
								4238,
								4236,
								4239
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4261,
								4263,
								4257,
								4251,
								4253,
								4255,
								4265,
								4267,
								4259
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/popover/popover.directive.ts",
							"line": 86,
							"character": 31
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4230
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/popover/popover.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4269,
			"name": "\"theme/components/popover/popover.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/popover/popover.module.ts",
			"children": [
				{
					"id": 4270,
					"name": "NbPopoverModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbOverlayModule],\n  declarations: [NbPopoverDirective, NbPopoverComponent],\n  exports: [NbPopoverDirective],\n  entryComponents: [NbPopoverComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/popover/popover.module.ts",
							"line": 20,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4270
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/popover/popover.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4335,
			"name": "\"theme/components/progress-bar/progress-bar.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/progress-bar/progress-bar.component.ts",
			"children": [
				{
					"id": 4336,
					"name": "NbProgressBarComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Progress Bar is a component for indicating progress.",
						"text": "Simple usage:\n\n```html\n<nb-progress-bar [value]=\"50\"></nb-progress-bar>\n```\n\nProgress bar accepts property `value` in range 0-100",
						"tags": [
							{
								"tag": "stacked-example(progress",
								"text": "bar, progress-bar/progress-bar-showcase.component)\n\nProgress bar background could be configured by providing a `status` property:"
							},
							{
								"tag": "stacked-example(progress",
								"text": "bar status, progress-bar/progress-bar-status.component)\n\nProgress bar size (height and font-size) could be configured by providing a `size` property:"
							},
							{
								"tag": "stacked-example(progress",
								"text": "bar size, progress-bar/progress-bar-size.component)\n\n`displayValue` property shows current value inside progress bar. It's also possible to add custom text inside:"
							},
							{
								"tag": "stacked-example(progress",
								"text": "bar value, progress-bar/progress-bar-value.component)\n\nProgress bar supports `width` and `background-color` transition:"
							},
							{
								"tag": "stacked-example(progress",
								"text": "bar interactive, progress-bar/progress-bar-interactive.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nprogress-bar-height-xlg:\nprogress-bar-height-lg:\nprogress-bar-height:\nprogress-bar-height-sm:\nprogress-bar-height-xs:\nprogress-bar-font-size-xlg:\nprogress-bar-font-size-lg:\nprogress-bar-font-size:\nprogress-bar-font-size-sm:\nprogress-bar-font-size-xs:\nprogress-bar-radius:\nprogress-bar-bg-color:\nprogress-bar-font-color:\nprogress-bar-font-weight:\nprogress-bar-default-bg-color:\nprogress-bar-primary-bg-color:\nprogress-bar-success-bg-color:\nprogress-bar-info-bg-color:\nprogress-bar-warning-bg-color:\nprogress-bar-danger-bg-color:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-progress-bar',\n  styleUrls: ['./progress-bar.component.scss'],\n  template: `\n    <div class=\"progress-container {{ size ? '' + size : '' }}\">\n      <div class=\"progress-value {{ status ? '' + status : '' }}\" [style.width.%]=\"value\">\n        <span *ngIf=\"displayValue\">{{ value }}%</span>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4340,
							"name": "displayValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Displays value inside progress bar",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/progress-bar/progress-bar.component.ts",
									"line": 93,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4339,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Progress bar size (xs, sm, lg, xlg)",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/progress-bar/progress-bar.component.ts",
									"line": 87,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4338,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Progress bar background (primary, info success, warning, danger)",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/progress-bar/progress-bar.component.ts",
									"line": 81,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4337,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Progress bar value in percent (0 - 100)",
								"tags": [
									{
										"tag": "type",
										"text": "{number}"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/progress-bar/progress-bar.component.ts",
									"line": 75,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4340,
								4339,
								4338,
								4337
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/progress-bar/progress-bar.component.ts",
							"line": 68,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4336
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/progress-bar/progress-bar.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4341,
			"name": "\"theme/components/progress-bar/progress-bar.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/progress-bar/progress-bar.module.ts",
			"children": [
				{
					"id": 4342,
					"name": "NbProgressBarModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [NbProgressBarComponent],\n  exports: [NbProgressBarComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/progress-bar/progress-bar.module.ts",
							"line": 19,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4342
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/progress-bar/progress-bar.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3223,
			"name": "\"theme/components/route-tabset/route-tabset.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/route-tabset/route-tabset.component.ts",
			"children": [
				{
					"id": 3224,
					"name": "NbRouteTabsetComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Route tabset components.\nRenders tabs inside of a router-outlet.",
						"text": "basic usage example\n\n```ts\n tabs = [\n {\n   title: 'Route tab #1',\n   route: '/pages/description',\n   icon: 'nb-home',\n   responsive: true, // hide title before `route-tabs-icon-only-max-width` value\n },\n {\n   title: 'Route tab #2',\n   route: '/pages/images',\n   }\n ];\n\n <nb-route-tabset [tabs]=\"tabs\"></nb-route-tabset>\n```\n",
						"tags": [
							{
								"tag": "stacked-example(route",
								"text": "Tabset, tabset/route-tabset-showcase.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nroute-tabs-font-family:\nroute-tabs-font-size:\nroute-tabs-active-bg:\nroute-tabs-active-font-weight:\nroute-tabs-padding:\nroute-tabs-header-bg:\nroute-tabs-separator:\nroute-tabs-fg:\nroute-tabs-fg-heading:\nroute-tabs-bg:\nroute-tabs-selected:\nroute-tabs-icon-only-max-width:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-route-tabset',\n  styleUrls: ['./route-tabset.component.scss'],\n  template: `\n    <ul>\n      <li *ngFor=\"let tab of tabs\"\n          (click)=\"$event.preventDefault(); selectTab(tab)\"\n          routerLink=\"{{tab.route}}\"\n          routerLinkActive=\"active\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          [class.responsive]=\"tab.responsive\">\n        <a href>\n          <i *ngIf=\"tab.icon\" [class]=\"tab.icon\"></i>\n          <span *ngIf=\"tab.title\">{{ tab.title }}</span>\n        </a>\n      </li>\n    </ul>\n    <router-outlet></router-outlet>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3231,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3233,
									"name": "new NbRouteTabsetComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3234,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbRouteTabsetComponent",
										"id": 3224
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/route-tabset/route-tabset.component.ts",
									"line": 95,
									"character": 48
								}
							]
						},
						{
							"id": 3230,
							"name": "changeTab",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when tab is selected",
								"tags": [
									{
										"tag": "type",
										"text": "{EventEmitter<any>}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/route-tabset/route-tabset.component.ts",
									"line": 95,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new EventEmitter<any>()"
						},
						{
							"id": 3225,
							"name": "fullWidthValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.full-width'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/route-tabset/route-tabset.component.ts",
									"line": 74,
									"character": 49
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3232,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/route-tabset/route-tabset.component.ts",
									"line": 97,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 3226,
							"name": "tabs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Tabs configuration",
								"tags": [
									{
										"tag": "param",
										"text": "string, title: string, tag?: string}\n",
										"param": "Object{route:"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/route-tabset/route-tabset.component.ts",
									"line": 80,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 3227,
							"name": "fullWidth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Take full width of a parent"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3228,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Take full width of a parent"
								},
								"parameters": [
									{
										"id": 3229,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/route-tabset/route-tabset.component.ts",
									"line": 87,
									"character": 15
								}
							]
						},
						{
							"id": 3235,
							"name": "selectTab",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3236,
									"name": "selectTab",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3237,
											"name": "tab",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/route-tabset/route-tabset.component.ts",
									"line": 100,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3231
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3230,
								3225,
								3232,
								3226
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3227
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3235
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/route-tabset/route-tabset.component.ts",
							"line": 72,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3224
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/route-tabset/route-tabset.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3238,
			"name": "\"theme/components/route-tabset/route-tabset.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/route-tabset/route-tabset.module.ts",
			"children": [
				{
					"id": 3239,
					"name": "NbRouteTabsetModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    NbRouteTabsetComponent,\n  ],\n  exports: [\n    NbRouteTabsetComponent,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/route-tabset/route-tabset.module.ts",
							"line": 24,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3239
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/route-tabset/route-tabset.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4089,
			"name": "\"theme/components/search/search.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/search/search.component.ts",
			"children": [
				{
					"id": 4135,
					"name": "NbSearchComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Beautiful full-page search control.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "search/search-showcase.component)\n\nBasic setup:\n\n```ts\n <nb-search type=\"rotate-layout\"></nb-search>\n```\n\nSeveral animation types are available:\nmodal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half\n\nIt is also possible to handle search event using `NbSearchService`:\n"
							},
							{
								"tag": "stacked-example(search",
								"text": "Event, search/search-event.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nsearch-btn-open-fg:\nsearch-btn-close-fg:\nsearch-bg:\nsearch-bg-secondary:\nsearch-text:\nsearch-info:\nsearch-dash:\nsearch-placeholder:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-search',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['styles/search.component.scss'],\n  template: `\n    <button #searchButton class=\"start-search\" (click)=\"openSearch()\">\n      <i class=\"nb-search\"></i>\n    </button>\n    <nb-search-field\n      *nbPortal\n      [show]=\"showSearchField\"\n      [type]=\"type\"\n      [placeholder]=\"placeholder\"\n      [hint]=\"hint\"\n      (search)=\"search($event)\"\n      (close)=\"hideSearch()\">\n    </nb-search-field>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4145,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4151,
									"name": "new NbSearchComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4152,
											"name": "searchService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbSearchService",
												"id": 3865
											}
										},
										{
											"id": 4153,
											"name": "themeService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbThemeService",
												"id": 1517
											}
										},
										{
											"id": 4154,
											"name": "router",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Router"
											}
										},
										{
											"id": 4155,
											"name": "overlayService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										},
										{
											"id": 4156,
											"name": "changeDetector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbSearchComponent",
										"id": 4135
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 242,
									"character": 67
								}
							]
						},
						{
							"id": 4136,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 209,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 4150,
							"name": "changeDetector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 249,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 4141,
							"name": "hint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hint showing under the input field to improve user experience",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 232,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Hit enter to search\""
						},
						{
							"id": 4137,
							"name": "overlayRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 210,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 4149,
							"name": "overlayService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 248,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 4140,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Search input placeholder",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 225,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Search...\""
						},
						{
							"id": 4148,
							"name": "router",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 247,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Router"
							}
						},
						{
							"id": 4144,
							"name": "searchButton",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "'searchButton'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 242,
									"character": 41
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								]
							}
						},
						{
							"id": 4143,
							"name": "searchFieldPortal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "NbPortalDirective"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 241,
									"character": 49
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPortalDirective",
								"id": 2624
							}
						},
						{
							"id": 4146,
							"name": "searchService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 245,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "NbSearchService",
								"id": 3865
							}
						},
						{
							"id": 4138,
							"name": "showSearchField",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 211,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4139,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Tags a search with some ID, can be later used in the search service\nto determine which search component triggered the action, if multiple searches exist on the page.",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 219,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4147,
							"name": "themeService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 246,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "NbThemeService",
								"id": 1517
							}
						},
						{
							"id": 4142,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Search design type, available types are\nmodal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 239,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4163,
							"name": "hideSearch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4164,
									"name": "hideSearch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 298,
									"character": 12
								}
							]
						},
						{
							"id": 4159,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4160,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 275,
									"character": 13
								}
							]
						},
						{
							"id": 4157,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4158,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 252,
									"character": 10
								}
							]
						},
						{
							"id": 4161,
							"name": "openSearch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4162,
									"name": "openSearch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 284,
									"character": 12
								}
							]
						},
						{
							"id": 4168,
							"name": "removeLayoutClasses",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4169,
									"name": "removeLayoutClasses",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 310,
									"character": 29
								}
							]
						},
						{
							"id": 4165,
							"name": "search",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4166,
									"name": "search",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4167,
											"name": "term",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 305,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4145
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4136,
								4150,
								4141,
								4137,
								4149,
								4140,
								4148,
								4144,
								4143,
								4146,
								4138,
								4139,
								4147,
								4142
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4163,
								4159,
								4157,
								4161,
								4168,
								4165
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/search/search.component.ts",
							"line": 207,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 4090,
					"name": "NbSearchFieldComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "search-field-component is used under the hood by nb-search component\ncan't be used itself"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-search-field',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [\n    'styles/search.component.modal-zoomin.scss',\n    'styles/search.component.layout-rotate.scss',\n    'styles/search.component.modal-move.scss',\n    'styles/search.component.curtain.scss',\n    'styles/search.component.column-curtain.scss',\n    'styles/search.component.modal-drop.scss',\n    'styles/search.component.modal-half.scss',\n  ],\n  template: `\n    <div class=\"search\" (keyup.esc)=\"emitClose()\">\n      <button (click)=\"emitClose()\">\n        <i class=\"nb-close-circled\"></i>\n      </button>\n      <div class=\"form-wrapper\">\n        <form class=\"form\" (keyup.enter)=\"submitSearch(searchInput.value)\">\n          <div class=\"form-content\">\n            <input class=\"search-input\"\n                   #searchInput\n                   autocomplete=\"off\"\n                   [attr.placeholder]=\"placeholder\"\n                   tabindex=\"-1\"\n                   (blur)=\"focusInput()\"/>\n          </div>\n          <span class=\"info\">{{ hint }}</span>\n        </form>\n      </div>\n    </div>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4102,
							"name": "close",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 84,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 4100,
							"name": "hint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 81,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4104,
							"name": "inputElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "'searchInput'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 87,
									"character": 40
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLInputElement"
									}
								]
							}
						},
						{
							"id": 4099,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 80,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4103,
							"name": "search",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 85,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 4101,
							"name": "show",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 82,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4098,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 79,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4095,
							"name": "TYPE_COLUMN_CURTAIN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 75,
									"character": 37
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "column-curtain"
							},
							"defaultValue": "\"column-curtain\""
						},
						{
							"id": 4094,
							"name": "TYPE_CURTAIN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 74,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "curtain"
							},
							"defaultValue": "\"curtain\""
						},
						{
							"id": 4096,
							"name": "TYPE_MODAL_DROP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 76,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "modal-drop"
							},
							"defaultValue": "\"modal-drop\""
						},
						{
							"id": 4097,
							"name": "TYPE_MODAL_HALF",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 77,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "modal-half"
							},
							"defaultValue": "\"modal-half\""
						},
						{
							"id": 4093,
							"name": "TYPE_MODAL_MOVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 73,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "modal-move"
							},
							"defaultValue": "\"modal-move\""
						},
						{
							"id": 4091,
							"name": "TYPE_MODAL_ZOOMIN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 71,
									"character": 35
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "modal-zoomin"
							},
							"defaultValue": "\"modal-zoomin\""
						},
						{
							"id": 4092,
							"name": "TYPE_ROTATE_LAYOUT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 72,
									"character": 36
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "rotate-layout"
							},
							"defaultValue": "\"rotate-layout\""
						},
						{
							"id": 4115,
							"name": "columnCurtain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.column-curtain'"
									}
								}
							],
							"getSignature": {
								"id": 4116,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 115,
									"character": 19
								}
							]
						},
						{
							"id": 4113,
							"name": "curtain",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.curtain'"
									}
								}
							],
							"getSignature": {
								"id": 4114,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 110,
									"character": 13
								}
							]
						},
						{
							"id": 4117,
							"name": "modalDrop",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.modal-drop'"
									}
								}
							],
							"getSignature": {
								"id": 4118,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 120,
									"character": 15
								}
							]
						},
						{
							"id": 4119,
							"name": "modalHalf",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.modal-half'"
									}
								}
							],
							"getSignature": {
								"id": 4120,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 125,
									"character": 15
								}
							]
						},
						{
							"id": 4111,
							"name": "modalMove",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.modal-move'"
									}
								}
							],
							"getSignature": {
								"id": 4112,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 105,
									"character": 15
								}
							]
						},
						{
							"id": 4107,
							"name": "modalZoomin",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.modal-zoomin'"
									}
								}
							],
							"getSignature": {
								"id": 4108,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 95,
									"character": 17
								}
							]
						},
						{
							"id": 4109,
							"name": "rotateLayout",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.rotate-layout'"
									}
								}
							],
							"getSignature": {
								"id": 4110,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 100,
									"character": 18
								}
							]
						},
						{
							"id": 4105,
							"name": "showClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.show'"
									}
								}
							],
							"getSignature": {
								"id": 4106,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 90,
									"character": 15
								}
							]
						},
						{
							"id": 4128,
							"name": "emitClose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4129,
									"name": "emitClose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 142,
									"character": 11
								}
							]
						},
						{
							"id": 4133,
							"name": "focusInput",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4134,
									"name": "focusInput",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 152,
									"character": 12
								}
							]
						},
						{
							"id": 4126,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4127,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 138,
									"character": 17
								}
							]
						},
						{
							"id": 4121,
							"name": "ngOnChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4122,
									"name": "ngOnChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4123,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 4124,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 4125,
															"name": "show",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/search/search.component.ts",
																	"line": 129,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"name": "SimpleChange"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																4125
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/search/search.component.ts",
															"line": 129,
															"character": 14
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 129,
									"character": 13
								}
							]
						},
						{
							"id": 4130,
							"name": "submitSearch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4131,
									"name": "submitSearch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4132,
											"name": "term",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.component.ts",
									"line": 146,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4102,
								4100,
								4104,
								4099,
								4103,
								4101,
								4098,
								4095,
								4094,
								4096,
								4097,
								4093,
								4091,
								4092
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4115,
								4113,
								4117,
								4119,
								4111,
								4107,
								4109,
								4105
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4128,
								4133,
								4126,
								4121,
								4130
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/search/search.component.ts",
							"line": 69,
							"character": 35
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnChanges"
						},
						{
							"type": "reference",
							"name": "AfterViewInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4135,
						4090
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/search/search.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4170,
			"name": "\"theme/components/search/search.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/search/search.module.ts",
			"children": [
				{
					"id": 4171,
					"name": "NbSearchModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n    NbOverlayModule,\n  ],\n  declarations: [\n    NbSearchComponent,\n    NbSearchFieldComponent,\n  ],\n  exports: [\n    NbSearchComponent,\n    NbSearchFieldComponent,\n  ],\n  providers: [\n    NbSearchService,\n  ],\n  entryComponents: [\n    NbSearchFieldComponent,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/search/search.module.ts",
							"line": 35,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4171
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/search/search.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3864,
			"name": "\"theme/components/search/search.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/search/search.service.ts",
			"children": [
				{
					"id": 3865,
					"name": "NbSearchService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Search component service, connects your code to a page-level search component."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3870,
							"name": "searchActivations$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 17,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3871,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3872,
													"name": "searchType",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 17,
															"character": 55
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3873,
													"name": "tag",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 17,
															"character": 68
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3872,
														3873
													]
												}
											]
										}
									}
								]
							},
							"defaultValue": " new Subject<{ searchType: string, tag?: string }>()"
						},
						{
							"id": 3874,
							"name": "searchDeactivations$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 18,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3875,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3876,
													"name": "searchType",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 18,
															"character": 57
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3877,
													"name": "tag",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 18,
															"character": 70
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3876,
														3877
													]
												}
											]
										}
									}
								]
							},
							"defaultValue": " new Subject<{ searchType: string, tag?: string }>()"
						},
						{
							"id": 3866,
							"name": "searchSubmittings$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 16,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3867,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3869,
													"name": "tag",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 16,
															"character": 62
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3868,
													"name": "term",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 16,
															"character": 49
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3869,
														3868
													]
												}
											]
										}
									}
								]
							},
							"defaultValue": " new Subject<{ term: string, tag?: string }>()"
						},
						{
							"id": 3878,
							"name": "activateSearch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3879,
									"name": "activateSearch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Activate (open) search component"
									},
									"parameters": [
										{
											"id": 3880,
											"name": "searchType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3881,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 25,
									"character": 16
								}
							]
						},
						{
							"id": 3882,
							"name": "deactivateSearch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3883,
									"name": "deactivateSearch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deactibate (close) search component"
									},
									"parameters": [
										{
											"id": 3884,
											"name": "searchType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3885,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 34,
									"character": 18
								}
							]
						},
						{
							"id": 3890,
							"name": "onSearchActivate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3891,
									"name": "onSearchActivate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to 'activate' event",
										"returns": "Observable<{searchType: string; tag?: string}>\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3892,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3893,
															"name": "searchType",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/search/search.service.ts",
																	"line": 51,
																	"character": 45
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3894,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "theme/components/search/search.service.ts",
																	"line": 51,
																	"character": 58
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3893,
																3894
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 51,
															"character": 33
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 51,
									"character": 18
								}
							]
						},
						{
							"id": 3895,
							"name": "onSearchDeactivate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3896,
									"name": "onSearchDeactivate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to 'deactivate' event",
										"returns": "Observable<{searchType: string; tag?: string}>\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3897,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3898,
															"name": "searchType",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/search/search.service.ts",
																	"line": 59,
																	"character": 47
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3899,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "theme/components/search/search.service.ts",
																	"line": 59,
																	"character": 60
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3898,
																3899
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 59,
															"character": 35
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 59,
									"character": 20
								}
							]
						},
						{
							"id": 3900,
							"name": "onSearchSubmit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3901,
									"name": "onSearchSubmit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to 'submit' event (when submit button clicked)",
										"returns": "Observable<{term: string; tag?: string}>\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3902,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3904,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "theme/components/search/search.service.ts",
																	"line": 67,
																	"character": 50
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 3903,
															"name": "term",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/search/search.service.ts",
																	"line": 67,
																	"character": 37
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3904,
																3903
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/search/search.service.ts",
															"line": 67,
															"character": 31
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 67,
									"character": 16
								}
							]
						},
						{
							"id": 3886,
							"name": "submitSearch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3887,
									"name": "submitSearch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Trigger search submit"
									},
									"parameters": [
										{
											"id": 3888,
											"name": "term",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3889,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/search/search.service.ts",
									"line": 43,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3870,
								3874,
								3866
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3878,
								3882,
								3890,
								3895,
								3900,
								3886
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/search/search.service.ts",
							"line": 15,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3865
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/search/search.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5618,
			"name": "\"theme/components/select/option-group.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/select/option-group.component.ts",
			"children": [
				{
					"id": 5619,
					"name": "NbOptionGroupComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-option-group',\n  styleUrls: ['./option-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <span>{{ title }}</span>\n    <ng-content select=\"nb-option, ng-container\"></ng-content>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 5624,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/option-group.component.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5620,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option-group.component.ts",
									"line": 21,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5625,
							"name": "disabledClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"getSignature": {
								"id": 5626,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option-group.component.ts",
									"line": 31,
									"character": 19
								}
							]
						},
						{
							"id": 5621,
							"name": "setDisabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'disabled'"
									}
								}
							],
							"setSignature": {
								"id": 5622,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 5623,
										"name": "disabled",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option-group.component.ts",
									"line": 24,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5624,
								5620
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5625,
								5621
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/select/option-group.component.ts",
							"line": 20,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5619
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/select/option-group.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5469,
			"name": "\"theme/components/select/option.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/select/option.component.ts",
			"children": [
				{
					"id": 5470,
					"name": "NbOptionComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-option',\n  styleUrls: ['./option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nb-checkbox *ngIf=\"withCheckbox\" [(ngModel)]=\"selected\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </nb-checkbox>\n\n    <ng-container *ngIf=\"!withCheckbox\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </ng-container>\n\n    <ng-template #content>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 5471,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5479,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5483,
									"name": "new NbOptionComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5484,
											"name": "parent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "forwardRef(() => NbSelectComponent)"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5485,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 5486,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbOptionComponent",
										"id": 5470
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 59,
									"character": 28
								}
							]
						},
						{
							"id": 5482,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 63,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 5478,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 59,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5481,
							"name": "elementRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 62,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5480,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "forwardRef(() => NbSelectComponent)"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 61,
									"character": 75
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5477,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 58,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5476,
							"name": "selectionChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Fires value on click."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 56,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbOptionComponent",
										"id": 5470,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 5472,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Option value that will be fired on selection."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 46,
									"character": 16
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						{
							"id": 5489,
							"name": "content",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 5490,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 73,
									"character": 13
								}
							]
						},
						{
							"id": 5495,
							"name": "disabledClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled'"
									}
								}
							],
							"getSignature": {
								"id": 5496,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 87,
									"character": 19
								}
							]
						},
						{
							"id": 5491,
							"name": "multiple",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 5492,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 77,
									"character": 14
								}
							]
						},
						{
							"id": 5493,
							"name": "selectedClass",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.selected'"
									}
								}
							],
							"getSignature": {
								"id": 5494,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 82,
									"character": 19
								}
							]
						},
						{
							"id": 5473,
							"name": "setDisabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'disabled'"
									}
								}
							],
							"setSignature": {
								"id": 5474,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"parameters": [
									{
										"id": 5475,
										"name": "disabled",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 49,
									"character": 17
								}
							]
						},
						{
							"id": 5487,
							"name": "withCheckbox",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines should we render checkbox."
							},
							"getSignature": {
								"id": 5488,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Determines should we render checkbox."
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 69,
									"character": 18
								}
							]
						},
						{
							"id": 5501,
							"name": "deselect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5502,
									"name": "deselect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 102,
									"character": 10
								}
							]
						},
						{
							"id": 5497,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 5498,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 92,
									"character": 9
								}
							]
						},
						{
							"id": 5499,
							"name": "select",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5500,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/option.component.ts",
									"line": 96,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5479
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5482,
								5478,
								5481,
								5480,
								5477,
								5476,
								5472
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5489,
								5495,
								5491,
								5493,
								5473,
								5487
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5501,
								5497,
								5499
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/select/option.component.ts",
							"line": 42,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5470
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/select/option.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5503,
			"name": "\"theme/components/select/select.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/select/select.component.ts",
			"children": [
				{
					"id": 5505,
					"name": "NbSelectComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbSelectComponent` provides a capability to select one of the passed items.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "select/select-showcase.component)\n\nIf you want to use it as the multi-select control you have to mark it as `multiple`.\nIn this case, `nb-select` will work only with arrays - accept arrays and propagate arrays.\n"
							},
							{
								"tag": "stacked-example(multiple,",
								"text": "select/select-multiple.component)\n\nItems without values will clean selection.\n"
							},
							{
								"tag": "stacked-example(clean",
								"text": "selection, select/select-clean.component)\n\nSelect may be bounded using `selected` input:\n\n```html\n<nb-select [(selected)]=\"selected\"></nb-selected>\n```\n\nOr you can bind control with form controls or ngModel:\n"
							},
							{
								"tag": "stacked-example(select",
								"text": "form binding, select/select-form.component)\n\nOptions in the select may be grouped using `nb-option-group` component.\n"
							},
							{
								"tag": "stacked-example(grouping,",
								"text": "select/select-groups.component)\n\nSelect may have a placeholder that will be shown when nothing selected:\n"
							},
							{
								"tag": "stacked-example(placeholder,",
								"text": "select/select-placeholder.component)\n\nYou can disable select, options and whole groups.\n"
							},
							{
								"tag": "stacked-example(disabled",
								"text": "select, select/select-disabled.component)\n\nAlso, the custom label may be provided in select.\nThis custom label will be used for instead placeholder when something selected.\n"
							},
							{
								"tag": "stacked-example(custom",
								"text": "label, select/select-label.component)\n\nDefault `nb-select` size is `medium` and status color is `primary`.\nSelect is available in multiple colors using `status` property:\n"
							},
							{
								"tag": "stacked-example(select",
								"text": "statuses, select/select-status.component)\n\nThere are three select sizes:\n"
							},
							{
								"tag": "stacked-example(select",
								"text": "sizes, select/select-sizes.component)\n\nAnd two additional style types - `outline`:\n"
							},
							{
								"tag": "stacked-example(outline",
								"text": "select, select/select-outline.component)\n\nand `hero`:\n"
							},
							{
								"tag": "stacked-example(select",
								"text": "colors, select/select-hero.component)\n\nSelect is available in different shapes, that could be combined with the other properties:\n"
							},
							{
								"tag": "stacked-example(select",
								"text": "shapes, select/select-shapes.component)\n\n"
							},
							{
								"tag": "styles",
								"text": "\n\nselect-border-width:\nselect-max-height:\nselect-bg:\nselect-checkbox-color:\nselect-checkmark-color:\nselect-option-disabled-bg:\nselect-option-disabled-opacity:\nselect-option-padding:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbSelectComponent),\n      multi: true,\n    },\n  ],\n}"
							}
						}
					],
					"typeParameter": [
						{
							"id": 5506,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 5535,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5541,
									"name": "new NbSelectComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5542,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5543,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										},
										{
											"id": 5544,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 5545,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 5546,
											"name": "cd",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbSelectComponent",
										"id": 5505
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 258,
									"character": 42
								}
							]
						},
						{
							"id": 5531,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 246,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5540,
							"name": "cd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 264,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 5523,
							"name": "customLabel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom select label, will be rendered instead of default enumeration with coma."
							},
							"decorators": [
								{
									"name": "ContentChild",
									"type": {
										"type": "reference",
										"name": "ContentChild"
									},
									"arguments": {
										"selector": "NbSelectLabelComponent"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 215,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5511,
							"name": "disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Disables the select"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 168,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5536,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 260,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5512,
							"name": "fullWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If set element will fill its container"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 173,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5510,
							"name": "hero",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Adds `hero` styles"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 163,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5538,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 262,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5525,
							"name": "multiple",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 222,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5522,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of `NbOptionComponent`'s components passed as content.\nTODO maybe it would be better provide wrapper"
							},
							"decorators": [
								{
									"name": "ContentChildren",
									"type": {
										"type": "reference",
										"name": "ContentChildren"
									},
									"arguments": {
										"selector": "NbOptionComponent",
										"opts": "{ descendants: true }"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 210,
									"character": 68
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryList",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbOptionComponent",
										"id": 5470,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							}
						},
						{
							"id": 5513,
							"name": "outline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Adds `outline` styles"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 178,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5537,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 261,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 5528,
							"name": "overlayPosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Current overlay position because of we have to toggle overlayPosition\nin [ngClass] direction and this directive can use only string."
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 235,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"defaultValue": " '' as NbPosition"
						},
						{
							"id": 5514,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Renders select placeholder if nothing selected."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 183,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 5524,
							"name": "portal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "NbCard with options content."
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "NbPortalDirective"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 220,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPortalDirective",
								"id": 2624
							}
						},
						{
							"id": 5539,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 263,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							}
						},
						{
							"id": 5527,
							"name": "positionStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 229,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustableConnectedPositionStrategy",
								"id": 3616
							}
						},
						{
							"id": 5532,
							"name": "queue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "If a user assigns value before content nb-options's rendered the value will be putted in this variable.\nAnd then applied after content rendered.\nOnly the last value will be applied."
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 253,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "T"
									},
									{
										"type": "array",
										"elementType": {
											"type": "typeParameter",
											"name": "T"
										}
									}
								]
							}
						},
						{
							"id": 5530,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 244,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 5515,
							"name": "selectedChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Will be emitted when selected value changes."
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 188,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "array",
												"elementType": {
													"type": "typeParameter",
													"name": "T"
												}
											}
										]
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 5529,
							"name": "selectionChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Stream of events that will fire when one of the options fire selectionChange event."
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 240,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Observable",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbOptionComponent",
										"id": 5470,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							},
							"defaultValue": " defer(() => {\n    return merge(...this.options.map(it => it.selectionChange));\n  })"
						},
						{
							"id": 5526,
							"name": "selectionModel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "List of selected options."
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 227,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbOptionComponent",
									"id": 5470,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "T"
										}
									]
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 5509,
							"name": "shape",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Select shapes: `rectangle`, `round`, `semi-round`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 158,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5507,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Select size, available sizes:\n`xxsmall`, `xsmall`, `small`, `medium`, `large`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 147,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5508,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Select status (adds specific styles):\n`primary`, `info`, `success`, `warning`, `danger`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 153,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 5551,
							"name": "hostWidth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns width of the select button."
							},
							"getSignature": {
								"id": 5552,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Returns width of the select button."
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 284,
									"character": 15
								}
							]
						},
						{
							"id": 5549,
							"name": "isHidden",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines is select hidden."
							},
							"getSignature": {
								"id": 5550,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Determines is select hidden."
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 277,
									"character": 14
								}
							]
						},
						{
							"id": 5547,
							"name": "isOpened",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines is select opened."
							},
							"getSignature": {
								"id": 5548,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Determines is select opened."
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 270,
									"character": 14
								}
							]
						},
						{
							"id": 5553,
							"name": "selectionView",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Content rendered in the label."
							},
							"getSignature": {
								"id": 5554,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Content rendered in the label."
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 291,
									"character": 19
								}
							]
						},
						{
							"id": 5519,
							"name": "setMultiple",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Gives capability just write `multiple` over the element."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'multiple'"
									}
								}
							],
							"setSignature": {
								"id": 5520,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Gives capability just write `multiple` over the element."
								},
								"parameters": [
									{
										"id": 5521,
										"name": "multiple",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 202,
									"character": 17
								}
							]
						},
						{
							"id": 5516,
							"name": "setSelected",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Accepts selected item or array of selected items."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'selected'"
									}
								}
							],
							"setSignature": {
								"id": 5517,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Accepts selected item or array of selected items."
								},
								"parameters": [
									{
										"id": 5518,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "typeParameter",
													"name": "T"
												},
												{
													"type": "array",
													"elementType": {
														"type": "typeParameter",
														"name": "T"
													}
												}
											]
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 194,
									"character": 17
								}
							]
						},
						{
							"id": 5613,
							"name": "cleanSelection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5614,
									"name": "cleanSelection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 514,
									"character": 26
								}
							]
						},
						{
							"id": 5593,
							"name": "createOverlay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5594,
									"name": "createOverlay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 421,
									"character": 25
								}
							]
						},
						{
							"id": 5595,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5596,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 427,
									"character": 34
								}
							]
						},
						{
							"id": 5597,
							"name": "createScrollStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5598,
									"name": "createScrollStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbScrollStrategy",
										"id": 2856
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 435,
									"character": 32
								}
							]
						},
						{
							"id": 5607,
							"name": "emitSelected",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5608,
									"name": "emitSelected",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Propagate selected value."
									},
									"parameters": [
										{
											"id": 5609,
											"name": "selected",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 483,
									"character": 24
								}
							]
						},
						{
							"id": 5605,
							"name": "getContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5606,
									"name": "getContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 472,
									"character": 24
								}
							]
						},
						{
							"id": 5590,
							"name": "handleMultipleSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5591,
									"name": "handleMultipleSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Select for multiple options."
									},
									"parameters": [
										{
											"id": 5592,
											"name": "option",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOptionComponent",
												"id": 5470,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 409,
									"character": 32
								}
							]
						},
						{
							"id": 5579,
							"name": "handleSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5580,
									"name": "handleSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Selects option or clear all selected options if value is null."
									},
									"parameters": [
										{
											"id": 5581,
											"name": "option",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOptionComponent",
												"id": 5470,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 358,
									"character": 24
								}
							]
						},
						{
							"id": 5587,
							"name": "handleSingleSelect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5588,
									"name": "handleSingleSelect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Select single option."
									},
									"parameters": [
										{
											"id": 5589,
											"name": "option",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOptionComponent",
												"id": 5470,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 392,
									"character": 30
								}
							]
						},
						{
							"id": 5565,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5566,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 326,
									"character": 6
								}
							]
						},
						{
							"id": 5559,
							"name": "ngAfterContentInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5560,
									"name": "ngAfterContentInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 309,
									"character": 20
								}
							]
						},
						{
							"id": 5557,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5558,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 303,
									"character": 17
								}
							]
						},
						{
							"id": 5561,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5562,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 315,
									"character": 13
								}
							]
						},
						{
							"id": 5555,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5556,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 299,
									"character": 10
								}
							]
						},
						{
							"id": 5533,
							"name": "onChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Function passed through control value accessor to propagate changes."
							},
							"signatures": [
								{
									"id": 5534,
									"name": "onChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Function passed through control value accessor to propagate changes."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 258,
									"character": 20
								}
							]
						},
						{
							"id": 5567,
							"name": "registerOnChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5568,
									"name": "registerOnChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5569,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 333,
									"character": 18
								}
							]
						},
						{
							"id": 5570,
							"name": "registerOnTouched",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5571,
									"name": "registerOnTouched",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5572,
											"name": "fn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 337,
									"character": 19
								}
							]
						},
						{
							"id": 5582,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5583,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deselect all selected options."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 371,
									"character": 17
								}
							]
						},
						{
							"id": 5584,
							"name": "selectOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5585,
									"name": "selectOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Determines how to select option as multiple or single."
									},
									"parameters": [
										{
											"id": 5586,
											"name": "option",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOptionComponent",
												"id": 5470,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 381,
									"character": 24
								}
							]
						},
						{
							"id": 5615,
							"name": "selectValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5616,
									"name": "selectValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Selects value."
									},
									"parameters": [
										{
											"id": 5617,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 522,
									"character": 23
								}
							]
						},
						{
							"id": 5573,
							"name": "setDisabledState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5574,
									"name": "setDisabledState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5575,
											"name": "isDisabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 340,
									"character": 18
								}
							]
						},
						{
							"id": 5610,
							"name": "setSelection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5611,
									"name": "setSelection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set selected value in model."
									},
									"parameters": [
										{
											"id": 5612,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 491,
									"character": 24
								}
							]
						},
						{
							"id": 5563,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5564,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 319,
									"character": 6
								}
							]
						},
						{
							"id": 5601,
							"name": "subscribeOnPositionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5602,
									"name": "subscribeOnPositionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 456,
									"character": 37
								}
							]
						},
						{
							"id": 5603,
							"name": "subscribeOnSelectionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5604,
									"name": "subscribeOnSelectionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 466,
									"character": 38
								}
							]
						},
						{
							"id": 5599,
							"name": "subscribeOnTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5600,
									"name": "subscribeOnTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 439,
									"character": 31
								}
							]
						},
						{
							"id": 5576,
							"name": "writeValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5577,
									"name": "writeValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5578,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "array",
														"elementType": {
															"type": "typeParameter",
															"name": "T"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/select/select.component.ts",
									"line": 343,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5535
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5531,
								5540,
								5523,
								5511,
								5536,
								5512,
								5510,
								5538,
								5525,
								5522,
								5513,
								5537,
								5528,
								5514,
								5524,
								5539,
								5527,
								5532,
								5530,
								5515,
								5529,
								5526,
								5509,
								5507,
								5508
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5551,
								5549,
								5547,
								5553,
								5519,
								5516
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5613,
								5593,
								5595,
								5597,
								5607,
								5605,
								5590,
								5579,
								5587,
								5565,
								5559,
								5557,
								5561,
								5555,
								5533,
								5567,
								5570,
								5582,
								5584,
								5615,
								5573,
								5610,
								5563,
								5601,
								5603,
								5599,
								5576
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/select/select.component.ts",
							"line": 142,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "AfterContentInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						},
						{
							"type": "reference",
							"name": "ControlValueAccessor"
						}
					]
				},
				{
					"id": 5504,
					"name": "NbSelectLabelComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-select-label',\n  template: '<ng-content></ng-content>',\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/select/select.component.ts",
							"line": 52,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5505,
						5504
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/select/select.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5627,
			"name": "\"theme/components/select/select.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/select/select.module.ts",
			"children": [
				{
					"id": 5628,
					"name": "NbSelectModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbSharedModule, NbOverlayModule, NbButtonModule, NbInputModule, NbCardModule, NbCheckboxModule],\n  exports: [...NB_SELECT_COMPONENTS],\n  declarations: [...NB_SELECT_COMPONENTS],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/select/select.module.ts",
							"line": 26,
							"character": 27
						}
					]
				},
				{
					"id": 5629,
					"name": "NB_SELECT_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/select/select.module.ts",
							"line": 14,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbSelectComponent,\n  NbOptionComponent,\n  NbOptionGroupComponent,\n  NbSelectLabelComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5628
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5629
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/select/select.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1644,
			"name": "\"theme/components/shared/shared.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/shared/shared.module.ts",
			"children": [
				{
					"id": 1645,
					"name": "NbSharedModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  exports: [\n    CommonModule,\n    // TODO: probably we don't need FormsModule in SharedModule\n    FormsModule,\n    RouterModule,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/shared/shared.module.ts",
							"line": 20,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1645
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/shared/shared.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3275,
			"name": "\"theme/components/sidebar/sidebar.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/sidebar/sidebar.component.ts",
			"children": [
				{
					"id": 3278,
					"name": "NbSidebarComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Layout sidebar component.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "sidebar/sidebar-showcase.component)\n\nSidebar can be placed on the left or the right side of the layout,\nor on start/end position of layout (depends on document direction, left to right or right to left)\nIt can be fixed (shown above the content) or can push the layout when opened.\n\nThere are three states - `expanded`, `collapsed`, `compacted`.\nBy default sidebar content is fixed and saves its position while the page is being scrolled.\n\nCompacted sidebar example:"
							},
							{
								"tag": "stacked-example(compacted",
								"text": "Sidebar, sidebar/sidebar-compacted.component)\n\nSidebar also supports a `responsive` behavior, listening to window size change and changing its size respectably.\n\nIn a pair with header it is possible to setup a configuration when header is placed on a side of the sidebar\nand not on top of it. To achieve this simply put a `subheader` property to the header like this:\n```html\n<nb-layout-header subheader></nb-layout-header>\n```"
							},
							{
								"tag": "stacked-example(subheader,",
								"text": "layout/layout-sidebar-subheader.component)\nNote that in such configuration sidebar shadow is removed and header cannot be make `fixed`.\n"
							},
							{
								"tag": "additional-example(right",
								"text": "Sidebar, sidebar/sidebar-right.component)"
							},
							{
								"tag": "additional-example(fixed",
								"text": "Sidebar, sidebar/sidebar-fixed.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nsidebar-font-size: Sidebar content font size\nsidebar-line-height: Sidebar content line height\nsidebar-fg: Foreground color\nsidebar-bg: Background color\nsidebar-height: Content height\nsidebar-width: Expanded width\nsidebar-width-compact: Compacted width\nsidebar-padding: Sidebar content padding\nsidebar-header-height: Sidebar header height\nsidebar-footer-height: Sidebar footer height\nsidebar-shadow: Sidebar container shadow\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-sidebar',\n  styleUrls: ['./sidebar.component.scss'],\n  template: `\n    <div class=\"main-container\"\n         [class.main-container-fixed]=\"containerFixedValue\">\n      <ng-content select=\"nb-sidebar-header\"></ng-content>\n      <div class=\"scrollable\" (click)=\"onClick($event)\">\n        <ng-content></ng-content>\n      </div>\n      <ng-content select=\"nb-sidebar-footer\"></ng-content>\n    </div>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3329,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3333,
									"name": "new NbSidebarComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3334,
											"name": "sidebarService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbSidebarService",
												"id": 3241
											}
										},
										{
											"id": 3335,
											"name": "themeService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbThemeService",
												"id": 1517
											}
										},
										{
											"id": 3336,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbSidebarComponent",
										"id": 3278
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 253,
									"character": 67
								}
							]
						},
						{
							"id": 3287,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 117,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3326,
							"name": "collapsedBreakpoints",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Controls on which screen sizes sidebar should be switched to collapsed state.\nWorks only when responsive mode is on.\nDefault values are `['xs', 'is']`.",
								"tags": [
									{
										"tag": "type",
										"text": "string[]\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 250,
									"character": 31
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " ['xs', 'is']"
						},
						{
							"id": 3325,
							"name": "compactedBreakpoints",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Controls on which screen sizes sidebar should be switched to compacted state.\nWorks only when responsive mode is on.\nDefault values are `['xs', 'is', 'sm', 'md', 'lg']`.",
								"tags": [
									{
										"tag": "type",
										"text": "string[]\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 241,
									"character": 31
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": " ['xs', 'is', 'sm', 'md', 'lg']"
						},
						{
							"id": 3288,
							"name": "containerFixedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 119,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3332,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 257,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 3293,
							"name": "endValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.end'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 125,
									"character": 36
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3289,
							"name": "fixedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.fixed'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 121,
									"character": 40
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3291,
							"name": "leftValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.left'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 123,
									"character": 38
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3327,
							"name": "mediaQuerySubscription",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 252,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "Subscription"
							}
						},
						{
							"id": 3328,
							"name": "responsiveState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 253,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbSidebarComponent.RESPONSIVE_STATE_PC"
						},
						{
							"id": 3286,
							"name": "responsiveValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 115,
									"character": 27
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3290,
							"name": "rightValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.right'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 122,
									"character": 40
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3330,
							"name": "sidebarService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 255,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "NbSidebarService",
								"id": 3241
							}
						},
						{
							"id": 3292,
							"name": "startValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.start'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 124,
									"character": 40
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3285,
							"name": "stateValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 114,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3324,
							"name": "tag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Tags a sidebar with some ID, can be later used in the sidebar service\nto determine which sidebar triggered the action, if multiple sidebars exist on the page.",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 231,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3331,
							"name": "themeService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 256,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "NbThemeService",
								"id": 1517
							}
						},
						{
							"id": 3282,
							"name": "RESPONSIVE_STATE_MOBILE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 110,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"mobile\""
						},
						{
							"id": 3284,
							"name": "RESPONSIVE_STATE_PC",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 112,
									"character": 37
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"pc\""
						},
						{
							"id": 3283,
							"name": "RESPONSIVE_STATE_TABLET",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 111,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"tablet\""
						},
						{
							"id": 3280,
							"name": "STATE_COLLAPSED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 107,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"collapsed\""
						},
						{
							"id": 3281,
							"name": "STATE_COMPACTED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 108,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"compacted\""
						},
						{
							"id": 3279,
							"name": "STATE_EXPANDED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 106,
									"character": 32
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"expanded\""
						},
						{
							"id": 3296,
							"name": "collapsed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.collapsed'"
									}
								}
							],
							"getSignature": {
								"id": 3297,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 133,
									"character": 15
								}
							]
						},
						{
							"id": 3298,
							"name": "compacted",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.compacted'"
									}
								}
							],
							"getSignature": {
								"id": 3299,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 137,
									"character": 15
								}
							]
						},
						{
							"id": 3315,
							"name": "containerFixed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes sidebar container fixed",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3316,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes sidebar container fixed",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3317,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 203,
									"character": 20
								}
							]
						},
						{
							"id": 3309,
							"name": "end",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Places sidebar on the end edge of layout",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3310,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Places sidebar on the end edge of layout",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3311,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 182,
									"character": 9
								}
							]
						},
						{
							"id": 3294,
							"name": "expanded",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.expanded'"
									}
								}
							],
							"getSignature": {
								"id": 3295,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 129,
									"character": 14
								}
							]
						},
						{
							"id": 3312,
							"name": "fixed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes sidebar fixed (shown above the layout content)",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3313,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes sidebar fixed (shown above the layout content)",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3314,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 194,
									"character": 11
								}
							]
						},
						{
							"id": 3303,
							"name": "left",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Places sidebar on the left side",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3304,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Places sidebar on the left side",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3305,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 158,
									"character": 10
								}
							]
						},
						{
							"id": 3321,
							"name": "responsive",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes sidebar listen to media query events and change its behaviour",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3322,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes sidebar listen to media query events and change its behaviour",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3323,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 221,
									"character": 16
								}
							]
						},
						{
							"id": 3300,
							"name": "right",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Places sidebar on the right side",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3301,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Places sidebar on the right side",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3302,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 146,
									"character": 11
								}
							]
						},
						{
							"id": 3306,
							"name": "start",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Places sidebar on the start edge of layout",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3307,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Places sidebar on the start edge of layout",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3308,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 170,
									"character": 11
								}
							]
						},
						{
							"id": 3318,
							"name": "state",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Initial sidebar state, `expanded`|`collapsed`|`compacted`",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3319,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Initial sidebar state, `expanded`|`collapsed`|`compacted`",
									"tags": [
										{
											"tag": "type",
											"text": "{string}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3320,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 212,
									"character": 11
								}
							]
						},
						{
							"id": 3350,
							"name": "collapse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3351,
									"name": "collapse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Collapses the sidebar"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 330,
									"character": 10
								}
							]
						},
						{
							"id": 3354,
							"name": "compact",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3355,
									"name": "compact",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Compacts the sidebar (minimizes)"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 344,
									"character": 9
								}
							]
						},
						{
							"id": 3352,
							"name": "expand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3353,
									"name": "expand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Expands the sidebar"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 337,
									"character": 8
								}
							]
						},
						{
							"id": 3340,
							"name": "ngOnChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3341,
									"name": "ngOnChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3342,
											"name": "changes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 268,
									"character": 13
								}
							]
						},
						{
							"id": 3345,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3346,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 300,
									"character": 13
								}
							]
						},
						{
							"id": 3343,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3344,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 274,
									"character": 10
								}
							]
						},
						{
							"id": 3347,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3348,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3349,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 308,
									"character": 9
								}
							]
						},
						{
							"id": 3359,
							"name": "onMediaQueryChanges",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3360,
									"name": "onMediaQueryChanges",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Subscription"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 376,
									"character": 31
								}
							]
						},
						{
							"id": 3361,
							"name": "responsiveEnabled",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 3362,
									"name": "responsiveEnabled",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 401,
									"character": 29
								}
							]
						},
						{
							"id": 3356,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3357,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Toggles sidebar state (expanded|collapsed|compacted)"
									},
									"parameters": [
										{
											"id": 3358,
											"name": "compact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "If true, then sidebar state will be changed between expanded & compacted,\notherwise - between expanded & collapsed. False by default.\n\nToggle sidebar state\n\n```ts\nthis.sidebar.toggle(true);\n```\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 359,
									"character": 8
								}
							]
						},
						{
							"id": 3337,
							"name": "toggleResponsive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3338,
									"name": "toggleResponsive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3339,
											"name": "enabled",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.component.ts",
									"line": 260,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3329
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3287,
								3326,
								3325,
								3288,
								3332,
								3293,
								3289,
								3291,
								3327,
								3328,
								3286,
								3290,
								3330,
								3292,
								3285,
								3324,
								3331,
								3282,
								3284,
								3283,
								3280,
								3281,
								3279
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3296,
								3298,
								3315,
								3309,
								3294,
								3312,
								3303,
								3321,
								3300,
								3306,
								3318
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3350,
								3354,
								3352,
								3340,
								3345,
								3343,
								3347,
								3359,
								3361,
								3356,
								3337
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/sidebar/sidebar.component.ts",
							"line": 104,
							"character": 31
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnChanges"
						},
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 3277,
					"name": "NbSidebarFooterComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Sidebar footer container.",
						"text": "Placeholder which contains a sidebar footer content,\nplaced at the very bottom of the sidebar outside of the scroll area.\n"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-sidebar-footer',\n  template: `\n    <ng-content></ng-content>\n  `,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/sidebar/sidebar.component.ts",
							"line": 44,
							"character": 37
						}
					]
				},
				{
					"id": 3276,
					"name": "NbSidebarHeaderComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Sidebar header container.",
						"text": "Placeholder which contains a sidebar header content,\nplaced at the very top of the sidebar outside of the scroll area.\n"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-sidebar-header',\n  template: `\n    <ng-content></ng-content>\n  `,\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/sidebar/sidebar.component.ts",
							"line": 29,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3278,
						3277,
						3276
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/sidebar/sidebar.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3363,
			"name": "\"theme/components/sidebar/sidebar.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/sidebar/sidebar.module.ts",
			"children": [
				{
					"id": 3364,
					"name": "NbSidebarModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    ...NB_SIDEBAR_COMPONENTS,\n  ],\n  exports: [\n    ...NB_SIDEBAR_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 3365,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 3366,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.module.ts",
									"line": 41,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3365
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/sidebar/sidebar.module.ts",
							"line": 40,
							"character": 28
						}
					]
				},
				{
					"id": 3367,
					"name": "NB_SIDEBAR_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/sidebar/sidebar.module.ts",
							"line": 19,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbSidebarComponent,\n  NbSidebarFooterComponent,\n  NbSidebarHeaderComponent,\n]"
				},
				{
					"id": 3368,
					"name": "NB_SIDEBAR_PROVIDERS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/sidebar/sidebar.module.ts",
							"line": 25,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbSidebarService,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3364
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3367,
						3368
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/sidebar/sidebar.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3240,
			"name": "\"theme/components/sidebar/sidebar.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/sidebar/sidebar.service.ts",
			"children": [
				{
					"id": 3241,
					"name": "NbSidebarService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Sidebar service.",
						"text": "Root module service to control the sidebar from any part of the app.\n\nAllows you to change sidebar state dynamically from any part of the app:",
						"tags": [
							{
								"tag": "stacked-example(sidebar",
								"text": "State, sidebar/sidebar-toggle.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 3249,
							"name": "collapse$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 24,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3250,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3251,
													"name": "tag",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/sidebar/sidebar.service.ts",
															"line": 24,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3251
													]
												}
											]
										}
									}
								]
							},
							"defaultValue": " new Subject<{ tag: string }>()"
						},
						{
							"id": 3246,
							"name": "expand$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 23,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3247,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3248,
													"name": "tag",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/sidebar/sidebar.service.ts",
															"line": 23,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3248
													]
												}
											]
										}
									}
								]
							},
							"defaultValue": " new Subject<{ tag: string }>()"
						},
						{
							"id": 3242,
							"name": "toggle$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 22,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3243,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3244,
													"name": "compact",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/sidebar/sidebar.service.ts",
															"line": 22,
															"character": 41
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 3245,
													"name": "tag",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "theme/components/sidebar/sidebar.service.ts",
															"line": 22,
															"character": 55
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3244,
														3245
													]
												}
											]
										}
									}
								]
							},
							"defaultValue": " new Subject<{ compact: boolean, tag: string }>()"
						},
						{
							"id": 3272,
							"name": "collapse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3273,
									"name": "collapse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Collapses a sidebar"
									},
									"parameters": [
										{
											"id": 3274,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 75,
									"character": 10
								}
							]
						},
						{
							"id": 3269,
							"name": "expand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3270,
									"name": "expand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Expands a sidebar"
									},
									"parameters": [
										{
											"id": 3271,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 66,
									"character": 8
								}
							]
						},
						{
							"id": 3261,
							"name": "onCollapse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3262,
									"name": "onCollapse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to collapse evens",
										"returns": "Observable<{ tag: string }>\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3263,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3264,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/sidebar/sidebar.service.ts",
																	"line": 47,
																	"character": 32
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3264
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/sidebar/sidebar.service.ts",
															"line": 47,
															"character": 27
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 47,
									"character": 12
								}
							]
						},
						{
							"id": 3257,
							"name": "onExpand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3258,
									"name": "onExpand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to expand events",
										"returns": "Observable<{ tag: string }>\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3259,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3260,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/sidebar/sidebar.service.ts",
																	"line": 39,
																	"character": 30
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3260
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/sidebar/sidebar.service.ts",
															"line": 39,
															"character": 25
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 39,
									"character": 10
								}
							]
						},
						{
							"id": 3252,
							"name": "onToggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3253,
									"name": "onToggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to toggle events",
										"returns": "Observable<{ compact: boolean, tag: string }>\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3254,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3255,
															"name": "compact",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/sidebar/sidebar.service.ts",
																	"line": 31,
																	"character": 34
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 3256,
															"name": "tag",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "theme/components/sidebar/sidebar.service.ts",
																	"line": 31,
																	"character": 48
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3255,
																3256
															]
														}
													],
													"sources": [
														{
															"fileName": "theme/components/sidebar/sidebar.service.ts",
															"line": 31,
															"character": 25
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 31,
									"character": 10
								}
							]
						},
						{
							"id": 3265,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3266,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Toggle a sidebar"
									},
									"parameters": [
										{
											"id": 3267,
											"name": "compact",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										},
										{
											"id": 3268,
											"name": "tag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/sidebar/sidebar.service.ts",
									"line": 57,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3249,
								3246,
								3242
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3272,
								3269,
								3261,
								3257,
								3252,
								3265
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/sidebar/sidebar.service.ts",
							"line": 20,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3241
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/sidebar/sidebar.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4643,
			"name": "\"theme/components/spinner/spinner.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/spinner/spinner.component.ts",
			"children": [
				{
					"id": 4644,
					"name": "NbSpinnerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Styled spinner component"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-spinner',\n  template: `\n    <span class=\"spin-circle\"></span>\n    <span class=\"message\" *ngIf=\"message\">{{ message }}</span>\n  `,\n  styleUrls: ['./spinner.component.scss'],\n}"
							}
						}
					],
					"children": [
						{
							"id": 4661,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Loading text that is shown near the icon",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 45,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Loading...\""
						},
						{
							"id": 4659,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 38,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbSpinnerComponent.SIZE_MEDIUM"
						},
						{
							"id": 4660,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbSpinnerComponent.STATUS_ACTIVE"
						},
						{
							"id": 4649,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 26,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 4648,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 25,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 4647,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 24,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 4650,
							"name": "SIZE_XLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 27,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xlarge"
							},
							"defaultValue": "\"xlarge\""
						},
						{
							"id": 4646,
							"name": "SIZE_XSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 23,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xsmall"
							},
							"defaultValue": "\"xsmall\""
						},
						{
							"id": 4651,
							"name": "SIZE_XXLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 28,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxlarge"
							},
							"defaultValue": "\"xxlarge\""
						},
						{
							"id": 4645,
							"name": "SIZE_XXSMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 22,
									"character": 30
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xxsmall"
							},
							"defaultValue": "\"xxsmall\""
						},
						{
							"id": 4652,
							"name": "STATUS_ACTIVE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 30,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "active"
							},
							"defaultValue": "\"active\""
						},
						{
							"id": 4658,
							"name": "STATUS_DANGER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 36,
									"character": 31
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "danger"
							},
							"defaultValue": "\"danger\""
						},
						{
							"id": 4653,
							"name": "STATUS_DISABLED",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 31,
									"character": 33
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "disabled"
							},
							"defaultValue": "\"disabled\""
						},
						{
							"id": 4655,
							"name": "STATUS_INFO",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 33,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "info"
							},
							"defaultValue": "\"info\""
						},
						{
							"id": 4654,
							"name": "STATUS_PRIMARY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 32,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "primary"
							},
							"defaultValue": "\"primary\""
						},
						{
							"id": 4656,
							"name": "STATUS_SUCCESS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 34,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "success"
							},
							"defaultValue": "\"success\""
						},
						{
							"id": 4657,
							"name": "STATUS_WARNING",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 35,
									"character": 32
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "warning"
							},
							"defaultValue": "\"warning\""
						},
						{
							"id": 4682,
							"name": "active",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.active-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4683,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 103,
									"character": 12
								}
							]
						},
						{
							"id": 4694,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.danger-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4695,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 133,
									"character": 12
								}
							]
						},
						{
							"id": 4684,
							"name": "disabled",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.disabled-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4685,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 108,
									"character": 14
								}
							]
						},
						{
							"id": 4688,
							"name": "info",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.info-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4689,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 118,
									"character": 10
								}
							]
						},
						{
							"id": 4676,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4677,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 88,
									"character": 11
								}
							]
						},
						{
							"id": 4674,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4675,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 83,
									"character": 12
								}
							]
						},
						{
							"id": 4686,
							"name": "primary",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.primary-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4687,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 113,
									"character": 13
								}
							]
						},
						{
							"id": 4662,
							"name": "setSize",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Spiiner size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'size'"
									}
								}
							],
							"setSignature": {
								"id": 4663,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Spiiner size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
								},
								"parameters": [
									{
										"id": 4664,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 53,
									"character": 21
								}
							]
						},
						{
							"id": 4665,
							"name": "setStatus",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Spiiner status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'status'"
									}
								}
							],
							"setSignature": {
								"id": 4666,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Spiiner status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
								},
								"parameters": [
									{
										"id": 4667,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 63,
									"character": 23
								}
							]
						},
						{
							"id": 4672,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.small-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4673,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 78,
									"character": 11
								}
							]
						},
						{
							"id": 4690,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.success-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4691,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 123,
									"character": 13
								}
							]
						},
						{
							"id": 4692,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.warning-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4693,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 128,
									"character": 13
								}
							]
						},
						{
							"id": 4678,
							"name": "xlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xlarge-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4679,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 93,
									"character": 12
								}
							]
						},
						{
							"id": 4670,
							"name": "xsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xsmall-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4671,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 73,
									"character": 12
								}
							]
						},
						{
							"id": 4680,
							"name": "xxlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxlarge-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4681,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 98,
									"character": 13
								}
							]
						},
						{
							"id": 4668,
							"name": "xxsmall",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xxsmall-spinner'"
									}
								}
							],
							"getSignature": {
								"id": 4669,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.component.ts",
									"line": 68,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4661,
								4659,
								4660,
								4649,
								4648,
								4647,
								4650,
								4646,
								4651,
								4645,
								4652,
								4658,
								4653,
								4655,
								4654,
								4656,
								4657
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4682,
								4694,
								4684,
								4688,
								4676,
								4674,
								4686,
								4662,
								4665,
								4672,
								4690,
								4692,
								4678,
								4670,
								4680,
								4668
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/spinner/spinner.component.ts",
							"line": 20,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4644
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/spinner/spinner.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4696,
			"name": "\"theme/components/spinner/spinner.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/spinner/spinner.directive.ts",
			"children": [
				{
					"id": 4697,
					"name": "NbSpinnerDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Styled spinner directive",
						"tags": [
							{
								"tag": "stacked-example(spinner",
								"text": "Showcase, spinner/spinner-card.component)\n\n\n```ts\n<nb-card [nbSpinner]=\"loading\" nbSpinnerStatus=\"danger\">\n  <nb-card-body>Card Content</nb-card-body>\n</nb-card>\n```\n\nCould be colored using `status` property\n"
							},
							{
								"tag": "stacked-example(spinner",
								"text": "Colors, spinner/spinner-colors.component)\n\nAvailable in different sizes with `size` property:\n"
							},
							{
								"tag": "stacked-example(spinner",
								"text": "Sizes, spinner/spinner-sizes.component)\n\nIt is also possible to place it into the button:"
							},
							{
								"tag": "stacked-example(buttons",
								"text": "with spinner, spinner/spinner-button.component)\n\nOr tabs:"
							},
							{
								"tag": "stacked-example(spinner",
								"text": "in tabs, spinner/spinner-tabs.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{selector: '[nbSpinner]'}"
							}
						}
					],
					"children": [
						{
							"id": 4708,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4713,
									"name": "new NbSpinnerDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4714,
											"name": "directiveView",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ViewContainerRef"
											}
										},
										{
											"id": 4715,
											"name": "componentFactoryResolver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentFactoryResolver"
											}
										},
										{
											"id": 4716,
											"name": "renderer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Renderer2"
											}
										},
										{
											"id": 4717,
											"name": "directiveElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbSpinnerDirective",
										"id": 4697
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 89,
									"character": 29
								}
							]
						},
						{
							"id": 4699,
							"name": "componentFactory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 50,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentFactory",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbSpinnerComponent",
										"id": 4644
									}
								]
							}
						},
						{
							"id": 4710,
							"name": "componentFactoryResolver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 92,
									"character": 46
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentFactoryResolver"
							}
						},
						{
							"id": 4712,
							"name": "directiveElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 94,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 4709,
							"name": "directiveView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 91,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							}
						},
						{
							"id": 4700,
							"name": "isSpinnerExist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.nb-spinner-container'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 52,
									"character": 59
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4711,
							"name": "renderer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 93,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "Renderer2"
							}
						},
						{
							"id": 4707,
							"name": "shouldShow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 89,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4698,
							"name": "spinner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 49,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbSpinnerComponent",
										"id": 4644
									}
								]
							}
						},
						{
							"id": 4701,
							"name": "spinnerMessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Spinner message shown next to the icon",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbSpinnerMessage'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 58,
									"character": 43
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4703,
							"name": "spinnerSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Spinner size, available sizes: xxsmall, xsmall, small, medium, large, xlarge, xxlarge",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbSpinnerSize'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 70,
									"character": 37
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4702,
							"name": "spinnerStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Spinner status color active, disabled, primary, info, success, warning, danger",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbSpinnerStatus'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 64,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4704,
							"name": "nbSpinner",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Directive value - show or hide spinner"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbSpinner'"
									}
								}
							],
							"setSignature": {
								"id": 4705,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Directive value - show or hide spinner"
								},
								"parameters": [
									{
										"id": 4706,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 77,
									"character": 15
								}
							]
						},
						{
							"id": 4720,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4721,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 104,
									"character": 6
								}
							]
						},
						{
							"id": 4718,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4719,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 97,
									"character": 10
								}
							]
						},
						{
							"id": 4724,
							"name": "setInstanceInputs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4725,
									"name": "setInstanceInputs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4726,
											"name": "instance",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbSpinnerComponent",
												"id": 4644
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 121,
									"character": 19
								}
							]
						},
						{
							"id": 4722,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4723,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/spinner/spinner.directive.ts",
									"line": 111,
									"character": 6
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4708
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4699,
								4710,
								4712,
								4709,
								4700,
								4711,
								4707,
								4698,
								4701,
								4703,
								4702
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4704
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4720,
								4718,
								4724,
								4722
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/spinner/spinner.directive.ts",
							"line": 47,
							"character": 31
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4697
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/spinner/spinner.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4727,
			"name": "\"theme/components/spinner/spinner.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/spinner/spinner.module.ts",
			"children": [
				{
					"id": 4728,
					"name": "NbSpinnerModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  exports: [NbSpinnerComponent, NbSpinnerDirective],\n  declarations: [NbSpinnerComponent, NbSpinnerDirective],\n  entryComponents: [NbSpinnerComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/spinner/spinner.module.ts",
							"line": 21,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4728
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/spinner/spinner.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4729,
			"name": "\"theme/components/stepper/step.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/stepper/step.component.ts",
			"children": [
				{
					"id": 4730,
					"name": "NbStepComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Component intended to be used within  the `<nb-stepper>` component.\nContainer for a step"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-step',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 4745,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4747,
									"name": "new NbStepComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4748,
											"name": "stepper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "forwardRef(() => NbStepperComponent)"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbStepperComponent",
												"id": 4757
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbStepComponent",
										"id": 4730
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 84,
									"character": 21
								}
							]
						},
						{
							"id": 4741,
							"name": "completedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 78,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4731,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Step content",
								"tags": [
									{
										"tag": "type",
										"text": "{TemplateRef}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "TemplateRef"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 32,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "TemplateRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 4734,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether step will be displayed in wizard",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 53,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "false"
							}
						},
						{
							"id": 4744,
							"name": "interacted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 84,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 4733,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Step label",
								"tags": [
									{
										"tag": "type",
										"text": "{string|TemplateRef<any>}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 46,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "TemplateRef",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						},
						{
							"id": 4732,
							"name": "stepControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Top level abstract control of the step",
								"tags": [
									{
										"tag": "type",
										"text": "{AbstractControl}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 39,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "AbstractControl"
							}
						},
						{
							"id": 4746,
							"name": "stepper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "forwardRef(() => NbStepperComponent)"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 86,
									"character": 75
								}
							],
							"type": {
								"type": "reference",
								"name": "NbStepperComponent",
								"id": 4757
							}
						},
						{
							"id": 4737,
							"name": "completed",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether step is marked as completed.",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"getSignature": {
								"id": 4738,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Whether step is marked as completed.",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 4739,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Whether step is marked as completed."
								},
								"parameters": [
									{
										"id": 4740,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 70,
									"character": 15
								},
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 74,
									"character": 15
								}
							]
						},
						{
							"id": 4742,
							"name": "isCompleted",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"getSignature": {
								"id": 4743,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 80,
									"character": 25
								}
							]
						},
						{
							"id": 4735,
							"name": "isLabelTemplate",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check that label is a TemplateRef.",
								"returns": "boolean\n"
							},
							"getSignature": {
								"id": 4736,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Check that label is a TemplateRef.",
									"returns": "boolean\n"
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 60,
									"character": 21
								}
							]
						},
						{
							"id": 4751,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4752,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Reset step and stepControl state"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 99,
									"character": 7
								}
							]
						},
						{
							"id": 4749,
							"name": "select",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4750,
									"name": "select",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Mark step as selected"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/step.component.ts",
									"line": 92,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4745
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4741,
								4731,
								4734,
								4744,
								4733,
								4732,
								4746
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4737,
								4742,
								4735
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4751,
								4749
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/stepper/step.component.ts",
							"line": 25,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4730
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/stepper/step.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4785,
			"name": "\"theme/components/stepper/stepper-button.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/stepper/stepper-button.directive.ts",
			"children": [
				{
					"id": 4786,
					"name": "NbStepperNextDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{\n  selector: 'button[nbStepperNext]',\n}"
							}
						}
					],
					"children": [
						{
							"id": 4788,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4790,
									"name": "new NbStepperNextDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4791,
											"name": "stepper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbStepperComponent",
												"id": 4757
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbStepperNextDirective",
										"id": 4786
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 9,
									"character": 61
								}
							]
						},
						{
							"id": 4789,
							"name": "stepper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 11,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbStepperComponent",
								"id": 4757
							}
						},
						{
							"id": 4787,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.type'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 9,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"submit\""
						},
						{
							"id": 4792,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 4793,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 15,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4788
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4789,
								4787
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4792
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/stepper/stepper-button.directive.ts",
							"line": 7,
							"character": 35
						}
					]
				},
				{
					"id": 4794,
					"name": "NbStepperPreviousDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{\n  selector: 'button[nbStepperPrevious]',\n}"
							}
						}
					],
					"children": [
						{
							"id": 4796,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4798,
									"name": "new NbStepperPreviousDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4799,
											"name": "stepper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbStepperComponent",
												"id": 4757
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbStepperPreviousDirective",
										"id": 4794
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 25,
									"character": 61
								}
							]
						},
						{
							"id": 4797,
							"name": "stepper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 27,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbStepperComponent",
								"id": 4757
							}
						},
						{
							"id": 4795,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								},
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'attr.type'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 25,
									"character": 41
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"button\""
						},
						{
							"id": 4800,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 4801,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper-button.directive.ts",
									"line": 31,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4796
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4797,
								4795
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4800
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/stepper/stepper-button.directive.ts",
							"line": 23,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4786,
						4794
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/stepper/stepper-button.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4753,
			"name": "\"theme/components/stepper/stepper.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/stepper/stepper.component.ts",
			"children": [
				{
					"id": 4754,
					"name": "NbStepperOrientation",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4756,
							"name": "HORIZONTAL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 17,
									"character": 12
								}
							],
							"defaultValue": "\"horizontal\""
						},
						{
							"id": 4755,
							"name": "VERTICAL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 16,
									"character": 10
								}
							],
							"defaultValue": "\"vertical\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								4756,
								4755
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/stepper/stepper.component.ts",
							"line": 15,
							"character": 32
						}
					]
				},
				{
					"id": 4757,
					"name": "NbStepperComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Stepper component",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "stepper/stepper-showcase.component)\n\nIf step label is string you can pass it as `label` attribute. Otherwise ng-template should be used:\n```html\n// ...\n<nb-stepper orientation=\"horizontal\">\n  <nb-step label=\"step number one\">\n      // ... step content here\n  <nb-step>\n  <nb-step label=\"stepLabel\">\n      <ng-template #stepLabel>\n          <div>\n              step number two\n          </div>\n      </ng-template>\n      // ... step content here\n  <nb-step>\n</nb-stepper>\n```\nSpecify `[stepControl]=\"form\"` and user can navigates only if submit previous step's form.\n```html\n// ...\n<nb-stepper  orientation=\"horizontal\">\n  <nb-step label=\"step number one\" [stepControl]=\"form\">\n    <form [formGroup]=\"form\">\n      // ...\n    </form>\n  <nb-step>\n   // ...\n</nb-stepper>\n```\n"
							},
							{
								"tag": "stacked-example(validation,",
								"text": "stepper/stepper-validation.component)\n\nStepper component has two layout options - `vertical` & `horizontal`"
							},
							{
								"tag": "stacked-example(vertical,",
								"text": "stepper/stepper-vertical.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nstepper-index-size:\nstepper-label-font-size:\nstepper-label-font-weight:\nstepper-accent-color:\nstepper-completed-fg:\nstepper-fg:\nstepper-completed-icon-size:\nstepper-completed-icon-weight:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-stepper',\n  styleUrls: ['./stepper.component.scss'],\n  templateUrl: './stepper.component.html',\n}"
							}
						}
					],
					"children": [
						{
							"id": 4772,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 130,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 4771,
							"name": "orientation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Stepper orientation - `horizontal`|`vertical`",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 128,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " NbStepperOrientation.HORIZONTAL"
						},
						{
							"id": 4758,
							"name": "steps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ContentChildren",
									"type": {
										"type": "reference",
										"name": "ContentChildren"
									},
									"arguments": {
										"selector": "NbStepComponent"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 78,
									"character": 41
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryList",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbStepComponent",
										"id": 4730
									}
								]
							}
						},
						{
							"id": 4761,
							"name": "horizontal",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.horizontal'"
									}
								}
							],
							"getSignature": {
								"id": 4762,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 86,
									"character": 16
								}
							]
						},
						{
							"id": 4767,
							"name": "selected",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Selected step component",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"getSignature": {
								"id": 4768,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Selected step component",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "NbStepComponent",
											"id": 4730
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								}
							},
							"setSignature": {
								"id": 4769,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Selected step component"
								},
								"parameters": [
									{
										"id": 4770,
										"name": "step",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "NbStepComponent",
											"id": 4730
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 116,
									"character": 14
								},
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 120,
									"character": 14
								}
							]
						},
						{
							"id": 4763,
							"name": "selectedIndex",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Selected step index",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"getSignature": {
								"id": 4764,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Selected step index",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"setSignature": {
								"id": 4765,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Selected step index"
								},
								"parameters": [
									{
										"id": 4766,
										"name": "index",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 96,
									"character": 19
								},
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 100,
									"character": 19
								}
							]
						},
						{
							"id": 4759,
							"name": "vertical",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.vertical'"
									}
								}
							],
							"getSignature": {
								"id": 4760,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 81,
									"character": 14
								}
							]
						},
						{
							"id": 4779,
							"name": "isStepSelected",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4780,
									"name": "isStepSelected",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4781,
											"name": "step",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbStepComponent",
												"id": 4730
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 154,
									"character": 16
								}
							]
						},
						{
							"id": 4782,
							"name": "isStepValid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 4783,
									"name": "isStepValid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 4784,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 158,
									"character": 21
								}
							]
						},
						{
							"id": 4773,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4774,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Navigate to next step"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 135,
									"character": 6
								}
							]
						},
						{
							"id": 4775,
							"name": "previous",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4776,
									"name": "previous",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Navigate to previous step"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 142,
									"character": 10
								}
							]
						},
						{
							"id": 4777,
							"name": "reset",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 4778,
									"name": "reset",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Reset stepper and stepControls to initial state"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/stepper/stepper.component.ts",
									"line": 149,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4772,
								4771,
								4758
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								4761,
								4767,
								4763,
								4759
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4779,
								4782,
								4773,
								4775,
								4777
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/stepper/stepper.component.ts",
							"line": 76,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						4754
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4757
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/stepper/stepper.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 4802,
			"name": "\"theme/components/stepper/stepper.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/stepper/stepper.module.ts",
			"children": [
				{
					"id": 4803,
					"name": "NbStepperModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n  ],\n  declarations: [\n    NbStepperComponent,\n    NbStepComponent,\n    NbStepperNextDirective,\n    NbStepperPreviousDirective,\n  ],\n  exports: [\n    NbStepperComponent,\n    NbStepComponent,\n    NbStepperNextDirective,\n    NbStepperPreviousDirective,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/stepper/stepper.module.ts",
							"line": 31,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						4803
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/stepper/stepper.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3369,
			"name": "\"theme/components/tabset/tabset.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/tabset/tabset.component.ts",
			"children": [
				{
					"id": 3370,
					"name": "NbTabComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Specific tab container.",
						"text": "```ts\n<nb-tab tabTitle=\"Users\"\n  badgeText=\"99+\"\n  badgeStatus=\"danger\">\n  <p>List of <strong>users</strong>.</p>\n</nb-tab>\n```\n"
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-tab',\n  template: `\n    <ng-container *ngIf=\"init\">\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3378,
							"name": "activeValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.content-active'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 72,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3389,
							"name": "badgePosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge position.\nCan be set to any class or to one of predefined positions:\n'top left', 'top right', 'bottom left', 'bottom right',\n'top start', 'top end', 'bottom start', 'bottom end'",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 121,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3388,
							"name": "badgeStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge status (adds specific styles):\n'primary', 'info', 'success', 'warning', 'danger'",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 112,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3387,
							"name": "badgeText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge text to display",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 105,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3390,
							"name": "init",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 123,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3379,
							"name": "responsiveValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 74,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3377,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 69,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3372,
							"name": "tabIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Tab icon",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 54,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3371,
							"name": "tabTitle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Tab title",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 48,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3380,
							"name": "active",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies active tab",
								"returns": "\n"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"getSignature": {
								"id": 3381,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Specifies active tab",
									"returns": "\n"
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 3382,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Specifies active tab",
									"returns": "\n"
								},
								"parameters": [
									{
										"id": 3383,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 81,
									"character": 12
								},
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 84,
									"character": 12
								}
							]
						},
						{
							"id": 3384,
							"name": "lazyLoad",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Lazy load content before tab selection\nTODO: rename, as lazy is by default, and this is more `instant load`"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3385,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Lazy load content before tab selection\nTODO: rename, as lazy is by default, and this is more `instant load`"
								},
								"parameters": [
									{
										"id": 3386,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 97,
									"character": 14
								}
							]
						},
						{
							"id": 3373,
							"name": "responsive",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Show only icons when width is smaller than `tabs-icon-only-max-width`",
								"tags": [
									{
										"tag": "type",
										"text": "{boolean}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"getSignature": {
								"id": 3376,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Show only icons when width is smaller than `tabs-icon-only-max-width`"
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"setSignature": {
								"id": 3374,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Show only icons when width is smaller than `tabs-icon-only-max-width`",
									"tags": [
										{
											"tag": "type",
											"text": "{boolean}\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3375,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 61,
									"character": 16
								},
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 65,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3378,
								3389,
								3388,
								3387,
								3390,
								3379,
								3377,
								3372,
								3371
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3380,
								3384,
								3373
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/tabset/tabset.component.ts",
							"line": 42,
							"character": 27
						}
					]
				},
				{
					"id": 3391,
					"name": "NbTabsetComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Dynamic tabset component.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "tabset/tabset-showcase.component)\n\nBasic tabset example\n\n```html\n<nb-tabset>\n <nb-tab tabTitle=\"Simple Tab #1\">\n   Tab content 1\n </nb-tab>\n <nb-tab tabTitle=\"Simple Tab #2\">\n   Tab content 2\n </nb-tab>\n</nb-tabset>\n```\nIt is also possible to set a badge to a particular tab:"
							},
							{
								"tag": "stacked-example(tab",
								"text": "With Badge, tabset/tabset-badge.component)\n\nand we can set it to full a width of a parent component"
							},
							{
								"tag": "stacked-example(full",
								"text": "Width, tabset/tabset-width.component)\n\n`tabIcon` should be used to add an icon to the tab. Icon can also be combined with title.\n`responsive` tab property if set allows you to hide the title on smaller screens\n(`tabs-icon-only-max-width` property) for better responsive behaviour. You can open the following example and make\nyour screen smaller - titles will be hidden in the last tabset in the list:\n"
							},
							{
								"tag": "stacked-example(icon,",
								"text": "tabset/tabset-icon.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\ntabs-font-family:\ntabs-font-size:\ntabs-content-font-family:\ntabs-content-font-size:\ntabs-active-bg:\ntabs-active-font-weight:\ntabs-padding:\ntabs-content-padding:\ntabs-header-bg:\ntabs-separator:\ntabs-fg:\ntabs-fg-text:\ntabs-fg-heading:\ntabs-bg:\ntabs-selected:\ntabs-icon-only-max-width\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-tabset',\n  styleUrls: ['./tabset.component.scss'],\n  template: `\n    <ul>\n      <li *ngFor=\"let tab of tabs\"\n          (click)=\"selectTab(tab)\"\n          [class.responsive]=\"tab.responsive\"\n          [class.active]=\"tab.active\">\n        <a href (click)=\"$event.preventDefault()\">\n          <i *ngIf=\"tab.tabIcon\" [class]=\"tab.tabIcon\"></i>\n          <span *ngIf=\"tab.tabTitle\">{{ tab.tabTitle }}</span>\n        </a>\n        <nb-badge *ngIf=\"tab.badgeText\"\n          [text]=\"tab.badgeText\"\n          [status]=\"tab.badgeStatus\"\n          [position]=\"tab.badgePosition\">\n        </nb-badge>\n      </li>\n    </ul>\n    <ng-content select=\"nb-tab\"></ng-content>\n  `,\n}"
							}
						}
					],
					"children": [
						{
							"id": 3399,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3402,
									"name": "new NbTabsetComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3403,
											"name": "route",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ActivatedRoute"
											}
										},
										{
											"id": 3404,
											"name": "changeDetectorRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChangeDetectorRef"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTabsetComponent",
										"id": 3391
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 229,
									"character": 48
								}
							]
						},
						{
							"id": 3401,
							"name": "changeDetectorRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 232,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "ChangeDetectorRef"
							}
						},
						{
							"id": 3398,
							"name": "changeTab",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when tab is selected",
								"tags": [
									{
										"tag": "type",
										"text": "EventEmitter<any>\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 229,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new EventEmitter<any>()"
						},
						{
							"id": 3393,
							"name": "fullWidthValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.full-width'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 208,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3400,
							"name": "route",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 231,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "ActivatedRoute"
							}
						},
						{
							"id": 3397,
							"name": "routeParam",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If specified - tabset listens to this parameter and selects corresponding tab.",
								"tags": [
									{
										"tag": "type",
										"text": "{string}\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 223,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3392,
							"name": "tabs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ContentChildren",
									"type": {
										"type": "reference",
										"name": "ContentChildren"
									},
									"arguments": {
										"selector": "NbTabComponent"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 205,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryList",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbTabComponent",
										"id": 3370
									}
								]
							}
						},
						{
							"id": 3394,
							"name": "fullWidth",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Take full width of a parent"
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3395,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Take full width of a parent"
								},
								"parameters": [
									{
										"id": 3396,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 215,
									"character": 15
								}
							]
						},
						{
							"id": 3405,
							"name": "ngAfterContentInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3406,
									"name": "ngAfterContentInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 236,
									"character": 20
								}
							]
						},
						{
							"id": 3407,
							"name": "selectTab",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3408,
									"name": "selectTab",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3409,
											"name": "selectedTab",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbTabComponent",
												"id": 3370
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tabset/tabset.component.ts",
									"line": 252,
									"character": 11
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3399
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3401,
								3398,
								3393,
								3400,
								3397,
								3392
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3394
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3405,
								3407
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/tabset/tabset.component.ts",
							"line": 203,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterContentInit"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3370,
						3391
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/tabset/tabset.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3439,
			"name": "\"theme/components/tabset/tabset.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/tabset/tabset.module.ts",
			"children": [
				{
					"id": 3440,
					"name": "NbTabsetModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n    NbBadgeModule,\n  ],\n  declarations: [\n    ...NB_TABSET_COMPONENTS,\n  ],\n  exports: [\n    ...NB_TABSET_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/tabset/tabset.module.ts",
							"line": 31,
							"character": 27
						}
					]
				},
				{
					"id": 3441,
					"name": "NB_TABSET_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/tabset/tabset.module.ts",
							"line": 14,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbTabsetComponent,\n  NbTabComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3440
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3441
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/tabset/tabset.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5243,
			"name": "\"theme/components/toastr/model\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/toastr/model.ts",
			"children": [
				{
					"id": 5244,
					"name": "NbToastStatus",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5249,
							"name": "DANGER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 15,
									"character": 8
								}
							],
							"defaultValue": "\"danger\""
						},
						{
							"id": 5250,
							"name": "DEFAULT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 16,
									"character": 9
								}
							],
							"defaultValue": "\"default\""
						},
						{
							"id": 5246,
							"name": "INFO",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 12,
									"character": 6
								}
							],
							"defaultValue": "\"info\""
						},
						{
							"id": 5248,
							"name": "PRIMARY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 14,
									"character": 9
								}
							],
							"defaultValue": "\"primary\""
						},
						{
							"id": 5245,
							"name": "SUCCESS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 11,
									"character": 9
								}
							],
							"defaultValue": "\"success\""
						},
						{
							"id": 5247,
							"name": "WARNING",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 13,
									"character": 9
								}
							],
							"defaultValue": "\"warning\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								5249,
								5250,
								5246,
								5248,
								5245,
								5247
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/model.ts",
							"line": 10,
							"character": 25
						}
					]
				},
				{
					"id": 5251,
					"name": "NbToast",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5254,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 22,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "NbToastrConfig",
								"id": 5226
							}
						},
						{
							"id": 5253,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 21,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5252,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/model.ts",
									"line": 20,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5254,
								5253,
								5252
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/model.ts",
							"line": 19,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						5244
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5251
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/toastr/model.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5255,
			"name": "\"theme/components/toastr/toast.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/toastr/toast.component.ts",
			"children": [
				{
					"id": 5256,
					"name": "NbToastComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "TODO\nRemove svg icons, include them in font."
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-toast',\n  styleUrls: ['./toast.component.scss'],\n  templateUrl: './toast.component.html',\n}"
							}
						}
					],
					"children": [
						{
							"id": 5258,
							"name": "destroy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Output",
									"type": {
										"type": "reference",
										"name": "Output"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 37,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "EventEmitter",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							},
							"defaultValue": " new EventEmitter()"
						},
						{
							"id": 5257,
							"name": "toast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 35,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "NbToast",
								"id": 5251
							}
						},
						{
							"id": 5275,
							"name": "customIcon",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.custom-icon'"
									}
								}
							],
							"getSignature": {
								"id": 5276,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 80,
									"character": 16
								}
							]
						},
						{
							"id": 5267,
							"name": "danger",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.danger'"
									}
								}
							],
							"getSignature": {
								"id": 5268,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 60,
									"character": 12
								}
							]
						},
						{
							"id": 5269,
							"name": "default",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.default'"
									}
								}
							],
							"getSignature": {
								"id": 5270,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 65,
									"character": 13
								}
							]
						},
						{
							"id": 5271,
							"name": "destroyByClick",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.destroy-by-click'"
									}
								}
							],
							"getSignature": {
								"id": 5272,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 70,
									"character": 20
								}
							]
						},
						{
							"id": 5273,
							"name": "hasIcon",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.has-icon'"
									}
								}
							],
							"getSignature": {
								"id": 5274,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 75,
									"character": 13
								}
							]
						},
						{
							"id": 5277,
							"name": "icon",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": {
								"id": 5278,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 84,
									"character": 10
								}
							]
						},
						{
							"id": 5261,
							"name": "info",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.info'"
									}
								}
							],
							"getSignature": {
								"id": 5262,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 45,
									"character": 10
								}
							]
						},
						{
							"id": 5265,
							"name": "primary",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.primary'"
									}
								}
							],
							"getSignature": {
								"id": 5266,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 55,
									"character": 13
								}
							]
						},
						{
							"id": 5259,
							"name": "success",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.success'"
									}
								}
							],
							"getSignature": {
								"id": 5260,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 40,
									"character": 13
								}
							]
						},
						{
							"id": 5263,
							"name": "warning",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.warning'"
									}
								}
							],
							"getSignature": {
								"id": 5264,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 50,
									"character": 13
								}
							]
						},
						{
							"id": 5279,
							"name": "onClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostListener",
									"type": {
										"type": "reference",
										"name": "HostListener"
									},
									"arguments": {
										"eventName": "'click'"
									}
								}
							],
							"signatures": [
								{
									"id": 5280,
									"name": "onClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toast.component.ts",
									"line": 89,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5258,
								5257
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5275,
								5267,
								5269,
								5271,
								5273,
								5277,
								5261,
								5265,
								5259,
								5263
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5279
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toast.component.ts",
							"line": 33,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5256
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/toastr/toast.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5225,
			"name": "\"theme/components/toastr/toastr-config\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/toastr/toastr-config.ts",
			"children": [
				{
					"id": 5226,
					"name": "NbToastrConfig",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbToastrConfig` class describes configuration of the `NbToastrService.show` and global toastr configuration."
					},
					"children": [
						{
							"id": 5236,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5237,
									"name": "new NbToastrConfig",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5238,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastrConfig",
										"id": 5226
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 56,
									"character": 4
								}
							]
						},
						{
							"id": 5230,
							"name": "destroyByClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Destroy by click means you can hide the toast by clicking it."
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 34,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5229,
							"name": "duration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Duration is timeout between toast appears and disappears."
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 30,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "3000"
						},
						{
							"id": 5232,
							"name": "hasIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines render icon or not."
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 42,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5233,
							"name": "icon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Icon class that can be provided to render custom icon."
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 46,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"nb-email\""
						},
						{
							"id": 5227,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines where on the screen toast have to be rendered."
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 22,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbGlobalPosition",
								"id": 3601
							},
							"defaultValue": " NbGlobalLogicalPosition.TOP_END"
						},
						{
							"id": 5231,
							"name": "preventDuplicates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If preventDuplicates is true then the next toast with the same title and message will not be rendered."
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 38,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5228,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Status chooses color scheme for the toast."
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "NbToastStatus",
								"id": 5244
							},
							"defaultValue": " NbToastStatus.PRIMARY"
						},
						{
							"id": 5239,
							"name": "patchIcon",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5240,
									"name": "patchIcon",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5241,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 63,
									"character": 21
								}
							]
						},
						{
							"id": 5234,
							"name": "icons",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"comment": {
								"shortText": "Toast status icon-class mapping."
							},
							"children": [
								{
									"id": 5235,
									"name": "__computed",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/components/toastr/toastr-config.ts",
											"line": 51,
											"character": 26
										},
										{
											"fileName": "theme/components/toastr/toastr-config.ts",
											"line": 52,
											"character": 27
										},
										{
											"fileName": "theme/components/toastr/toastr-config.ts",
											"line": 53,
											"character": 24
										},
										{
											"fileName": "theme/components/toastr/toastr-config.ts",
											"line": 54,
											"character": 27
										},
										{
											"fileName": "theme/components/toastr/toastr-config.ts",
											"line": 55,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"nb-email\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										5235
									]
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-config.ts",
									"line": 50,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5236
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5230,
								5229,
								5232,
								5233,
								5227,
								5231,
								5228
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5239
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								5234
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr-config.ts",
							"line": 18,
							"character": 27
						}
					]
				},
				{
					"id": 5242,
					"name": "NB_TOASTR_CONFIG",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr-config.ts",
							"line": 13,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbToastrConfig",
								"id": 5226
							}
						]
					},
					"defaultValue": " new InjectionToken<NbToastrConfig>('Default toastr options')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5226
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5242
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/toastr/toastr-config.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5281,
			"name": "\"theme/components/toastr/toastr-container.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/toastr/toastr-container.component.ts",
			"children": [
				{
					"id": 5282,
					"name": "NbToastrContainerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-toastr-container',\n  template: `\n    <nb-toast [@fadeIn]=\"fadeIn\" *ngFor=\"let toast of content\" [toast]=\"toast\"></nb-toast>`,\n  animations: [\n    trigger('fadeIn', [\n      transition(':enter', [voidState, animate(100)], defaultOptions),\n      transition(':leave', [animate(100, voidState)], defaultOptions),\n    ]),\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 5289,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5292,
									"name": "new NbToastrContainerComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5293,
											"name": "layoutDirection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirectionService",
												"id": 1581
											}
										},
										{
											"id": 5294,
											"name": "positionHelper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionHelper",
												"id": 3572
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastrContainerComponent",
										"id": 5282
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 51,
									"character": 34
								}
							]
						},
						{
							"id": 5288,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 51,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5283,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 38,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbToast",
									"id": 5251
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 5284,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 5287,
							"name": "fadeIn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5290,
							"name": "layoutDirection",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 53,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirectionService",
								"id": 1581
							}
						},
						{
							"id": 5285,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 44,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbGlobalPosition",
								"id": 3601
							}
						},
						{
							"id": 5291,
							"name": "positionHelper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 54,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionHelper",
								"id": 3572
							}
						},
						{
							"id": 5286,
							"name": "toasts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChildren",
									"type": {
										"type": "reference",
										"name": "ViewChildren"
									},
									"arguments": {
										"selector": "NbToastComponent"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "QueryList",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbToastComponent",
										"id": 5256
									}
								]
							}
						},
						{
							"id": 5297,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5298,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 63,
									"character": 13
								}
							]
						},
						{
							"id": 5295,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5296,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 57,
									"character": 10
								}
							]
						},
						{
							"id": 5299,
							"name": "onDirectionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5300,
									"name": "onDirectionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 67,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5289
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5288,
								5283,
								5284,
								5287,
								5290,
								5285,
								5291,
								5286
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5297,
								5295,
								5299
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr-container.component.ts",
							"line": 36,
							"character": 39
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				},
				{
					"id": 5301,
					"name": "voidState",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr-container.component.ts",
							"line": 17,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "AnimationStyleMetadata"
					},
					"defaultValue": " style({\n  transform: 'translateX({{ direction }}110%)',\n  height: 0,\n  margin: 0,\n})"
				},
				{
					"id": 5302,
					"name": "defaultOptions",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 5303,
							"name": "params",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 5304,
									"name": "direction",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "theme/components/toastr/toastr-container.component.ts",
											"line": 23,
											"character": 44
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										5304
									]
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr-container.component.ts",
									"line": 23,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								5303
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr-container.component.ts",
							"line": 23,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5282
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5301
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						5302
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/toastr/toastr-container.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5405,
			"name": "\"theme/components/toastr/toastr.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/toastr/toastr.module.ts",
			"children": [
				{
					"id": 5406,
					"name": "NbToastrModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbSharedModule, NbOverlayModule],\n  declarations: [NbToastrContainerComponent, NbToastComponent],\n  entryComponents: [NbToastrContainerComponent, NbToastComponent],\n}"
							}
						}
					],
					"children": [
						{
							"id": 5407,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5408,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5409,
											"name": "toastrConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.module.ts",
									"line": 24,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5407
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr.module.ts",
							"line": 23,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5406
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/toastr/toastr.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5305,
			"name": "\"theme/components/toastr/toastr.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/toastr/toastr.service.ts",
			"children": [
				{
					"id": 5306,
					"name": "NbToastContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5309,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5313,
									"name": "new NbToastContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5314,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPosition",
												"id": 3601
											}
										},
										{
											"id": 5315,
											"name": "containerRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentRef",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrContainerComponent",
														"id": 5282
													}
												]
											}
										},
										{
											"id": 5316,
											"name": "positionHelper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionHelper",
												"id": 3572
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastContainer",
										"id": 5306
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 26,
									"character": 31
								}
							]
						},
						{
							"id": 5311,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 29,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbToastrContainerComponent",
										"id": 5282
									}
								]
							}
						},
						{
							"id": 5310,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 28,
									"character": 32
								}
							],
							"type": {
								"type": "reference",
								"name": "NbGlobalPosition",
								"id": 3601
							}
						},
						{
							"id": 5312,
							"name": "positionHelper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 30,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionHelper",
								"id": 3572
							}
						},
						{
							"id": 5308,
							"name": "prevToast",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 26,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "NbToast",
								"id": 5251
							}
						},
						{
							"id": 5307,
							"name": "toasts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 25,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbToast",
									"id": 5251
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 5317,
							"name": "attach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5318,
									"name": "attach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5319,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 33,
									"character": 8
								}
							]
						},
						{
							"id": 5329,
							"name": "attachToBottom",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5330,
									"name": "attachToBottom",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5331,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastComponent",
										"id": 5256
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 71,
									"character": 26
								}
							]
						},
						{
							"id": 5326,
							"name": "attachToTop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5327,
									"name": "attachToTop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5328,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastComponent",
										"id": 5256
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 65,
									"character": 23
								}
							]
						},
						{
							"id": 5323,
							"name": "attachToast",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5324,
									"name": "attachToast",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5325,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastComponent",
										"id": 5256
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 57,
									"character": 23
								}
							]
						},
						{
							"id": 5339,
							"name": "destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5340,
									"name": "destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5341,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 85,
									"character": 19
								}
							]
						},
						{
							"id": 5320,
							"name": "isDuplicate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5321,
									"name": "isDuplicate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5322,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 51,
									"character": 23
								}
							]
						},
						{
							"id": 5332,
							"name": "setDestroyTimeout",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5333,
									"name": "setDestroyTimeout",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5334,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 77,
									"character": 29
								}
							]
						},
						{
							"id": 5335,
							"name": "subscribeOnClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5336,
									"name": "subscribeOnClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5337,
											"name": "toastComponent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToastComponent",
												"id": 5256
											}
										},
										{
											"id": 5338,
											"name": "toast",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToast",
												"id": 5251
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 81,
									"character": 28
								}
							]
						},
						{
							"id": 5342,
							"name": "updateContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5343,
									"name": "updateContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 90,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5309
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5311,
								5310,
								5312,
								5308,
								5307
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5317,
								5329,
								5326,
								5323,
								5339,
								5320,
								5332,
								5335,
								5342
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr.service.ts",
							"line": 24,
							"character": 29
						}
					]
				},
				{
					"id": 5344,
					"name": "NbToastrContainerRegistry",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 5346,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5350,
									"name": "new NbToastrContainerRegistry",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5351,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										},
										{
											"id": 5352,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 5353,
											"name": "positionHelper",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionHelper",
												"id": 3572
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastrContainerRegistry",
										"id": 5344
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 98,
									"character": 74
								}
							]
						},
						{
							"id": 5347,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 100,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 5345,
							"name": "overlays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 98,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbGlobalPosition",
										"id": 3601
									},
									{
										"type": "reference",
										"name": "NbToastContainer",
										"id": 5306
									}
								]
							},
							"defaultValue": " new Map()"
						},
						{
							"id": 5348,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 101,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							}
						},
						{
							"id": 5349,
							"name": "positionHelper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 102,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionHelper",
								"id": 3572
							}
						},
						{
							"id": 5360,
							"name": "createContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5361,
									"name": "createContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5362,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalLogicalPosition",
												"id": 3562
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastContainer",
										"id": 5306
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 120,
									"character": 27
								}
							]
						},
						{
							"id": 5354,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5355,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5356,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalPosition",
												"id": 3601
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastContainer",
										"id": 5306
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 105,
									"character": 5
								}
							]
						},
						{
							"id": 5357,
							"name": "instantiateContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5358,
									"name": "instantiateContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5359,
											"name": "position",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbGlobalLogicalPosition",
												"id": 3562
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 115,
									"character": 32
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5346
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5347,
								5345,
								5348,
								5349
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5360,
								5354,
								5357
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr.service.ts",
							"line": 97,
							"character": 38
						}
					]
				},
				{
					"id": 5363,
					"name": "NbToastrService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbToastrService` provides a capability to build toast notifications.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "toastr/toastr-showcase.component)\n\n`NbToastrService.show(message, title, config)` accepts three params, title and config are optional.\n\nGlobal toastr configuration may be provided through `NbToastrModule.forRoot(config)`.\n\n```ts\nimports: [\n  NbToastrModule.forRoot(config),\n]\n```\n\n### Configuration\n\nConfig accepts following options:\n\n`position` - determines where on the screen toast will be rendered.\nDefault is `top-end`.\n"
							},
							{
								"tag": "stacked-example(position,",
								"text": "toastr/toastr-positions.component)\n\n`status` - coloring and icon of the toast.\nDefault is `primary`\n"
							},
							{
								"tag": "stacked-example(status,",
								"text": "toastr/toastr-statuses.component)\n\n`duration` - the time after which the toast will be destroyed.\n`0` means endless toast, that may be destroyed by click only.\nDefault is 3000 ms.\n"
							},
							{
								"tag": "stacked-example(duration,",
								"text": "toastr/toastr-duration.component)\n\n`destroyByClick` - provides a capability to destroy toast by click.\nDefault is true.\n"
							},
							{
								"tag": "stacked-example(destroy",
								"text": "by click, toastr/toastr-destroy-by-click.component)\n\n`preventDuplicates` - don't create new toast if it has the same title and the same message with previous one.\nDefault is false.\n"
							},
							{
								"tag": "stacked-example(prevent",
								"text": "duplicates, toastr/toastr-prevent-duplicates.component)\n\n`hasIcon` - if true then render toast icon.\n`icon` - you can pass icon class that will be applied into the toast.\n"
							},
							{
								"tag": "stacked-example(has",
								"text": "icon, toastr/toastr-icon.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 5364,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5367,
									"name": "new NbToastrService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5368,
											"name": "globalConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_TOASTR_CONFIG"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbToastrConfig",
												"id": 5226
											}
										},
										{
											"id": 5369,
											"name": "containerRegistry",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbToastrContainerRegistry",
												"id": 5344
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbToastrService",
										"id": 5363
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 179,
									"character": 30
								}
							]
						},
						{
							"id": 5366,
							"name": "containerRegistry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 181,
									"character": 41
								}
							],
							"type": {
								"type": "reference",
								"name": "NbToastrContainerRegistry",
								"id": 5344
							}
						},
						{
							"id": 5365,
							"name": "globalConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_TOASTR_CONFIG"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 180,
									"character": 62
								}
							],
							"type": {
								"type": "reference",
								"name": "NbToastrConfig",
								"id": 5226
							}
						},
						{
							"id": 5395,
							"name": "danger",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5396,
									"name": "danger",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Shows danger toast with message, title and user config."
									},
									"parameters": [
										{
											"id": 5397,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5398,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5399,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 225,
									"character": 8
								}
							]
						},
						{
							"id": 5400,
							"name": "default",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5401,
									"name": "default",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Shows default toast with message, title and user config."
									},
									"parameters": [
										{
											"id": 5402,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5403,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5404,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 232,
									"character": 9
								}
							]
						},
						{
							"id": 5380,
							"name": "info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5381,
									"name": "info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Shows info toast with message, title and user config."
									},
									"parameters": [
										{
											"id": 5382,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5383,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5384,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 204,
									"character": 6
								}
							]
						},
						{
							"id": 5390,
							"name": "primary",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5391,
									"name": "primary",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Shows primary toast with message, title and user config."
									},
									"parameters": [
										{
											"id": 5392,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5393,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5394,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 218,
									"character": 9
								}
							]
						},
						{
							"id": 5370,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5371,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Shows toast with message, title and user config."
									},
									"parameters": [
										{
											"id": 5372,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5373,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5374,
											"name": "userConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 187,
									"character": 6
								}
							]
						},
						{
							"id": 5375,
							"name": "success",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5376,
									"name": "success",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Shows success toast with message, title and user config."
									},
									"parameters": [
										{
											"id": 5377,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5378,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5379,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 197,
									"character": 9
								}
							]
						},
						{
							"id": 5385,
							"name": "warning",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5386,
									"name": "warning",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Shows warning toast with message, title and user config."
									},
									"parameters": [
										{
											"id": 5387,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5388,
											"name": "title",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5389,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbToastrConfig",
														"id": 5226
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/toastr/toastr.service.ts",
									"line": 211,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5364
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5366,
								5365
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5395,
								5400,
								5380,
								5390,
								5370,
								5375,
								5385
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/toastr/toastr.service.ts",
							"line": 179,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5306,
						5344,
						5363
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/toastr/toastr.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5410,
			"name": "\"theme/components/tooltip/tooltip.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/tooltip/tooltip.component.ts",
			"children": [
				{
					"id": 5411,
					"name": "NbTooltipComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Tooltip container.\nRenders provided tooltip inside.",
						"tags": [
							{
								"tag": "styles",
								"text": "\n\ntooltip-bg\ntooltip-primary-bg\ntooltip-info-bg\ntooltip-success-bg\ntooltip-warning-bg\ntooltip-danger-bg\ntooltip-fg\ntooltip-shadow\ntooltip-font-size\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-tooltip',\n  styleUrls: ['./tooltip.component.scss'],\n  template: `\n    <span class=\"arrow\"></span>\n    <div class=\"content\">\n      <i *ngIf=\"context?.icon\" class=\"icon {{ context?.icon }}\"></i>\n      <span *ngIf=\"content\">{{ content }}</span>\n    </div>\n  `,\n  animations: [\n    trigger('showTooltip', [\n      state('in', style({ opacity: 1 })),\n      transition('void => *', [\n        style({ opacity: 0 }),\n        animate(100),\n      ]),\n      transition('* => void', [\n        animate(100, style({ opacity: 0 })),\n      ]),\n    ]),\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 5412,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.component.ts",
									"line": 56,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5418,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.component.ts",
									"line": 75,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5419,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5420,
											"name": "icon",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "theme/components/tooltip/tooltip.component.ts",
													"line": 75,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5421,
											"name": "status",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "theme/components/tooltip/tooltip.component.ts",
													"line": 75,
													"character": 34
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												5420,
												5421
											]
										}
									],
									"sources": [
										{
											"fileName": "theme/components/tooltip/tooltip.component.ts",
											"line": 75,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 5413,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Popover position relatively host element."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.component.ts",
									"line": 62,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"defaultValue": " NbPosition.TOP"
						},
						{
							"id": 5414,
							"name": "binding",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class'"
									}
								}
							],
							"getSignature": {
								"id": 5415,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.component.ts",
									"line": 65,
									"character": 13
								}
							]
						},
						{
							"id": 5416,
							"name": "show",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'@showTooltip'"
									}
								}
							],
							"getSignature": {
								"id": 5417,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.component.ts",
									"line": 70,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5412,
								5418,
								5413
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5414,
								5416
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/tooltip/tooltip.component.ts",
							"line": 53,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5411
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/tooltip/tooltip.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5422,
			"name": "\"theme/components/tooltip/tooltip.directive\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/tooltip/tooltip.directive.ts",
			"children": [
				{
					"id": 5423,
					"name": "NbTooltipDirective",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Tooltip directive for small text/icon hints.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "tooltip/tooltip-showcase.component)\n\nTooltip can accept a hint text and/or an icon:"
							},
							{
								"tag": "stacked-example(with",
								"text": "Icon, tooltip/tooltip-with-icon.component)\n\nSame way as Popover, tooltip can accept placement position with `nbTooltipPlacement` proprety:"
							},
							{
								"tag": "stacked-example(placements,",
								"text": "tooltip/tooltip-placements.component)\n\nIt is also possible to specify tooltip color using `nbTooltipStatus` property:"
							},
							{
								"tag": "stacked-example(colored",
								"text": "Tooltips, tooltip/tooltip-colors.component)\n\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Directive",
							"type": {
								"type": "reference",
								"name": "Directive"
							},
							"arguments": {
								"obj": "{ selector: '[nbTooltip]' }"
							}
						}
					],
					"children": [
						{
							"id": 5439,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5444,
									"name": "new NbTooltipDirective",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5445,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 5446,
											"name": "hostRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 5447,
											"name": "positionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbPositionBuilderService",
												"id": 3729
											}
										},
										{
											"id": 5448,
											"name": "overlay",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbTooltipDirective",
										"id": 5423
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 90,
									"character": 34
								}
							]
						},
						{
							"id": 5427,
							"name": "adjustment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Container position will be changes automatically based on this strategy if container can't fit view port.\nSet this property to any falsy value if you want to disable automatically adjustment.\nAvailable values: clockwise, counterclockwise."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbTooltipAdjustment'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 66,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustment",
								"id": 3603
							},
							"defaultValue": " NbAdjustment.CLOCKWISE"
						},
						{
							"id": 5438,
							"name": "alive",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 90,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5435,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 87,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 5425,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Popover content which will be rendered in NbTooltipComponent.\nAvailable content: template ref, component and any primitive."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbTooltip'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 53,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5424,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 45,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 5440,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 92,
									"character": 53
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 5441,
							"name": "hostRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 93,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5443,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 95,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 5426,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Position will be calculated relatively host element based on the position.\nCan be top, right, bottom, left, start or end."
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbTooltipPlacement'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 59,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPosition",
								"id": 3609
							},
							"defaultValue": " NbPosition.TOP"
						},
						{
							"id": 5442,
							"name": "positionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 94,
									"character": 37
								}
							],
							"type": {
								"type": "reference",
								"name": "NbPositionBuilderService",
								"id": 3729
							}
						},
						{
							"id": 5436,
							"name": "positionStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 88,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbAdjustableConnectedPositionStrategy",
								"id": 3616
							}
						},
						{
							"id": 5434,
							"name": "ref",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 86,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 5437,
							"name": "triggerStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 89,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "NbTriggerStrategy",
								"id": 3911
							}
						},
						{
							"id": 5428,
							"name": "icon",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbTooltipIcon'"
									}
								}
							],
							"setSignature": {
								"id": 5429,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {},
								"parameters": [
									{
										"id": 5430,
										"name": "icon",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 73,
									"character": 10
								}
							]
						},
						{
							"id": 5431,
							"name": "status",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {
										"bindingPropertyName": "'nbTooltipStatus'"
									}
								}
							],
							"setSignature": {
								"id": 5432,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {},
								"parameters": [
									{
										"id": 5433,
										"name": "status",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"comment": {
											"shortText": "\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 82,
									"character": 12
								}
							]
						},
						{
							"id": 5459,
							"name": "createPositionStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5460,
									"name": "createPositionStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbAdjustableConnectedPositionStrategy",
										"id": 3616
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 134,
									"character": 34
								}
							]
						},
						{
							"id": 5461,
							"name": "createTriggerStrategy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5462,
									"name": "createTriggerStrategy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NbTriggerStrategy",
										"id": 3911
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 142,
									"character": 33
								}
							]
						},
						{
							"id": 5455,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5456,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 122,
									"character": 6
								}
							]
						},
						{
							"id": 5449,
							"name": "ngAfterViewInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5450,
									"name": "ngAfterViewInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 98,
									"character": 17
								}
							]
						},
						{
							"id": 5451,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5452,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 110,
									"character": 13
								}
							]
						},
						{
							"id": 5453,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5454,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 114,
									"character": 6
								}
							]
						},
						{
							"id": 5463,
							"name": "subscribeOnPositionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5464,
									"name": "subscribeOnPositionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 151,
									"character": 37
								}
							]
						},
						{
							"id": 5465,
							"name": "subscribeOnTriggers",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5466,
									"name": "subscribeOnTriggers",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 157,
									"character": 31
								}
							]
						},
						{
							"id": 5457,
							"name": "toggle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5458,
									"name": "toggle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/tooltip/tooltip.directive.ts",
									"line": 126,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5439
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5427,
								5438,
								5435,
								5425,
								5424,
								5440,
								5441,
								5443,
								5426,
								5442,
								5436,
								5434,
								5437
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5428,
								5431
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5459,
								5461,
								5455,
								5449,
								5451,
								5453,
								5463,
								5465,
								5457
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/tooltip/tooltip.directive.ts",
							"line": 43,
							"character": 31
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AfterViewInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5423
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/tooltip/tooltip.directive.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5467,
			"name": "\"theme/components/tooltip/tooltip.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/tooltip/tooltip.module.ts",
			"children": [
				{
					"id": 5468,
					"name": "NbTooltipModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [NbSharedModule, NbOverlayModule],\n  declarations: [NbTooltipComponent, NbTooltipDirective],\n  exports: [NbTooltipDirective],\n  entryComponents: [NbTooltipComponent],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/tooltip/tooltip.module.ts",
							"line": 21,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5468
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/tooltip/tooltip.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3442,
			"name": "\"theme/components/user/user.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/user/user.component.ts",
			"children": [
				{
					"id": 3443,
					"name": "NbUserComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Represents a component showing a user avatar (picture) with a user name on the right.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "user/user-showcase.component)\n\n```ts\n  <nb-user name=\"Jonh Doe\" title=\"Engineer\"></nb-user>\n```\nCan be used as a user profile link.\n\nAvailable in multiple sizes:"
							},
							{
								"tag": "stacked-example(multiple",
								"text": "Sizes, user/user-sizes.component)\n"
							},
							{
								"tag": "styles",
								"text": "\n\nuser-font-size:\nuser-line-height:\nuser-bg:\nuser-fg:\nuser-fg-highlight:\nuser-font-family-secondary:\nuser-size-small:\nuser-size-medium:\nuser-size-large:\nuser-size-xlarge:\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-user',\n  styleUrls: ['./user.component.scss'],\n  templateUrl: './user.component.html',\n}"
							}
						}
					],
					"children": [
						{
							"id": 3490,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3492,
									"name": "new NbUserComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3493,
											"name": "domSanitizer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DomSanitizer"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbUserComponent",
										"id": 3443
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 187,
									"character": 31
								}
							]
						},
						{
							"id": 3484,
							"name": "badgePosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge position.\nCan be set to any class or to one of predefined positions:\n'top left', 'top right', 'bottom left', 'bottom right',\n'top start', 'top end', 'bottom start', 'bottom end'",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 181,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3483,
							"name": "badgeStatus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge status (adds specific styles):\n'primary', 'info', 'success', 'warning', 'danger'",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "val"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 172,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3482,
							"name": "badgeText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Badge text to display",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 165,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3463,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Color of the area shown when no picture specified",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3491,
							"name": "domSanitizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 189,
									"character": 34
								}
							],
							"type": {
								"type": "reference",
								"name": "DomSanitizer"
							}
						},
						{
							"id": 3485,
							"name": "imageBackgroundStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 183,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "SafeStyle"
							}
						},
						{
							"id": 3449,
							"name": "inverseValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.inverse'"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 58,
									"character": 44
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3489,
							"name": "isMenuShown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 187,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 3458,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies a name to be shown on the right of a user picture",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 84,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Anonymous\""
						},
						{
							"id": 3488,
							"name": "showInitialsValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 186,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3486,
							"name": "showNameValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 184,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3487,
							"name": "showTitleValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 185,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 3448,
							"name": "sizeValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 56,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3459,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies a title (written in a smaller font) to be shown under the **name**",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 90,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3446,
							"name": "SIZE_LARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 53,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "large"
							},
							"defaultValue": "\"large\""
						},
						{
							"id": 3445,
							"name": "SIZE_MEDIUM",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 52,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "medium"
							},
							"defaultValue": "\"medium\""
						},
						{
							"id": 3444,
							"name": "SIZE_SMALL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 51,
									"character": 28
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "small"
							},
							"defaultValue": "\"small\""
						},
						{
							"id": 3447,
							"name": "SIZE_XLARGE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 54,
									"character": 29
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "xlarge"
							},
							"defaultValue": "\"xlarge\""
						},
						{
							"id": 3479,
							"name": "inverse",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Makes colors inverse based on current theme",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3480,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Makes colors inverse based on current theme",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3481,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 157,
									"character": 13
								}
							]
						},
						{
							"id": 3454,
							"name": "large",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.large'"
									}
								}
							],
							"getSignature": {
								"id": 3455,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 71,
									"character": 11
								}
							]
						},
						{
							"id": 3452,
							"name": "medium",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.medium'"
									}
								}
							],
							"getSignature": {
								"id": 3453,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 66,
									"character": 12
								}
							]
						},
						{
							"id": 3476,
							"name": "onlyPicture",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to show only a picture or also show the name and title",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3477,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Whether to show only a picture or also show the name and title",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3478,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 148,
									"character": 17
								}
							]
						},
						{
							"id": 3460,
							"name": "picture",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Absolute path to a user picture. Or base64 image\nUser name initials (JD for John Doe) will be shown if no picture specified",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3461,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Absolute path to a user picture. Or base64 image\nUser name initials (JD for John Doe) will be shown if no picture specified",
									"tags": [
										{
											"tag": "type",
											"text": "string\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3462,
										"name": "value",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 97,
									"character": 22
								}
							]
						},
						{
							"id": 3473,
							"name": "showInitials",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to show a user initials (if no picture specified) or not",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3474,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Whether to show a user initials (if no picture specified) or not",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3475,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 139,
									"character": 18
								}
							]
						},
						{
							"id": 3467,
							"name": "showName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to show a user name or not",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3468,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Whether to show a user name or not",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3469,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 121,
									"character": 14
								}
							]
						},
						{
							"id": 3470,
							"name": "showTitle",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether to show a user title or not",
								"tags": [
									{
										"tag": "type",
										"text": "boolean\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3471,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Whether to show a user title or not",
									"tags": [
										{
											"tag": "type",
											"text": "boolean\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3472,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 130,
									"character": 15
								}
							]
						},
						{
							"id": 3464,
							"name": "size",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Size of the component, small|medium|large",
								"tags": [
									{
										"tag": "type",
										"text": "string\n"
									}
								]
							},
							"decorators": [
								{
									"name": "Input",
									"type": {
										"type": "reference",
										"name": "Input"
									},
									"arguments": {}
								}
							],
							"setSignature": {
								"id": 3465,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Size of the component, small|medium|large",
									"tags": [
										{
											"tag": "type",
											"text": "string\n"
										}
									]
								},
								"parameters": [
									{
										"id": 3466,
										"name": "val",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 112,
									"character": 10
								}
							]
						},
						{
							"id": 3450,
							"name": "small",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.small'"
									}
								}
							],
							"getSignature": {
								"id": 3451,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 61,
									"character": 11
								}
							]
						},
						{
							"id": 3456,
							"name": "xlarge",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.xlarge'"
									}
								}
							],
							"getSignature": {
								"id": 3457,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 76,
									"character": 12
								}
							]
						},
						{
							"id": 3494,
							"name": "getInitials",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3495,
									"name": "getInitials",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/user/user.component.ts",
									"line": 191,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3490
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3484,
								3483,
								3482,
								3463,
								3491,
								3485,
								3449,
								3489,
								3458,
								3488,
								3486,
								3487,
								3448,
								3459,
								3446,
								3445,
								3444,
								3447
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3479,
								3454,
								3452,
								3476,
								3460,
								3473,
								3467,
								3470,
								3464,
								3450,
								3456
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3494
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/user/user.component.ts",
							"line": 41,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3443
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/user/user.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3496,
			"name": "\"theme/components/user/user.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/user/user.module.ts",
			"children": [
				{
					"id": 3497,
					"name": "NbUserModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    NbSharedModule,\n    NbBadgeModule,\n  ],\n  declarations: [\n    ...NB_USER_COMPONENTS,\n  ],\n  exports: [\n    ...NB_USER_COMPONENTS,\n  ],\n}"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/components/user/user.module.ts",
							"line": 32,
							"character": 25
						}
					]
				},
				{
					"id": 3498,
					"name": "NB_USER_COMPONENTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/user/user.module.ts",
							"line": 16,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  NbUserComponent,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3497
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3498
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/user/user.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5763,
			"name": "\"theme/components/window/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/window/index.ts",
			"sources": [
				{
					"fileName": "theme/components/window/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5692,
			"name": "\"theme/components/window/window-ref\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/window/window-ref.ts",
			"children": [
				{
					"id": 5693,
					"name": "NbWindowRef",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbWindowRef` helps to manipulate window after it was created.\nThe window can be dismissed by using `close` method of the windowRef.\nYou can access rendered component as `componentRef` property of the windowRef."
					},
					"children": [
						{
							"id": 5708,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5710,
									"name": "new NbWindowRef",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5711,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbWindowConfig",
												"id": 5638
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbWindowRef",
										"id": 5693
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 45,
									"character": 3
								}
							]
						},
						{
							"id": 5704,
							"name": "_closed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 38,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 5705,
							"name": "closed$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 39,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 5694,
							"name": "componentRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 12,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentRef",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbWindowComponent",
										"id": 5654
									}
								]
							}
						},
						{
							"id": 5709,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 47,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowConfig",
								"id": 5638
							}
						},
						{
							"id": 5695,
							"name": "prevStateValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 14,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowState",
								"id": 5631
							}
						},
						{
							"id": 5701,
							"name": "stateChange$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 30,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplaySubject",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbWindowStateChange",
										"id": 5635
									}
								]
							},
							"defaultValue": " new ReplaySubject<NbWindowStateChange>(1)"
						},
						{
							"id": 5696,
							"name": "stateValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 15,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowState",
								"id": 5631
							}
						},
						{
							"id": 5706,
							"name": "onClose",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when window was closed."
							},
							"getSignature": {
								"id": 5707,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Emits when window was closed."
								},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "Object"
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 43,
									"character": 13
								}
							]
						},
						{
							"id": 5697,
							"name": "state",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Current window state."
							},
							"getSignature": {
								"id": 5698,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Current window state."
								},
								"type": {
									"type": "reference",
									"name": "NbWindowState",
									"id": 5631
								}
							},
							"setSignature": {
								"id": 5699,
								"name": "__set",
								"kind": 1048576,
								"kindString": "Set signature",
								"flags": {},
								"comment": {
									"shortText": "Current window state."
								},
								"parameters": [
									{
										"id": 5700,
										"name": "newState",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "reference",
											"name": "NbWindowState",
											"id": 5631
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 19,
									"character": 11
								},
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 22,
									"character": 11
								}
							]
						},
						{
							"id": 5702,
							"name": "stateChange",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Emits when window state change."
							},
							"getSignature": {
								"id": 5703,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"comment": {
									"shortText": "Emits when window state change."
								},
								"type": {
									"type": "reference",
									"name": "Observable",
									"typeArguments": [
										{
											"type": "reference",
											"name": "NbWindowStateChange",
											"id": 5635
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 34,
									"character": 17
								}
							]
						},
						{
							"id": 5720,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5721,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Closes window."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 79,
									"character": 7
								}
							]
						},
						{
							"id": 5716,
							"name": "fullScreen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5717,
									"name": "fullScreen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set window on top."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 68,
									"character": 12
								}
							]
						},
						{
							"id": 5714,
							"name": "maximize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5715,
									"name": "maximize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Maximize window."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 61,
									"character": 10
								}
							]
						},
						{
							"id": 5712,
							"name": "minimize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5713,
									"name": "minimize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Minimize window."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 54,
									"character": 10
								}
							]
						},
						{
							"id": 5718,
							"name": "toPreviousState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5719,
									"name": "toPreviousState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window-ref.ts",
									"line": 72,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5708
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5704,
								5705,
								5694,
								5709,
								5695,
								5701,
								5696
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5706,
								5697,
								5702
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5720,
								5716,
								5714,
								5712,
								5718
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/window-ref.ts",
							"line": 11,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5693
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/window/window-ref.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5653,
			"name": "\"theme/components/window/window.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/window/window.component.ts",
			"children": [
				{
					"id": 5654,
					"name": "NbWindowComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-window',\n  template: `\n    <nb-card>\n      <nb-card-header>\n        <div cdkFocusInitial class=\"title\" tabindex=\"-1\">{{ config.title }}</div>\n\n        <div class=\"buttons\">\n          <button class=\"button\" (click)=\"minimize()\">\n            <i class=\"nb-fold\"></i>\n          </button>\n          <button class=\"button\" *ngIf=\"isFullScreen\" (click)=\"maximize()\">\n            <i class=\"nb-minimize\"></i>\n          </button>\n          <button class=\"button\" *ngIf=\"minimized || maximized\" (click)=\"maximizeOrFullScreen()\">\n            <i class=\"nb-maximize\"></i>\n          </button>\n          <button class=\"button\" (click)=\"close()\">\n            <i class=\"nb-close\"></i>\n          </button>\n        </div>\n      </nb-card-header>\n      <nb-card-body *ngIf=\"maximized || isFullScreen\">\n        <nb-overlay-container [content]=\"content\" [context]=\"context\">\n        </nb-overlay-container>\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./window.component.scss'],\n}"
							}
						}
					],
					"children": [
						{
							"id": 5662,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5670,
									"name": "new NbWindowComponent",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5671,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_WINDOW_CONTENT"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "TemplateRef",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "reference",
														"name": "NbComponentType",
														"id": 2848
													}
												]
											}
										},
										{
											"id": 5672,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_WINDOW_CONTEXT"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Object"
											}
										},
										{
											"id": 5673,
											"name": "windowRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbWindowRef",
												"id": 5693
											}
										},
										{
											"id": 5674,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbWindowConfig",
												"id": 5638
											}
										},
										{
											"id": 5675,
											"name": "focusTrapFactory",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbFocusTrapFactoryService",
												"id": 4073
											}
										},
										{
											"id": 5676,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementRef"
											}
										},
										{
											"id": 5677,
											"name": "renderer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Renderer2"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbWindowComponent",
										"id": 5654
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 53,
									"character": 35
								}
							]
						},
						{
							"id": 5666,
							"name": "config",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 59,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowConfig",
								"id": 5638
							}
						},
						{
							"id": 5663,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_WINDOW_CONTENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 56,
									"character": 45
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TemplateRef",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									{
										"type": "reference",
										"name": "NbComponentType",
										"id": 2848
									}
								]
							}
						},
						{
							"id": 5664,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_WINDOW_CONTEXT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 57,
									"character": 45
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 5668,
							"name": "elementRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 61,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementRef"
							}
						},
						{
							"id": 5661,
							"name": "focusTrap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 53,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "NbFocusTrap",
								"id": 4037
							}
						},
						{
							"id": 5667,
							"name": "focusTrapFactory",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 60,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "NbFocusTrapFactoryService",
								"id": 4073
							}
						},
						{
							"id": 5669,
							"name": "renderer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 62,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Renderer2"
							}
						},
						{
							"id": 5665,
							"name": "windowRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 58,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowRef",
								"id": 5693
							}
						},
						{
							"id": 5655,
							"name": "isFullScreen",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.full-screen'"
									}
								}
							],
							"getSignature": {
								"id": 5656,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 39,
									"character": 18
								}
							]
						},
						{
							"id": 5657,
							"name": "maximized",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.maximized'"
									}
								}
							],
							"getSignature": {
								"id": 5658,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 44,
									"character": 15
								}
							]
						},
						{
							"id": 5659,
							"name": "minimized",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "HostBinding",
									"type": {
										"type": "reference",
										"name": "HostBinding"
									},
									"arguments": {
										"hostPropertyName": "'class.minimized'"
									}
								}
							],
							"getSignature": {
								"id": 5660,
								"name": "__get",
								"kind": 524288,
								"kindString": "Get signature",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 49,
									"character": 15
								}
							]
						},
						{
							"id": 5690,
							"name": "close",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5691,
									"name": "close",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 107,
									"character": 7
								}
							]
						},
						{
							"id": 5686,
							"name": "fullScreen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5687,
									"name": "fullScreen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 95,
									"character": 12
								}
							]
						},
						{
							"id": 5684,
							"name": "maximize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5685,
									"name": "maximize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 91,
									"character": 10
								}
							]
						},
						{
							"id": 5688,
							"name": "maximizeOrFullScreen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5689,
									"name": "maximizeOrFullScreen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 99,
									"character": 22
								}
							]
						},
						{
							"id": 5682,
							"name": "minimize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5683,
									"name": "minimize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 83,
									"character": 10
								}
							]
						},
						{
							"id": 5680,
							"name": "ngOnDestroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5681,
									"name": "ngOnDestroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 75,
									"character": 13
								}
							]
						},
						{
							"id": 5678,
							"name": "ngOnInit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5679,
									"name": "ngOnInit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.component.ts",
									"line": 65,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5662
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5666,
								5663,
								5664,
								5668,
								5661,
								5667,
								5669,
								5665
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								5655,
								5657,
								5659
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5690,
								5686,
								5684,
								5688,
								5682,
								5680,
								5678
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/window.component.ts",
							"line": 37,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "OnInit"
						},
						{
							"type": "reference",
							"name": "OnDestroy"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5654
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/window/window.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5758,
			"name": "\"theme/components/window/window.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/window/window.module.ts",
			"children": [
				{
					"id": 5759,
					"name": "NbWindowModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [ CommonModule, NbOverlayModule, NbCardModule, NbA11yModule ],\n  declarations: [\n    NbWindowsContainerComponent,\n    NbWindowComponent,\n  ],\n  entryComponents: [ NbWindowsContainerComponent, NbWindowComponent ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 5760,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 5761,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5762,
											"name": "defaultConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbWindowConfig",
														"id": 5638
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.module.ts",
									"line": 20,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5760
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/window.module.ts",
							"line": 19,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5759
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/window/window.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5630,
			"name": "\"theme/components/window/window.options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/window/window.options.ts",
			"children": [
				{
					"id": 5631,
					"name": "NbWindowState",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5634,
							"name": "FULL_SCREEN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 10,
									"character": 13
								}
							],
							"defaultValue": "\"full-screen\""
						},
						{
							"id": 5633,
							"name": "MAXIMIZED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 9,
									"character": 11
								}
							],
							"defaultValue": "\"maximized\""
						},
						{
							"id": 5632,
							"name": "MINIMIZED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 8,
									"character": 11
								}
							],
							"defaultValue": "\"minimized\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								5634,
								5633,
								5632
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/window.options.ts",
							"line": 7,
							"character": 25
						}
					]
				},
				{
					"id": 5638,
					"name": "NbWindowConfig",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Window configuration options."
					},
					"children": [
						{
							"id": 5647,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5648,
									"name": "new NbWindowConfig",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5649,
											"name": "configs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Partial",
													"typeArguments": [
														{
															"type": "reference",
															"name": "NbWindowConfig",
															"id": 5638
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbWindowConfig",
										"id": 5638
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 68,
									"character": 44
								}
							]
						},
						{
							"id": 5642,
							"name": "closeOnBackdropClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If set to true mouse clicks on backdrop will close a window.\nDefault is true."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 42,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5643,
							"name": "closeOnEsc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true then escape press will close a window.\nDefault is true."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 48,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5645,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Both, template and component may receive data through `config.context` property.\nFor components, this data will be set as component properties.\nFor templates, you can access it inside template as $implicit."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 60,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 5641,
							"name": "hasBackdrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If true than backdrop will be rendered behind window.\nBy default set to true."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 5640,
							"name": "initialState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Initial window state. Full screen by default."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 30,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowState",
								"id": 5631
							},
							"defaultValue": " NbWindowState.FULL_SCREEN"
						},
						{
							"id": 5639,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Window title."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 25,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 5646,
							"name": "viewContainerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Where the attached component should live in Angular's *logical* component tree.\nThis affects what is available for injection and the change detection order for the\ncomponent instantiated inside of the window. This does not affect where the window\ncontent will be rendered."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 68,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							},
							"defaultValue": " null"
						},
						{
							"id": 5644,
							"name": "windowClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Class to be applied to the window."
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 53,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5647
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5642,
								5643,
								5645,
								5641,
								5640,
								5639,
								5646,
								5644
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/window.options.ts",
							"line": 21,
							"character": 27
						}
					]
				},
				{
					"id": 5635,
					"name": "NbWindowStateChange",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 5637,
							"name": "newState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 15,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowState",
								"id": 5631
							}
						},
						{
							"id": 5636,
							"name": "oldState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.options.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowState",
								"id": 5631
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5637,
								5636
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/window.options.ts",
							"line": 13,
							"character": 36
						}
					]
				},
				{
					"id": 5651,
					"name": "NB_WINDOW_CONFIG",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/window/window.options.ts",
							"line": 76,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbWindowConfig",
								"id": 5638
							}
						]
					},
					"defaultValue": " new InjectionToken<NbWindowConfig>('Nebular Window Config')"
				},
				{
					"id": 5650,
					"name": "NB_WINDOW_CONTENT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/window/window.options.ts",
							"line": 75,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TemplateRef",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									{
										"type": "reference",
										"name": "ComponentType",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						]
					},
					"defaultValue": " new InjectionToken<TemplateRef<any> | NbComponentType>('Nebular Window Content')"
				},
				{
					"id": 5652,
					"name": "NB_WINDOW_CONTEXT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/components/window/window.options.ts",
							"line": 77,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					},
					"defaultValue": " new InjectionToken<Object>('Nebular Window Context')"
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						5631
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5638
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						5635
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						5651,
						5650,
						5652
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/window/window.options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5725,
			"name": "\"theme/components/window/window.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/window/window.service.ts",
			"children": [
				{
					"id": 5726,
					"name": "NbWindowService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `NbWindowService` can be used to open windows.",
						"tags": [
							{
								"tag": "stacked-example(showcase,",
								"text": "window/window-showcase.component)\n\nA new window can be opened by calling the `open` method with a component or template to be loaded\nand an optional configuration.\n`open` method will return `NbWindowRef` that can be used for the further manipulations.\n\n```ts\nconst windowRef = this.windowService.open(MyComponent, { ... });\n```\n\n`NbWindowRef` gives you ability manipulate opened window.\nAlso, you can inject `NbWindowRef` inside provided component which rendered in window.\n\n```ts\nthis.windowService.open(MyWindowComponent, { ... });\n\n// my.component.ts\nconstructor(protected windowRef: NbWindowRef) {\n}\n\nminimize() {\n  this.windowRef.minimize();\n}\n\nclose() {\n  this.windowRef.close();\n}\n```\n\nInstead of component you can create window from TemplateRef. As usual you can access context provided via config\nvia `let-` variables. Also you can get reference to the `NbWindowRef` in context's `windowRef` property.\n"
							},
							{
								"tag": "stacked-example(window",
								"text": "content from TemplateRef, window/template-window.component)\n\n### Configuration\n\nAs mentioned above, `open` method of the `NbWindowService` may receive optional configuration options.\nAlso, you can modify default windows configuration through `NbWindowModule.forRoot({ ... })`.\nYou can read about all available options on [API tab](docs/components/window/api#nbwindowconfig).\n"
							},
							{
								"tag": "stacked-example(configuration,",
								"text": "window/windows-backdrop.component)\n"
							}
						]
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 5730,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5736,
									"name": "new NbWindowService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 5737,
											"name": "componentFactoryResolver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ComponentFactoryResolver"
											}
										},
										{
											"id": 5738,
											"name": "overlayService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayService",
												"id": 3792
											}
										},
										{
											"id": 5739,
											"name": "overlayPositionBuilder",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbOverlayPositionBuilder",
												"id": 2716
											}
										},
										{
											"id": 5740,
											"name": "blockScrollStrategy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbBlockScrollStrategyAdapter",
												"id": 3845
											}
										},
										{
											"id": 5741,
											"name": "defaultWindowsConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_WINDOW_CONFIG"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbWindowConfig",
												"id": 5638
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbWindowService",
										"id": 5726
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 66,
									"character": 44
								}
							]
						},
						{
							"id": 5734,
							"name": "blockScrollStrategy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 72,
									"character": 33
								}
							],
							"type": {
								"type": "reference",
								"name": "NbBlockScrollStrategyAdapter",
								"id": 3845
							}
						},
						{
							"id": 5731,
							"name": "componentFactoryResolver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 69,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "ComponentFactoryResolver"
							}
						},
						{
							"id": 5735,
							"name": "defaultWindowsConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_WINDOW_CONFIG"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 73,
									"character": 69
								}
							],
							"type": {
								"type": "reference",
								"name": "NbWindowConfig",
								"id": 5638
							}
						},
						{
							"id": 5729,
							"name": "openWindows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 66,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "NbWindowRef",
									"id": 5693
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 5733,
							"name": "overlayPositionBuilder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 71,
									"character": 36
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayPositionBuilder",
								"id": 2716
							}
						},
						{
							"id": 5727,
							"name": "overlayRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 64,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayRef",
								"id": 2847
							}
						},
						{
							"id": 5732,
							"name": "overlayService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 70,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "NbOverlayService",
								"id": 3792
							}
						},
						{
							"id": 5728,
							"name": "windowsContainerViewRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 65,
									"character": 35
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							}
						},
						{
							"id": 5748,
							"name": "appendWindow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5749,
									"name": "appendWindow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5750,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "TemplateRef",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "reference",
														"name": "NbComponentType",
														"id": 2848
													}
												]
											}
										},
										{
											"id": 5751,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbWindowConfig",
												"id": 5638
											}
										},
										{
											"id": 5752,
											"name": "windowRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbWindowRef",
												"id": 5693
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ComponentRef",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbWindowComponent",
												"id": 5654
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 110,
									"character": 24
								}
							]
						},
						{
							"id": 5756,
							"name": "checkAndUpdateOverlay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5757,
									"name": "checkAndUpdateOverlay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 153,
									"character": 33
								}
							]
						},
						{
							"id": 5746,
							"name": "createWindowsContainer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5747,
									"name": "createWindowsContainer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 99,
									"character": 34
								}
							]
						},
						{
							"id": 5742,
							"name": "open",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 5743,
									"name": "open",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Opens new window."
									},
									"parameters": [
										{
											"id": 5744,
											"name": "windowContent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "TemplateRef",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														]
													},
													{
														"type": "reference",
														"name": "NbComponentType",
														"id": 2848
													}
												]
											}
										},
										{
											"id": 5745,
											"name": "windowConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "NbWindowConfig",
														"id": 5638
													}
												]
											},
											"defaultValue": " {}"
										}
									],
									"type": {
										"type": "reference",
										"name": "NbWindowRef",
										"id": 5693
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 81,
									"character": 6
								}
							]
						},
						{
							"id": 5753,
							"name": "subscribeToEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isProtected": true
							},
							"signatures": [
								{
									"id": 5754,
									"name": "subscribeToEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 5755,
											"name": "windowRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbWindowRef",
												"id": 5693
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/window.service.ts",
									"line": 134,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								5730
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5734,
								5731,
								5735,
								5729,
								5733,
								5727,
								5732,
								5728
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								5748,
								5756,
								5746,
								5742,
								5753
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/window.service.ts",
							"line": 62,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5726
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/window/window.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5722,
			"name": "\"theme/components/window/windows-container.component\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/components/window/windows-container.component.ts",
			"children": [
				{
					"id": 5723,
					"name": "NbWindowsContainerComponent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "Component",
							"type": {
								"type": "reference",
								"name": "Component"
							},
							"arguments": {
								"obj": "{\n  selector: 'nb-windows-container',\n  template: `<ng-container #viewContainerRef></ng-container>`,\n  styleUrls: ['./windows-container.component.scss'],\n}"
							}
						}
					],
					"children": [
						{
							"id": 5724,
							"name": "viewContainerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"decorators": [
								{
									"name": "ViewChild",
									"type": {
										"type": "reference",
										"name": "ViewChild"
									},
									"arguments": {
										"selector": "'viewContainerRef'",
										"opts": "{ read: ViewContainerRef }"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/components/window/windows-container.component.ts",
									"line": 9,
									"character": 77
								}
							],
							"type": {
								"type": "reference",
								"name": "ViewContainerRef"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								5724
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/components/window/windows-container.component.ts",
							"line": 8,
							"character": 40
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						5723
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/components/window/windows-container.component.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 6169,
			"name": "\"theme/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/index.ts",
			"sources": [
				{
					"fileName": "theme/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1338,
			"name": "\"theme/services/breakpoints.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/breakpoints.service.ts",
			"children": [
				{
					"id": 1342,
					"name": "NbMediaBreakpointsService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Manages media breakpoints",
						"text": "Provides access to available media breakpoints to convert window width to a configured breakpoint,\ne.g. 200px - *xs* breakpoint\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1347,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1349,
									"name": "new NbMediaBreakpointsService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1350,
											"name": "breakpoints",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_MEDIA_BREAKPOINTS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMediaBreakpointsService",
										"id": 1342
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 64,
									"character": 59
								}
							]
						},
						{
							"id": 1348,
							"name": "breakpoints",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_MEDIA_BREAKPOINTS"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 66,
									"character": 63
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1343,
							"name": "breakpointsMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 64,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1344,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1345,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1346,
												"name": "breakpoint",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"sources": [
										{
											"fileName": "theme/services/breakpoints.service.ts",
											"line": 64,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 1357,
							"name": "getBreakpoints",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1358,
									"name": "getBreakpoints",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a list of configured breakpoints for the theme",
										"returns": "NbMediaBreakpoint[]\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbMediaBreakpoint",
											"id": 1339
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 105,
									"character": 16
								}
							]
						},
						{
							"id": 1359,
							"name": "getBreakpointsMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1360,
									"name": "getBreakpointsMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a map of configured breakpoints for the theme",
										"returns": "\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1361,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 1362,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 1363,
														"name": "breakpoint",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											"sources": [
												{
													"fileName": "theme/services/breakpoints.service.ts",
													"line": 113,
													"character": 22
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 113,
									"character": 19
								}
							]
						},
						{
							"id": 1354,
							"name": "getByName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1355,
									"name": "getByName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a configured breakpoint by name",
										"returns": "NbMediaBreakpoint\n"
									},
									"parameters": [
										{
											"id": 1356,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "string"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMediaBreakpoint",
										"id": 1339
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 94,
									"character": 11
								}
							]
						},
						{
							"id": 1351,
							"name": "getByWidth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1352,
									"name": "getByWidth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a configured breakpoint by width",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 1353,
											"name": "width",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "number"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbMediaBreakpoint",
										"id": 1339
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 78,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1347
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1348,
								1343
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1357,
								1359,
								1354,
								1351
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/breakpoints.service.ts",
							"line": 62,
							"character": 38
						}
					]
				},
				{
					"id": 1339,
					"name": "NbMediaBreakpoint",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Media breakpoint type",
						"text": "Where `name` - breakpoint name alias (e.g. xs, sm, md, etc), and width - min breakpoint width\n"
					},
					"children": [
						{
							"id": 1340,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 16,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1341,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/breakpoints.service.ts",
									"line": 17,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1340,
								1341
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/breakpoints.service.ts",
							"line": 15,
							"character": 34
						}
					]
				},
				{
					"id": 1364,
					"name": "DEFAULT_MEDIA_BREAKPOINTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/services/breakpoints.service.ts",
							"line": 20,
							"character": 38
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "Object"
					},
					"defaultValue": " [\n  {\n    name: 'xs',\n    width: 0,\n  },\n  {\n    name: 'is',\n    width: 400,\n  },\n  {\n    name: 'sm',\n    width: 576,\n  },\n  {\n    name: 'md',\n    width: 768,\n  },\n  {\n    name: 'lg',\n    width: 992,\n  },\n  {\n    name: 'xl',\n    width: 1200,\n  },\n  {\n    name: 'xxl',\n    width: 1400,\n  },\n  {\n    name: 'xxxl',\n    width: 1600,\n  },\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1342
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1339
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1364
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/breakpoints.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1382,
			"name": "\"theme/services/color.helper\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/color.helper.ts",
			"children": [
				{
					"id": 1383,
					"name": "NbColorHelper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1397,
							"name": "hexToRgbA",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1398,
									"name": "hexToRgbA",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1399,
											"name": "hex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1400,
											"name": "alpha",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/color.helper.ts",
									"line": 24,
									"character": 18
								}
							]
						},
						{
							"id": 1392,
							"name": "mix",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1393,
									"name": "mix",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1394,
											"name": "color1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1395,
											"name": "color2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1396,
											"name": "weight",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/color.helper.ts",
									"line": 10,
									"character": 12
								}
							]
						},
						{
							"id": 1384,
							"name": "shade",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1385,
									"name": "shade",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1386,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1387,
											"name": "weight",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/color.helper.ts",
									"line": 2,
									"character": 14
								}
							]
						},
						{
							"id": 1388,
							"name": "tint",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1389,
									"name": "tint",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1390,
											"name": "color",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1391,
											"name": "weight",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/color.helper.ts",
									"line": 6,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1397,
								1392,
								1384,
								1388
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/color.helper.ts",
							"line": 1,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1383
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/color.helper.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1577,
			"name": "\"theme/services/direction.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/direction.service.ts",
			"children": [
				{
					"id": 1578,
					"name": "NbLayoutDirection",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Layout direction."
					},
					"children": [
						{
							"id": 1579,
							"name": "LTR",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 9,
									"character": 5
								}
							],
							"defaultValue": "\"ltr\""
						},
						{
							"id": 1580,
							"name": "RTL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 10,
									"character": 5
								}
							],
							"defaultValue": "\"rtl\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1579,
								1580
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/direction.service.ts",
							"line": 8,
							"character": 29
						}
					]
				},
				{
					"id": 1581,
					"name": "NbLayoutDirectionService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Layout Direction Service.\nAllows to set or get layout direction and listen to its changes"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1583,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1585,
									"name": "new NbLayoutDirectionService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1586,
											"name": "direction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Optional",
													"type": {
														"type": "reference",
														"name": "Optional"
													},
													"arguments": {}
												},
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_LAYOUT_DIRECTION"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "NbLayoutDirection",
												"id": 1578
											},
											"defaultValue": " NbLayoutDirection.LTR"
										}
									],
									"type": {
										"type": "reference",
										"name": "NbLayoutDirectionService",
										"id": 1581
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 24,
									"character": 50
								}
							]
						},
						{
							"id": 1582,
							"name": "$directionChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 24,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplaySubject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new ReplaySubject(1)"
						},
						{
							"id": 1584,
							"name": "direction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Optional",
									"type": {
										"type": "reference",
										"name": "Optional"
									},
									"arguments": {}
								},
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_LAYOUT_DIRECTION"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 27,
									"character": 62
								}
							],
							"type": {
								"type": "reference",
								"name": "NbLayoutDirection",
								"id": 1578
							}
						},
						{
							"id": 1591,
							"name": "getDirection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1592,
									"name": "getDirection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns current layout direction.",
										"returns": "NbLayoutDirection.\n"
									},
									"type": {
										"type": "reference",
										"name": "NbLayoutDirection",
										"id": 1578
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 52,
									"character": 14
								}
							]
						},
						{
							"id": 1587,
							"name": "isLtr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1588,
									"name": "isLtr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if layout direction set to left to right.",
										"returns": "boolean.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 36,
									"character": 14
								}
							]
						},
						{
							"id": 1589,
							"name": "isRtl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1590,
									"name": "isRtl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns true if layout direction set to right to left.",
										"returns": "boolean.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 44,
									"character": 14
								}
							]
						},
						{
							"id": 1596,
							"name": "onDirectionChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1597,
									"name": "onDirectionChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered when direction was changed.",
										"returns": "Observable<NbLayoutDirection>.\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbLayoutDirection",
												"id": 1578
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 69,
									"character": 19
								}
							]
						},
						{
							"id": 1593,
							"name": "setDirection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1594,
									"name": "setDirection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets layout direction"
									},
									"parameters": [
										{
											"id": 1595,
											"name": "direction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirection",
												"id": 1578
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/direction.service.ts",
									"line": 60,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1583
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1582,
								1584
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1591,
								1587,
								1589,
								1596,
								1593
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/direction.service.ts",
							"line": 23,
							"character": 37
						}
					]
				},
				{
					"id": 1598,
					"name": "NB_LAYOUT_DIRECTION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Layout direction setting injection token."
					},
					"sources": [
						{
							"fileName": "theme/services/direction.service.ts",
							"line": 16,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbLayoutDirection",
								"id": 1578
							}
						]
					},
					"defaultValue": " new InjectionToken<NbLayoutDirection>('Layout direction')"
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1578
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1581
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1598
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/direction.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1486,
			"name": "\"theme/services/js-themes-registry.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/js-themes-registry.service.ts",
			"children": [
				{
					"id": 1487,
					"name": "NbJSThemesRegistry",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Js Themes registry - provides access to the JS themes' variables.\nUsually shouldn't be used directly, but through the NbThemeService class methods (getJsTheme)."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1489,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1490,
									"name": "new NbJSThemesRegistry",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1491,
											"name": "builtInThemes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_BUILT_IN_JS_THEMES"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbJSThemeOptions",
													"id": 1366
												}
											}
										},
										{
											"id": 1492,
											"name": "newThemes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_JS_THEMES"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbJSThemeOptions",
													"id": 1366
												}
											},
											"defaultValue": " []"
										}
									],
									"type": {
										"type": "reference",
										"name": "NbJSThemesRegistry",
										"id": 1487
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 29,
									"character": 27
								}
							]
						},
						{
							"id": 1488,
							"name": "themes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 29,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1504,
							"name": "combineByNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1505,
									"name": "combineByNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1506,
											"name": "newThemes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbJSThemeOptions",
													"id": 1366
												}
											}
										},
										{
											"id": 1507,
											"name": "oldThemes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbJSThemeOptions",
													"id": 1366
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "NbJSThemeOptions",
											"id": 1366
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 73,
									"character": 24
								}
							]
						},
						{
							"id": 1501,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1502,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Return a theme",
										"returns": "NbJSThemeOptions\n"
									},
									"parameters": [
										{
											"id": 1503,
											"name": "themeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbJSThemeOptions",
										"id": 1366
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 66,
									"character": 5
								}
							]
						},
						{
							"id": 1498,
							"name": "has",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1499,
									"name": "has",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks whether the theme is registered",
										"returns": "boolean\n"
									},
									"parameters": [
										{
											"id": 1500,
											"name": "themeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 57,
									"character": 5
								}
							]
						},
						{
							"id": 1508,
							"name": "isObject",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1509,
									"name": "isObject",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1510,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 95,
									"character": 18
								}
							]
						},
						{
							"id": 1511,
							"name": "mergeDeep",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1512,
									"name": "mergeDeep",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1513,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1514,
											"name": "sources",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 100,
									"character": 19
								}
							]
						},
						{
							"id": 1493,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1494,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Registers a new JS theme"
									},
									"parameters": [
										{
											"id": 1495,
											"name": "config",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "any"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1496,
											"name": "themeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "string"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1497,
											"name": "baseTheme",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "string\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes-registry.service.ts",
									"line": 47,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1489
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1488
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1504,
								1501,
								1498,
								1508,
								1511,
								1493
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes-registry.service.ts",
							"line": 27,
							"character": 31
						}
					]
				},
				{
					"id": 1515,
					"name": "BUILT_IN_THEMES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/services/js-themes-registry.service.ts",
							"line": 16,
							"character": 28
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "NbJSThemeOptions",
							"id": 1366
						}
					},
					"defaultValue": " [\n  DEFAULT_THEME,\n  COSMIC_THEME,\n  CORPORATE_THEME,\n]"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1487
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1515
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/js-themes-registry.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1458,
			"name": "\"theme/services/js-themes/corporate.theme\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/js-themes/corporate.theme.ts",
			"children": [
				{
					"id": 1465,
					"name": "CORPORATE_THEME",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 1467,
							"name": "base",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 14,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"default\""
						},
						{
							"id": 1466,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"corporate\""
						},
						{
							"id": 1468,
							"name": "variables",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1470,
									"name": "bg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 17,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#ffffff\""
								},
								{
									"id": 1480,
									"name": "danger",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 28,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.danger"
								},
								{
									"id": 1485,
									"name": "dangerLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 34,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.danger, 15)"
								},
								{
									"id": 1469,
									"name": "fg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 16,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#f1f5f8\""
								},
								{
									"id": 1471,
									"name": "fgHeading",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 18,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#181818\""
								},
								{
									"id": 1473,
									"name": "fgHighlight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 20,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#a4abb3\""
								},
								{
									"id": 1472,
									"name": "fgText",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 19,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#4b4b4b\""
								},
								{
									"id": 1478,
									"name": "info",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 26,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.info"
								},
								{
									"id": 1483,
									"name": "infoLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 32,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.info, 15)"
								},
								{
									"id": 1474,
									"name": "layoutBg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 21,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#f1f5f8\""
								},
								{
									"id": 1476,
									"name": "primary",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 24,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.primary"
								},
								{
									"id": 1481,
									"name": "primaryLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 30,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.primary, 15)"
								},
								{
									"id": 1475,
									"name": "separator",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 22,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#cdd5dc\""
								},
								{
									"id": 1477,
									"name": "success",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 25,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.success"
								},
								{
									"id": 1482,
									"name": "successLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 31,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.success, 15)"
								},
								{
									"id": 1479,
									"name": "warning",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 27,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.warning"
								},
								{
									"id": 1484,
									"name": "warningLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/corporate.theme.ts",
											"line": 33,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.warning, 15)"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1470,
										1480,
										1485,
										1469,
										1471,
										1473,
										1472,
										1478,
										1483,
										1474,
										1476,
										1481,
										1475,
										1477,
										1482,
										1479,
										1484
									]
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1467,
								1466
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1468
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes/corporate.theme.ts",
							"line": 12,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1459,
					"name": "palette",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 1464,
							"name": "danger",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#ff6b83\""
						},
						{
							"id": 1462,
							"name": "info",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#ba7fec\""
						},
						{
							"id": 1460,
							"name": "primary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#73a1ff\""
						},
						{
							"id": 1461,
							"name": "success",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#5dcfe3\""
						},
						{
							"id": 1463,
							"name": "warning",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/corporate.theme.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#ffa36b\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1464,
								1462,
								1460,
								1461,
								1463
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes/corporate.theme.ts",
							"line": 4,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1465,
						1459
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/js-themes/corporate.theme.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1430,
			"name": "\"theme/services/js-themes/cosmic.theme\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/js-themes/cosmic.theme.ts",
			"children": [
				{
					"id": 1437,
					"name": "COSMIC_THEME",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 1439,
							"name": "base",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 14,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"default\""
						},
						{
							"id": 1438,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"cosmic\""
						},
						{
							"id": 1440,
							"name": "variables",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1441,
									"name": "bg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 16,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#3d3780\""
								},
								{
									"id": 1452,
									"name": "danger",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 28,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.danger"
								},
								{
									"id": 1457,
									"name": "dangerLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 34,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.danger, 20)"
								},
								{
									"id": 1442,
									"name": "fg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 17,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#a1a1e5\""
								},
								{
									"id": 1443,
									"name": "fgHeading",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 18,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#ffffff\""
								},
								{
									"id": 1445,
									"name": "fgHighlight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 20,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#00f9a6\""
								},
								{
									"id": 1444,
									"name": "fgText",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 19,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#d1d1ff\""
								},
								{
									"id": 1450,
									"name": "info",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 26,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.info"
								},
								{
									"id": 1455,
									"name": "infoLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 32,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.info, 20)"
								},
								{
									"id": 1446,
									"name": "layoutBg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 21,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#2f296b\""
								},
								{
									"id": 1448,
									"name": "primary",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 24,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.primary"
								},
								{
									"id": 1453,
									"name": "primaryLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 30,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.primary, 20)"
								},
								{
									"id": 1447,
									"name": "separator",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 22,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#342e73\""
								},
								{
									"id": 1449,
									"name": "success",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 25,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.success"
								},
								{
									"id": 1454,
									"name": "successLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 31,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.success, 20)"
								},
								{
									"id": 1451,
									"name": "warning",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 27,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.warning"
								},
								{
									"id": 1456,
									"name": "warningLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/cosmic.theme.ts",
											"line": 33,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.warning, 20)"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1441,
										1452,
										1457,
										1442,
										1443,
										1445,
										1444,
										1450,
										1455,
										1446,
										1448,
										1453,
										1447,
										1449,
										1454,
										1451,
										1456
									]
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1439,
								1438
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1440
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes/cosmic.theme.ts",
							"line": 12,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1431,
					"name": "palette",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 1436,
							"name": "danger",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#ff386a\""
						},
						{
							"id": 1434,
							"name": "info",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#0088ff\""
						},
						{
							"id": 1432,
							"name": "primary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#7659ff\""
						},
						{
							"id": 1433,
							"name": "success",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#00d977\""
						},
						{
							"id": 1435,
							"name": "warning",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/cosmic.theme.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#ffa100\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1436,
								1434,
								1432,
								1433,
								1435
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes/cosmic.theme.ts",
							"line": 4,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1437,
						1431
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/js-themes/cosmic.theme.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1401,
			"name": "\"theme/services/js-themes/default.theme\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/js-themes/default.theme.ts",
			"children": [
				{
					"id": 1408,
					"name": "DEFAULT_THEME",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 1409,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/default.theme.ts",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"default\""
						},
						{
							"id": 1410,
							"name": "variables",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1413,
									"name": "bg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 18,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#ffffff\""
								},
								{
									"id": 1424,
									"name": "danger",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 30,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.danger"
								},
								{
									"id": 1429,
									"name": "dangerLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 36,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.danger, 15)"
								},
								{
									"id": 1414,
									"name": "fg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 19,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#a4abb3\""
								},
								{
									"id": 1415,
									"name": "fgHeading",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 20,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#2a2a2a\""
								},
								{
									"id": 1417,
									"name": "fgHighlight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 22,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#41d974\""
								},
								{
									"id": 1416,
									"name": "fgText",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 21,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#3b3b3b\""
								},
								{
									"id": 1411,
									"name": "fontMain",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 15,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif\""
								},
								{
									"id": 1412,
									"name": "fontSecondary",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 16,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif\""
								},
								{
									"id": 1422,
									"name": "info",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 28,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.info"
								},
								{
									"id": 1427,
									"name": "infoLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 34,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.info, 15)"
								},
								{
									"id": 1418,
									"name": "layoutBg",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 23,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#ebeff5\""
								},
								{
									"id": 1420,
									"name": "primary",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 26,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.primary"
								},
								{
									"id": 1425,
									"name": "primaryLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 32,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.primary, 15)"
								},
								{
									"id": 1419,
									"name": "separator",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 24,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#ebeef2\""
								},
								{
									"id": 1421,
									"name": "success",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 27,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.success"
								},
								{
									"id": 1426,
									"name": "successLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 33,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.success, 15)"
								},
								{
									"id": 1423,
									"name": "warning",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 29,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " palette.warning"
								},
								{
									"id": 1428,
									"name": "warningLight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "theme/services/js-themes/default.theme.ts",
											"line": 35,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": " NbColorHelper.tint(palette.warning, 15)"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1413,
										1424,
										1429,
										1414,
										1415,
										1417,
										1416,
										1411,
										1412,
										1422,
										1427,
										1418,
										1420,
										1425,
										1419,
										1421,
										1426,
										1423,
										1428
									]
								}
							],
							"sources": [
								{
									"fileName": "theme/services/js-themes/default.theme.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1409
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1410
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes/default.theme.ts",
							"line": 12,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 1402,
					"name": "palette",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 1407,
							"name": "danger",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/default.theme.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#ff4c6a\""
						},
						{
							"id": 1405,
							"name": "info",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/default.theme.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#4ca6ff\""
						},
						{
							"id": 1403,
							"name": "primary",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/default.theme.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#8a7fff\""
						},
						{
							"id": 1404,
							"name": "success",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/default.theme.ts",
									"line": 6,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#40dc7e\""
						},
						{
							"id": 1406,
							"name": "warning",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "theme/services/js-themes/default.theme.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#ffa100\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1407,
								1405,
								1403,
								1404,
								1406
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes/default.theme.ts",
							"line": 4,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1408,
						1402
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/js-themes/default.theme.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1365,
			"name": "\"theme/services/js-themes/theme.options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/js-themes/theme.options.ts",
			"children": [
				{
					"id": 1366,
					"name": "NbJSThemeOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1368,
							"name": "base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/theme.options.ts",
									"line": 3,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1367,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/theme.options.ts",
									"line": 2,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1369,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "theme/services/js-themes/theme.options.ts",
									"line": 4,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "NbJSThemeVariable",
								"id": 1370
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1368,
								1367,
								1369
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/js-themes/theme.options.ts",
							"line": 1,
							"character": 33
						}
					]
				},
				{
					"id": 1370,
					"name": "NbJSThemeVariable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"indexSignature": {
						"id": 1371,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1372,
								"name": "key",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"type": "reference",
									"name": "NbJSThemeVariable",
									"id": 1370
								}
							]
						}
					},
					"sources": [
						{
							"fileName": "theme/services/js-themes/theme.options.ts",
							"line": 7,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1366,
						1370
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/js-themes/theme.options.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1622,
			"name": "\"theme/services/ruler.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/ruler.service.ts",
			"children": [
				{
					"id": 1628,
					"name": "NbLayoutRulerService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Simple helper service to return Layout dimensions\nDepending of current Layout scroll mode (default or `withScroll` when scroll is moved to an element\ninside of the layout) corresponding dimensions will be returns  - of `documentElement` in first case and\n`.scrollable-container` in the second."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1629,
							"name": "contentDimensionsReq$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/ruler.service.ts",
									"line": 43,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 1630,
							"name": "getDimensions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1631,
									"name": "getDimensions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Content dimensions",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbLayoutDimensions",
												"id": 1623
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/ruler.service.ts",
									"line": 49,
									"character": 15
								}
							]
						},
						{
							"id": 1632,
							"name": "onGetDimensions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1633,
									"name": "onGetDimensions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/ruler.service.ts",
									"line": 63,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1629
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1630,
								1632
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/ruler.service.ts",
							"line": 41,
							"character": 33
						}
					]
				},
				{
					"id": 1623,
					"name": "NbLayoutDimensions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Layout dimensions type"
					},
					"children": [
						{
							"id": 1625,
							"name": "clientHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "clientHeight",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/services/ruler.service.ts",
									"line": 19,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1624,
							"name": "clientWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "clientWidth",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/services/ruler.service.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1627,
							"name": "scrollHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "scrollHeight",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/services/ruler.service.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1626,
							"name": "scrollWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "scrollWidth",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/services/ruler.service.ts",
									"line": 25,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1625,
								1624,
								1627,
								1626
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/ruler.service.ts",
							"line": 7,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1628
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1623
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/ruler.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1599,
			"name": "\"theme/services/scroll.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/scroll.service.ts",
			"children": [
				{
					"id": 1603,
					"name": "NbLayoutScrollService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Layout scroll service. Provides information about current scroll position,\nas well as methods to update position of the scroll.",
						"text": "The reason we added this service is that in Nebular there are two scroll modes:\n- the default mode when scroll is on body\n- and the `withScroll` mode, when scroll is removed from the body and moved to an element inside of the\n`nb-layout` component\n"
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1605,
							"name": "manualScroll$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 36,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "reference",
										"name": "NbScrollPosition",
										"id": 1600
									}
								]
							},
							"defaultValue": " new Subject<NbScrollPosition>()"
						},
						{
							"id": 1606,
							"name": "scroll$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 37,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new Subject<any>()"
						},
						{
							"id": 1604,
							"name": "scrollPositionReq$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 35,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"defaultValue": " new Subject<any>()"
						},
						{
							"id": 1619,
							"name": "fireScrollChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1620,
									"name": "fireScrollChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {},
									"parameters": [
										{
											"id": 1621,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 93,
									"character": 18
								}
							]
						},
						{
							"id": 1607,
							"name": "getPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1608,
									"name": "getPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns scroll position",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbScrollPosition",
												"id": 1600
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 44,
									"character": 13
								}
							]
						},
						{
							"id": 1617,
							"name": "onGetPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1618,
									"name": "onGetPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Subject",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 85,
									"character": 15
								}
							]
						},
						{
							"id": 1615,
							"name": "onManualScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1616,
									"name": "onManualScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"returns": "Observable<NbScrollPosition>.\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbScrollPosition",
												"id": 1600
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 77,
									"character": 16
								}
							]
						},
						{
							"id": 1613,
							"name": "onScroll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1614,
									"name": "onScroll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a stream of scroll events",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 69,
									"character": 10
								}
							]
						},
						{
							"id": 1609,
							"name": "scrollTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1610,
									"name": "scrollTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sets scroll position"
									},
									"parameters": [
										{
											"id": 1611,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " null"
										},
										{
											"id": 1612,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " null"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 60,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1605,
								1606,
								1604
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1619,
								1607,
								1617,
								1615,
								1613,
								1609
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/scroll.service.ts",
							"line": 33,
							"character": 34
						}
					]
				},
				{
					"id": 1600,
					"name": "NbScrollPosition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Scroll position type"
					},
					"children": [
						{
							"id": 1601,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "x - left",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 14,
									"character": 3
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1602,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "y - top",
								"tags": [
									{
										"tag": "type",
										"text": "{number}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "theme/services/scroll.service.ts",
									"line": 20,
									"character": 3
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1601,
								1602
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/scroll.service.ts",
							"line": 8,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1603
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1600
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/scroll.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1553,
			"name": "\"theme/services/spinner.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/spinner.service.ts",
			"children": [
				{
					"id": 1554,
					"name": "NbSpinnerService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service to control the global page spinner."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1557,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1559,
									"name": "new NbSpinnerService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1560,
											"name": "document",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_DOCUMENT"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbSpinnerService",
										"id": 1554
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 16,
									"character": 49
								}
							]
						},
						{
							"id": 1558,
							"name": "document",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_DOCUMENT"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 18,
									"character": 51
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1555,
							"name": "loaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 15,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Promise",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									]
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 1556,
							"name": "selector",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 16,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"nb-global-spinner\""
						},
						{
							"id": 1564,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1565,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clears the list of loader"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 32,
									"character": 7
								}
							]
						},
						{
							"id": 1568,
							"name": "executeAll",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1569,
									"name": "executeAll",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1570,
											"name": "done",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "(Anonymous function)"
											},
											"defaultValue": " () => {}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 44,
									"character": 20
								}
							]
						},
						{
							"id": 1575,
							"name": "getSpinnerElement",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1576,
									"name": "getSpinnerElement",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 70,
									"character": 27
								}
							]
						},
						{
							"id": 1573,
							"name": "hideSpinner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1574,
									"name": "hideSpinner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 63,
									"character": 21
								}
							]
						},
						{
							"id": 1566,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1567,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Start the loader process, show spinnder and execute loaders"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 39,
									"character": 6
								}
							]
						},
						{
							"id": 1561,
							"name": "registerLoader",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1562,
									"name": "registerLoader",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Appends new loader to the list of loader to be completed before\nspinner will be hidden"
									},
									"parameters": [
										{
											"id": 1563,
											"name": "method",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Promise<any>\n"
											},
											"type": {
												"type": "reference",
												"name": "Promise",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 25,
									"character": 16
								}
							]
						},
						{
							"id": 1571,
							"name": "showSpinner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1572,
									"name": "showSpinner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/spinner.service.ts",
									"line": 56,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1557
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1558,
								1555,
								1556
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1564,
								1568,
								1575,
								1573,
								1566,
								1561,
								1571
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/spinner.service.ts",
							"line": 13,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1554
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/spinner.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1516,
			"name": "\"theme/services/theme.service\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/services/theme.service.ts",
			"children": [
				{
					"id": 1517,
					"name": "NbThemeService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Main Nebular service. Includes various helper methods."
					},
					"decorators": [
						{
							"name": "Injectable",
							"type": {
								"type": "reference",
								"name": "Injectable"
							},
							"arguments": {}
						}
					],
					"children": [
						{
							"id": 1523,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1527,
									"name": "new NbThemeService",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1528,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"decorators": [
												{
													"name": "Inject",
													"type": {
														"type": "reference",
														"name": "Inject"
													},
													"arguments": {
														"token": "NB_THEME_OPTIONS"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1529,
											"name": "breakpointService",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbMediaBreakpointsService",
												"id": 1342
											}
										},
										{
											"id": 1530,
											"name": "jsThemesRegistry",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NbJSThemesRegistry",
												"id": 1487
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NbThemeService",
										"id": 1517
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 28,
									"character": 60
								}
							]
						},
						{
							"id": 1520,
							"name": "appendLayoutClass$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 26,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 1525,
							"name": "breakpointService",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 31,
									"character": 39
								}
							],
							"type": {
								"type": "reference",
								"name": "NbMediaBreakpointsService",
								"id": 1342
							}
						},
						{
							"id": 1522,
							"name": "changeWindowWidth$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 28,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplaySubject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"defaultValue": " new ReplaySubject<number>(2)"
						},
						{
							"id": 1518,
							"name": "currentTheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 24,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1526,
							"name": "jsThemesRegistry",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isConstructorProperty": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 32,
									"character": 38
								}
							],
							"type": {
								"type": "reference",
								"name": "NbJSThemesRegistry",
								"id": 1487
							}
						},
						{
							"id": 1524,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isProtected": true
							},
							"decorators": [
								{
									"name": "Inject",
									"type": {
										"type": "reference",
										"name": "Inject"
									},
									"arguments": {
										"token": "NB_THEME_OPTIONS"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 30,
									"character": 57
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1521,
							"name": "removeLayoutClass$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 27,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Subject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new Subject()"
						},
						{
							"id": 1519,
							"name": "themeChanges$",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 25,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplaySubject",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "Object"
									}
								]
							},
							"defaultValue": " new ReplaySubject(1)"
						},
						{
							"id": 1543,
							"name": "appendLayoutClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1544,
									"name": "appendLayoutClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Append a class to nb-layout"
									},
									"parameters": [
										{
											"id": 1545,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 104,
									"character": 19
								}
							]
						},
						{
							"id": 1531,
							"name": "changeTheme",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1532,
									"name": "changeTheme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Change current application theme"
									},
									"parameters": [
										{
											"id": 1533,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 42,
									"character": 13
								}
							]
						},
						{
							"id": 1534,
							"name": "changeWindowWidth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1535,
									"name": "changeWindowWidth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1536,
											"name": "width",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 47,
									"character": 19
								}
							]
						},
						{
							"id": 1537,
							"name": "getJsTheme",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1538,
									"name": "getJsTheme",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a theme object with variables (color/paddings/etc) on a theme change.\nOnce subscribed - returns current theme.",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "reference",
												"name": "NbJSThemeOptions",
												"id": 1366
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 57,
									"character": 12
								}
							]
						},
						{
							"id": 1546,
							"name": "onAppendLayoutClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1547,
									"name": "onAppendLayoutClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered when a new class is added to nb-layout through `appendLayoutClass` method",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 112,
									"character": 21
								}
							]
						},
						{
							"id": 1539,
							"name": "onMediaQueryChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1540,
									"name": "onMediaQueryChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggers media query breakpoint change\nReturns a pair where the first item is previous media breakpoint and the second item is current breakpoit.\n```ts\n [{ name: 'xs', width: 0 }, { name: 'md', width: 768 }] // change from `xs` to `md`\n```",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMediaBreakpoint",
													"id": 1339
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 73,
									"character": 20
								}
							]
						},
						{
							"id": 1551,
							"name": "onRemoveLayoutClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1552,
									"name": "onRemoveLayoutClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered when a class is removed from nb-layout through `removeLayoutClass` method",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 128,
									"character": 21
								}
							]
						},
						{
							"id": 1541,
							"name": "onThemeChange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1542,
									"name": "onThemeChange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Triggered when current theme is changed",
										"returns": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Observable",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 96,
									"character": 15
								}
							]
						},
						{
							"id": 1548,
							"name": "removeLayoutClass",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1549,
									"name": "removeLayoutClass",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes a class from nb-layout"
									},
									"parameters": [
										{
											"id": 1550,
											"name": "className",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/services/theme.service.ts",
									"line": 120,
									"character": 19
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1523
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1520,
								1525,
								1522,
								1518,
								1526,
								1524,
								1521,
								1519
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1543,
								1531,
								1534,
								1537,
								1546,
								1539,
								1551,
								1541,
								1548
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/services/theme.service.ts",
							"line": 21,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1517
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/services/theme.service.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1634,
			"name": "\"theme/theme.module\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/theme.module.ts",
			"children": [
				{
					"id": 1635,
					"name": "NbThemeModule",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"decorators": [
						{
							"name": "NgModule",
							"type": {
								"type": "reference",
								"name": "NgModule"
							},
							"arguments": {
								"obj": "{\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n  ],\n}"
							}
						}
					],
					"children": [
						{
							"id": 1636,
							"name": "forRoot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1637,
									"name": "forRoot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Main Theme Module",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 1638,
											"name": "nbThemeOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Main theme options"
											},
											"type": {
												"type": "reference",
												"name": "NbThemeOptions",
												"id": 1374
											}
										},
										{
											"id": 1639,
											"name": "nbJSThemes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "List of JS Themes, will be merged with default themes"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbJSThemeOptions",
													"id": 1366
												}
											}
										},
										{
											"id": 1640,
											"name": "nbMediaBreakpoints",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Available media breakpoints"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "NbMediaBreakpoint",
													"id": 1339
												}
											}
										},
										{
											"id": 1641,
											"name": "layoutDirection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Layout direction\n"
											},
											"type": {
												"type": "reference",
												"name": "NbLayoutDirection",
												"id": 1578
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ModuleWithProviders"
									}
								}
							],
							"sources": [
								{
									"fileName": "theme/theme.module.ts",
									"line": 56,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1636
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/theme.module.ts",
							"line": 43,
							"character": 26
						}
					]
				},
				{
					"id": 1642,
					"name": "nbWindowFactory",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1643,
							"name": "nbWindowFactory",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "theme/theme.module.ts",
							"line": 32,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1635
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1642
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/theme.module.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1373,
			"name": "\"theme/theme.options\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/nixa/Development/Projects/Akveo/nebular/src/framework/theme/theme.options.ts",
			"children": [
				{
					"id": 1374,
					"name": "NbThemeOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1375,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "theme/theme.options.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1375
							]
						}
					],
					"sources": [
						{
							"fileName": "theme/theme.options.ts",
							"line": 11,
							"character": 31
						}
					]
				},
				{
					"id": 1378,
					"name": "NB_BUILT_IN_JS_THEMES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/theme.options.ts",
							"line": 17,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "Object"
							}
						]
					},
					"defaultValue": " new InjectionToken<NbJSThemeOptions[]>('Nebular Built-in JS Themes')"
				},
				{
					"id": 1381,
					"name": "NB_DOCUMENT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/theme.options.ts",
							"line": 24,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					},
					"defaultValue": " new InjectionToken<Document>('Document')"
				},
				{
					"id": 1379,
					"name": "NB_JS_THEMES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/theme.options.ts",
							"line": 18,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "Object"
							}
						]
					},
					"defaultValue": " new InjectionToken<NbJSThemeOptions[]>('Nebular JS Themes')"
				},
				{
					"id": 1377,
					"name": "NB_MEDIA_BREAKPOINTS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/theme.options.ts",
							"line": 16,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "Object"
							}
						]
					},
					"defaultValue": " new InjectionToken<NbMediaBreakpoint[]>('Nebular Media Breakpoints')"
				},
				{
					"id": 1376,
					"name": "NB_THEME_OPTIONS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "theme/theme.options.ts",
							"line": 15,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "reference",
								"name": "NbThemeOptions",
								"id": 1374
							}
						]
					},
					"defaultValue": " new InjectionToken<NbThemeOptions>('Nebular Theme Options')"
				},
				{
					"id": 1380,
					"name": "NB_WINDOW",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "We're providing browser apis with tokens to improve testing capabilities."
					},
					"sources": [
						{
							"fileName": "theme/theme.options.ts",
							"line": 23,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "InjectionToken",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					},
					"defaultValue": " new InjectionToken<Window>('Window')"
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1374
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1378,
						1381,
						1379,
						1377,
						1376,
						1380
					]
				}
			],
			"sources": [
				{
					"fileName": "theme/theme.options.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1075,
				714,
				1073,
				942,
				926,
				1093,
				944,
				999,
				972,
				1021,
				1047,
				1,
				1094,
				6170,
				240,
				850,
				925,
				897,
				911,
				29,
				784,
				810,
				832,
				278,
				270,
				329,
				321,
				713,
				600,
				565,
				509,
				379,
				1104,
				1106,
				1095,
				1222,
				1220,
				1107,
				1315,
				1337,
				1332,
				1223,
				1303,
				1234,
				1299,
				4863,
				4882,
				4823,
				4804,
				4907,
				3499,
				3531,
				4343,
				4458,
				3410,
				3437,
				4910,
				4982,
				2387,
				2376,
				2087,
				2257,
				2313,
				2048,
				2191,
				2221,
				2293,
				2298,
				2335,
				2361,
				2124,
				2154,
				2386,
				1861,
				2392,
				2063,
				1876,
				1746,
				2047,
				1930,
				2411,
				2463,
				2467,
				2539,
				2590,
				2393,
				2465,
				1646,
				1743,
				1734,
				1728,
				1740,
				4086,
				4036,
				3856,
				3844,
				2859,
				3816,
				3534,
				4088,
				4035,
				2623,
				3791,
				3764,
				3602,
				3905,
				3860,
				3561,
				4602,
				4573,
				4556,
				4591,
				4597,
				4460,
				4491,
				4634,
				4553,
				4172,
				4214,
				4271,
				4284,
				4333,
				6128,
				5880,
				5896,
				5764,
				6167,
				5107,
				5136,
				5122,
				5219,
				5160,
				5224,
				2592,
				5062,
				5104,
				2878,
				2976,
				2611,
				5016,
				4990,
				4985,
				5059,
				3126,
				3217,
				2979,
				2599,
				4216,
				4229,
				4269,
				4335,
				4341,
				3223,
				3238,
				4089,
				4170,
				3864,
				5618,
				5469,
				5503,
				5627,
				1644,
				3275,
				3363,
				3240,
				4643,
				4696,
				4727,
				4729,
				4785,
				4753,
				4802,
				3369,
				3439,
				5243,
				5255,
				5225,
				5281,
				5405,
				5305,
				5410,
				5422,
				5467,
				3442,
				3496,
				5763,
				5692,
				5653,
				5758,
				5630,
				5725,
				5722,
				6169,
				1338,
				1382,
				1577,
				1486,
				1458,
				1430,
				1401,
				1365,
				1622,
				1599,
				1553,
				1516,
				1634,
				1373
			]
		}
	]
}